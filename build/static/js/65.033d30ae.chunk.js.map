{"version":3,"sources":["SofaSlider.js","GridSection.js","thermostat/TemperatureSensor.js","thermostat/Thermostat.js","ThermostatLayout.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/icons/Toys.js"],"names":["useStyles","makeStyles","half","alignItems","display","height","flexGrow","flexBasis","boxSizing","stack","justifyContent","flexWrap","width","marginRight","overflowX","overflowY","paddingRight","padLeft","paddingLeft","slider","margin","SofaSlider","props","classes","useState","value","setValue","useEffect","style","minWidth","className","name","variant","smallText","stackLabel","unit","Array","isArray","Math","floor","step","min","max","onChange","event","preChange","onChangeCommitted","change","disabled","defaultProps","default","tabs","theme","gridColumn","alignContent","padding","backgroundColor","palette","background","page","borderRadius","nopad","GridSection","isMobile","useContext","LayoutContext","container","item","spacing","key","xs","primary","break","secondary","children","TemperatureSensor","temp","applyLayoutCard","applyBackPage","wide","onClick","device","avatarState","temperature","deepvalue","friendlyName","listItem","bottomListItem","minHeight","xlistItem","listItemIndent","speedlistItem","buttonLine","button","fanButton","list","flexDirection","Thermostat","targetSetpoint","setTargetSetpoint","powerLevel","setPowerLevel","fanSetMode","setFanSetMode","supportedRange","ThermostatController","hasOwnProperty","configuration","lowerSetpoint","upperSetpoint","PowerLevelController","defaultValue","directive","thermostatMode","size","supportedModes","map","mode","e","color","ThermostatLayout","devicesByCategory","DataContext","thermostats","temperatureSensors","Fragment","endpointId","ListItemSecondaryAction","React","forwardRef","ref","other","_objectWithoutProperties","createElement","_extends","clsx","root","muiName","withStyles","position","right","top","transform","ListItemIcon","context","ListContext","alignItemsFlexStart","action","active","flexShrink","marginTop","_interopRequireDefault","require","Object","defineProperty","exports","_react","_default","d"],"mappings":"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","file":"static/js/65.033d30ae.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n         \n    half: {\n        alignItems: \"center\",\n        display: \"flex\",\n        height: 42,\n        flexGrow: 1,\n        flexBasis: 0,\n        boxSizing: \"border-box\",\n    },\n    stack: {\n        height: \"auto\",\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        marginRight: 8,\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n        alignItems: \"center\",\n        paddingRight: 8,\n    },\n    padLeft: {\n        paddingLeft: 16,\n    },\n    slider: {\n        margin: \"-18px\"\n    }\n\n});\n\nexport default function SofaSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0)\n    \n    useEffect(() => {\n        if (props.value) {\n            setValue(props.value)\n        }\n    }, [props.value]);\n\n    \n    function handlePreChange(event, value) {\n        setValue(value);\n        if (props.preChange) {\n            props.preChange(value);\n        }\n    }; \n\n    function handleChange(event,value) {\n        props.change(value);\n    }; \n   \n    function unitDisplay() {\n        if (Array.isArray(value)) {\n            return Math.floor(value[0])+' - '+ Math.floor(value[1])+props.unit\n        } else {\n            return Math.floor(value)+props.unit\n        }\n    }\n   \n    return (\n        <div style={{ \"minWidth\": props.minWidth }} className={ props.padLeft ? classes.stack+\" \"+classes.padLeft: ( props.half ? classes.half : classes.stack) } >\n        { props.name ?\n            <Typography variant={ props.smallText ? \"caption\" : \"subtitle1\" } className={classes.stackLabel} >{props.name}</Typography>\n        :   null }\n        { props.unit ?\n            <Typography variant=\"caption\" className={classes.stackLabel} >{unitDisplay()}</Typography>\n        : null }\n            <Slider\n                value={value} step={props.step} \n                min={props.min} max={props.max}\n                onChange={handlePreChange}\n                onChangeCommitted={handleChange}\n                disabled={props.disabled}\n            />\n        </div>\n    );\n}\n\nSofaSlider.defaultProps = {\n    name: '',\n    unit: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    default: 0,\n    value: 0,\n    tabs: '',\n    disabled: false,\n    padLeft: false,\n    half: false,\n    minWidth: 240,\n    smallText: false,\n}\n\n\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        gridColumn: {\n            margin: 1,\n            overflowX: \"hidden\",\n            overflowY: \"hidden\",\n            alignContent: \"start\",\n            padding: \"3px !important\",\n            backgroundColor: theme.palette.background.page,\n            borderRadius: \"4px 4px 4px 4px\",\n        },\n        nopad: {\n            padding: 0,\n        }\n    }\n});\n\n\nexport default function GridSection(props) {\n    \n    const { isMobile } = useContext(LayoutContext);\n    const classes = useStyles();\n\n    return (\n        <Grid container item spacing={1} key={props.name} xs={12} className={ classes.gridColumn}>\n            {props.name &&\n                <Grid item xs={12} className={classes.nopad}>\n                <List className={classes.nopad}>\n                    <ListItem>\n                        <ListItemText primary={props.name} />\n                        { (!isMobile || !props.break) &&\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        }\n                    </ListItem>\n                    { (isMobile && props.break) &&\n                        <ListItem>\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    }\n                </List>\n                </Grid>\n            }\n            {props.children}\n        </Grid>\n    );\n}\n\nGridSection.defaultProps = {\n    break: false\n}\n \n\n","import React, { useContext }from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { LayoutContext } from '../layout/NewLayoutProvider';\n\nimport GridItem from '../GridItem'\nimport ToggleAvatar from '../ToggleAvatar';\n\nexport default function TemperatureSensor(props) { \n    \n    const { applyLayoutCard, applyBackPage } = useContext(LayoutContext);\n    \n    function tempColor(temp) {\n        if (!temp) { return 'disabled' }\n        if (temp>=74) { return \"hot\" }\n        if (temp<70) { return \"cool\" }\n        return \"mid\";\n    }\n    \n    function switchToHistory() {\n        applyBackPage('ThermostatLayout',{})\n        applyLayoutCard('ThermostatHistory', { 'device':props.device, 'days':7})\n    }\n\n    return (\n        \n        <GridItem wide={props.wide} >\n            <ListItem onClick={props.onClick}>\n                <ToggleAvatar onClick={ () => switchToHistory()} \n                    avatarState={ tempColor(props.device.TemperatureSensor.temperature.deepvalue) }>\n                    {props.device.TemperatureSensor.temperature.value ? props.device.TemperatureSensor.temperature.deepvalue : '--'}\n                </ToggleAvatar>\n                <ListItemText primary={props.device.friendlyName}  />\n           </ListItem>\n        </GridItem>\n    );\n}\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport { LayoutContext } from '../layout/NewLayoutProvider';\nimport { makeStyles } from '@material-ui/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ToggleAvatar from '../ToggleAvatar';\nimport Button from '@material-ui/core/Button';\nimport ToysIcon from '@material-ui/icons/Toys';\n\nimport GridItem from '../GridItem'\nimport SofaSlider from '../SofaSlider'\n\nconst useStyles = makeStyles({\n\n    listItem: {\n        padding: \"0 0 16 24\",\n        width: '100%',\n    },\n    bottomListItem: {\n        padding: \"0 0 0 24\",\n        width: '100%',\n        minHeight: 64,\n    },\n\n    xlistItem: {\n        padding: \"16px 16px 8px 16px\",\n    },\n    listItemIndent: {\n        padding: \"16 0 8 64\",\n        width: '100%',\n    },\n    speedlistItem: {\n        padding: \"0 0 8 40\",\n        width: '100%',\n    },\n    buttonLine: {\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"flex-end\",\n        padding: \"0 16 8 0\",\n    },\n    button: {\n        minWidth: 36\n    },\n    fanButton: {\n        minWidth: 36,\n        marginRight: 24,\n    },\n    list: {\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n    },\n});\n\nexport default function Thermostat(props) {\n    \n    const classes = useStyles();\n    const { applyLayoutCard, applyBackPage } = useContext(LayoutContext);\n\n    const [targetSetpoint, setTargetSetpoint] = useState(70);\n    const [powerLevel, setPowerLevel] = useState(false)\n    const [fanSetMode, setFanSetMode] = useState(false);\n\n    useEffect(() => {\n        if (props.device.ThermostatController.hasOwnProperty('upperSetpoint')) {\n            setTargetSetpoint([props.device.ThermostatController.lowerSetpoint.deepvalue, props.device.ThermostatController.upperSetpoint.deepvalue ])\n        } else {\n            setTargetSetpoint(props.device.ThermostatController.targetSetpoint.deepvalue)\n        }\n        if (props.device.hasOwnProperty('PowerLevelController')) {\n            setPowerLevel(props.device.PowerLevelController.powerLevel.value)\n        }\n    }, [props.device]);\n\n\n    function supportedModes() {\n\n        if (props.device.ThermostatController.hasOwnProperty('configuration')) {\n            if (props.device.ThermostatController.configuration.hasOwnProperty('supportedModes')) {\n                return props.device.ThermostatController.configuration.supportedModes\n            }\n        }\n        return []\n    }\n\n    function supportedRange() {\n\n        if (props.device.ThermostatController.hasOwnProperty('configuration')) {\n            if (props.device.ThermostatController.configuration.hasOwnProperty('supportedRange')) {\n                return props.device.ThermostatController.configuration.supportedRange\n            }\n        }\n        return [60,90]\n    }\n                    \n    \n    function tempColor(temp) {\n        if (!temp) { return 'disabled' } \n        if (temp>=74) { return \"hot\" }\n        if (temp<70) { return \"cool\" }\n        return \"mid\";\n    }\n    \n    function handlePrePowerLevelChange(event) {\n        setPowerLevel(event);\n    }; \n    \n    function handlePowerLevelChange(event) {\n        props.device.PowerLevelController.directive(\"SetPowerLevel\", {\"powerLevel\": event})\n    }; \n\n    function handlePreSetpointChange(event) {\n        setTargetSetpoint(event);\n    }; \n    \n    function handleSetpointChange(event) {\n        props.device.ThermostatController.directive(\"SetTargetTemperature\", { \"targetSetpoint\": { \"value\": event, \"scale\": \"FAHRENHEIT\"}} )\n    }; \n\n    function handleSetMode(event) {\n        props.device.ThermostatController.directive(\"SetThermostatMode\",  {\"thermostatMode\" : { \"value\": event }} )\n    }; \n    \n    function switchToHistory() {\n        applyBackPage('ThermostatLayout',{})\n        applyLayoutCard('ThermostatHistory', { 'device':props.device, 'days':7})\n    }\n\n\n    return ( \n        <GridItem>\n            <List className={classes.list} >\n                <ListItem>\n                    <ToggleAvatar \n                        avatarState={ tempColor(props.device.TemperatureSensor.temperature.deepvalue) }\n                        onClick={ () => switchToHistory()} >\n                            {props.device.TemperatureSensor.temperature.deepvalue ? props.device.TemperatureSensor.temperature.deepvalue : '--'}\n                    </ToggleAvatar>\n                    <SofaSlider min={supportedRange()[0]} max={supportedRange()[1]} defaultValue={70} value={targetSetpoint} unit={\"°\"} name={props.device.friendlyName}\n                                preChange={handlePreSetpointChange} change={handleSetpointChange} \n                                disabled={ props.device.ThermostatController.thermostatMode.value==='OFF' } />\n                </ListItem>\n                <ListItem className={classes.bottomListItem}>\n                    <>\n                        { powerLevel!==false &&\n                            <>\n                                { fanSetMode ?\n                                    <>\n                                        <Button size=\"small\" className={classes.fanButton } onClick={ ()=> setFanSetMode(false)}>\n                                            {props.device.ThermostatController.thermostatMode.value}\n                                        </Button>\n                                        <ListItemIcon><ToysIcon /></ListItemIcon>\n                                        <SofaSlider value={powerLevel} step={10} unit={\"%\"} name={\"Fan Speed\"} padLeft={false} minWidth={100}\n                                            preChange={handlePrePowerLevelChange} change={handlePowerLevelChange} />\n                                    </>\n                                :\n                                    <Button size=\"small\" className={classes.fanButton } onClick={ ()=> setFanSetMode(true)}>\n                                        <ToysIcon />{powerLevel}%\n                                    </Button>                        \n                                }\n                            </>\n                        }\n                    </>\n                    <>\n                        {!fanSetMode &&\n                        <>\n                            { supportedModes().map((mode) => (\n                                <Button onClick={ (e) => handleSetMode(mode)} size=\"small\" key = {mode+'m'} color={ props.device.ThermostatController.thermostatMode.value===mode ? \"primary\" : \"default\" } className={classes.button }>\n                                {mode}\n                                </Button>\n                            ))}\n                        </>\n                        }\n                    </>\n                </ListItem>\n            </List>\n        </GridItem>\n    );\n}\n","import React from 'react';\nimport { useContext } from 'react';\nimport { DataContext } from './DataContext/DataProvider';\n\nimport GridSection from './GridSection';\nimport TemperatureSensor from './thermostat/TemperatureSensor';\nimport Thermostat from './thermostat/Thermostat';\n\nexport default function ThermostatLayout(props) {\n\n    const { devicesByCategory } = useContext(DataContext);\n    const thermostats=devicesByCategory('THERMOSTAT')\n    const temperatureSensors=devicesByCategory('TEMPERATURE_SENSOR')\n\n    return (    \n        <React.Fragment>\n            <GridSection name={\"Thermostats\"}>\n                { thermostats.map((device) =>\n                    <Thermostat key={ device.endpointId } device={ device }  />\n                )}\n            </GridSection>\n            \n            <GridSection name={\"Temperatures\"}>\n                { temperatureSensors.map((device) =>\n                    <TemperatureSensor key={ device.endpointId } device={ device } />\n                )}\n            </GridSection>\n        </React.Fragment>\n    )\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 12c0-3 2.5-5.5 5.5-5.5S23 9 23 12H12zm0 0c0 3-2.5 5.5-5.5 5.5S1 15 1 12h11zm0 0c-3 0-5.5-2.5-5.5-5.5S9 1 12 1v11zm0 0c3 0 5.5 2.5 5.5 5.5S15 23 12 23V12z\"\n}), 'Toys');\n\nexports.default = _default;"],"sourceRoot":""}