{"version":3,"sources":["GridSection.js","devices/Zone.js","ZoneLayout.js","../node_modules/@material-ui/icons/Clear.js","../node_modules/@material-ui/icons/Done.js"],"names":["useStyles","makeStyles","theme","base","margin","overflowX","alignContent","padding","borderRadius","gridColumn","overflowY","scrollColumn","maxHeight","mobile","height","desktop","background","backgroundColor","palette","layer","section","center","justifyContent","GridSection","props","isMobile","useContext","LayoutContext","classes","useState","show","setShow","container","item","spacing","key","name","xs","className","classNames","scroll","nopad","primary","onClick","break","secondary","children","defaultProps","Zone","getSensorController","device","hasOwnProperty","ContactSensor","MotionSensor","history","endpointId","avatarState","detectionState","value","changeTime","format","ZoneLayout","applyLayoutCard","applyBackPage","getChangeTimesForDevices","DeviceContext","allzones","deviceStatesByController","DataContext","changeTimes","setChangeTimes","historyZone","useEffect","then","result","console","log","Fragment","secZones","i","length","description","includes","push","getSecurityZones","map","friendlyName","time","autoZones","getAutomationZones","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d"],"mappings":"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","file":"static/js/117.952da19d.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport classNames from 'classnames';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        base: {\n            margin: 1,\n            overflowX: \"hidden\",\n            alignContent: \"start\",\n            padding: \"3px !important\",\n            borderRadius: \"4px 4px 4px 4px\",\n        },\n        gridColumn: {\n            overflowY: \"hidden\",\n        },\n        scrollColumn: {\n            overflowY: \"auto\",\n            maxHeight: \"100%\",\n        },\n        mobile: {\n            height: 16,\n        },\n        desktop: {\n        },\n        background: {\n            backgroundColor: theme.palette.layer.section,\n        },\n        center: {\n            justifyContent: \"center\",\n        }\n    }\n});\n\n\nexport default function GridSection(props) {\n    \n    const { isMobile } = useContext(LayoutContext);\n    const classes = useStyles();\n    const [show, setShow] = useState(props.show);\n\n    return (\n        <Grid container item spacing={1} key={props.name} xs={props.xs} \n            className={ classNames(classes.base, props.scroll ? classes.scrollColumn : classes.gridColumn, props.background ? classes.background : null)} \n        >\n\n            {props.name &&\n                <Grid item xs={12} className={classes.nopad}>\n                <List className={classes.nopad} >\n                    <ListItem className={ isMobile ? classes.mobile : classes.desktop} >\n                        <ListItemText primary={props.name} onClick={ () => setShow(!show) } />\n                        { (!isMobile || !props.break) &&\n                            <>\n                                {props.secondary}\n                            </>\n                        }\n                    </ListItem >\n                    { (isMobile && props.break) &&\n                        <ListItem className={classes.center}>\n                                {props.secondary}\n                        </ListItem>\n                    }\n                </List>\n                </Grid>\n            }\n            { show && props.children}\n        </Grid>\n    );\n}\n\nGridSection.defaultProps = {\n    break: false,\n    show: true,\n    scroll: false,\n    xs: 12,\n    background: true,\n}\n \n\n","import React from 'react';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ToggleAvatar from '../ToggleAvatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridItem from '../GridItem';\n\nexport default function Zone(props) {    \n\n    function getSensorController() {\n        if (props.device.hasOwnProperty('ContactSensor')) {\n            return props.device.ContactSensor\n        } else if (props.device.hasOwnProperty('MotionSensor')) {\n            return props.device.MotionSensor\n        }\n        return null\n    }\n\n    return (\n        <GridItem >\n            <ListItem onClick={() => props.history(props.name, props.endpointId)}>\n                <ToggleAvatar avatarState={ getSensorController().detectionState.value==='NOT_DETECTED' ? 'closed' : 'open' } > \n                    { getSensorController().detectionState.value==='NOT_DETECTED' ? <DoneIcon /> : <ClearIcon /> }\n                </ToggleAvatar>\n                <ListItemText primary={props.name} secondary={props.changeTime==='Unknown' ? 'Unknown':<Moment format=\"ddd MMM D h:mm:sa\">{props.changeTime}</Moment>} />\n            </ListItem>\n        </GridItem>\n    );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport { DataContext } from './DataContext/DataProvider';\nimport { DeviceContext } from './DataContext/DeviceProvider';\n\nimport Zone from './devices/Zone';\nimport GridSection from './GridSection';\n\nexport default function ZoneLayout(props) {\n\n    const { applyLayoutCard, applyBackPage } = useContext(LayoutContext);\n    const { getChangeTimesForDevices } = useContext(DeviceContext)\n    const { deviceStatesByController } = useContext(DataContext)\n    const allzones = deviceStatesByController(['ContactSensor','MotionSensor'])\n    const [changeTimes, setChangeTimes] = useState({})\n\n    useEffect(() => {\n        getChangeTimesForDevices('detectionState',allzones).then(result => { console.log('type change', typeof(result)); setChangeTimes(result) } )\n    // eslint-disable-next-line \n    }, []);\n    \n    function getSecurityZones() {\n        var secZones=[]\n        for (var i = 0; i < allzones.length; i++) {\n            if (!allzones[i].description.includes('(Automation)')) {\n                secZones.push(allzones[i])\n            } \n        }\n        return secZones\n    }\n    \n    function getAutomationZones() {\n        var autoZones=[]\n        for (var i = 0; i < allzones.length; i++) { \n            if (allzones[i].description.includes('(Automation)')) {\n                autoZones.push(allzones[i])\n            } \n        }\n        return autoZones\n    }\n\n    function historyZone(name, endpointId) {\n        applyBackPage('ZoneLayout', {} )\n        applyLayoutCard('HistoryLayout', {\"name\": name, \"endpointId\": endpointId, \"property\":\"detectionState\"})\n    }\n\n    return (    \n        <React.Fragment>\n            <GridSection name={\"Security Zones\"} >\n                { getSecurityZones().map(device =>\n                    <Zone history={historyZone} key={ device.endpointId } endpointId={ device.endpointId } name={ device.friendlyName } device={ device } changeTime={(changeTimes && (device.endpointId in changeTimes)) ? changeTimes[device.endpointId].time : \"Unknown\"}  />\n                )}\n            </GridSection>\n            <GridSection name={\"Automation Zones\"} >\n                { getAutomationZones().map(device =>\n                    <Zone history={historyZone} key={ device.endpointId } endpointId={ device.endpointId } name={ device.friendlyName } device={ device } changeTime={(changeTimes && (device.endpointId in changeTimes)) ? changeTimes[device.endpointId].time : \"Unknown\"}  />\n                )}\n            </GridSection>\n        </React.Fragment>\n    )\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;"],"sourceRoot":""}