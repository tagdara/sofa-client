{"version":3,"sources":["ToggleChip.js","ModeLines.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/esm/Chip/Chip.js"],"names":["useStyles","makeStyles","theme","off","margin","color","palette","primary","contrastText","backgroundColor","main","on","background","ToggleChip","props","classes","label","className","chipState","onClick","ModeLines","getModes","modes","k","device","interfaces","length","controller","mc","modename","capabilityResources","friendlyNames","value","text","modechoices","j","configuration","supportedModes","modeResources","Object","keys","map","mode","key","modechoice","e","event","directive","handleModeChoice","createSvgIcon","React","createElement","d","Chip","forwardRef","ref","avatarProp","avatar","clickableProp","clickable","_props$color","ComponentProp","component","deleteIconProp","deleteIcon","_props$disabled","disabled","iconProp","icon","onDelete","onKeyUp","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","chipRef","useRef","handleRef","useForkRef","handleDeleteIconClick","stopPropagation","small","Component","ButtonBase","moreProps","customClasses","clsx","concat","capitalize","deleteIconSmall","isValidElement","cloneElement","CancelIcon","avatarSmall","iconSmall","_extends","role","undefined","root","outlined","outlinedPrimary","secondary","outlinedSecondary","sizeSmall","deletable","tabIndex","currentTarget","target","current","blur","labelSmall","withStyles","type","grey","deleteIconColor","fade","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","getContrastText","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","opacity","pointerEvents","marginLeft","marginRight","width","dark","colorPrimary","colorSecondary","userSelect","WebkitTapHighlightColor","emphasize","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","action","hoverOpacity","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","overflow","textOverflow","paddingLeft","paddingRight","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","name"],"mappings":"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","file":"static/js/113.9d76aaa4.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles(theme => {\n    return {        \n        off: {\n            margin: 4,\n            color: theme.palette.primary.contrastText, \n            '&:hover': {\n                    backgroundColor: theme.palette.primary.main,\n                    color: theme.palette.primary.contrastText,\n                }\n        },\n        on: {\n            margin: 4,\n            color: theme.palette.primary.contrastText,\n            background: theme.palette.primary.main,\n            '&:hover': {\n                    backgroundColor: theme.palette.primary.main,\n                    color: theme.palette.primary.contrastText,\n                },\n            '&:focus': {\n                backgroundColor: theme.palette.primary.main,\n                color: theme.palette.primary.contrastText,\n            }\n        }\n    }\n});\n\nexport default function ToggleChip(props) {\n\n    const classes = useStyles();\n\n    return (\n        <Chip \n            label={props.label}\n            className={ classes[props.chipState] }\n            onClick={ props.onClick}\n        />\n    )\n};\n\n\n\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport ToggleChip from './ToggleChip'\n\nexport default function ModeLines(props) {\n\n    function handleModeChoice(event, mode, modechoice) {\n        props.device[mode].directive('SetMode', { \"mode\": modechoice })\n    }; \n\n    function getModes() {\n        \n        var modes={}\n        for (var k = 0; k < props.device.interfaces.length; k++) {\n            if (props.device[props.device.interfaces[k]].controller==='ModeController') {\n                var mc=props.device[props.device.interfaces[k]]\n                var modename=mc.capabilityResources.friendlyNames[0].value.text\n                var modechoices=[]\n                for (var j = 0; j < mc.configuration.supportedModes.length; j++) {\n                    modechoices[mc.configuration.supportedModes[j].value] = mc.configuration.supportedModes[j].modeResources.friendlyNames[0].value.text\n                }\n                modes[modename]=modechoices\n            }\n        }\n        return modes\n    }\n   \n    return (\n        Object.keys(getModes()).map(mode => \n            <ListItem key={mode}>\n                <ListItemText primary={mode} key={mode} />\n                { Object.keys(getModes()[mode]).map(modechoice => \n                    <ToggleChip key = { modechoice } label = { getModes()[mode][modechoice] } chipState={ props.device[mode].mode.value===modechoice ? \"on\" : \"off\"} onClick={ (e) => handleModeChoice(e, mode, modechoice)} />\n                )}\n            </ListItem>\n        )\n    )\n}\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO remove in V5\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element`. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\nvar Chip = React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Ignore events from children of `Chip`.\n\n\n    if (event.currentTarget !== event.target) {\n      return;\n    }\n\n    var key = event.key;\n\n    if (onDelete && (key === 'Backspace' || key === 'Delete')) {\n      onDelete(event);\n    } else if (key === 'Escape' && chipRef.current) {\n      chipRef.current.blur();\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && React.isValidElement(deleteIconProp) ? React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && React.isValidElement(avatarProp)) {\n    avatar = React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && React.isValidElement(iconProp)) {\n    icon = React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: the Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      primary: classes.outlinedPrimary,\n      secondary: classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);"],"sourceRoot":""}