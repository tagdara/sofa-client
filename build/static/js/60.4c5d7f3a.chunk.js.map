{"version":3,"sources":["LightbulbOutline.js","SofaSlider.js","DotLevel.js","light/LightSliderBrightness.js","light/LightSliderTemperature.js","light/LightSliderColor.js","light/Light.js","AreaLine.js","AreaHero.js"],"names":["LightbulbOutlineIcon","props","d","muiName","useStyles","makeStyles","half","alignItems","display","height","flexGrow","flexBasis","boxSizing","stack","justifyContent","flexWrap","width","marginRight","overflowX","overflowY","paddingRight","padLeft","paddingLeft","slider","margin","SofaSlider","classes","useState","value","setValue","useEffect","style","minWidth","className","name","variant","smallText","stackLabel","unit","Array","isArray","Math","floor","step","min","max","onChange","event","preChange","onChangeCommitted","change","disabled","defaultProps","default","tabs","selectedIcon","selectedZero","zeroIcon","smallIcon","working","DotLevel","level","setLevel","setWorking","Fragment","map","lev","key","color","onClick","select","applyLevel","size","indent","LightSliderBrightness","device","BrightnessController","brightness","directive","PowerController","powerState","LightSliderTemperature","ColorTemperatureController","colorTemperatureInKelvin","wide","button","revealIcon","sl2sb","h","SL","s","l","SB","hue","saturation","t","sb2sl","LightSliderColor","reveal","setColor","ColorController","onChangeComplete","hsl","sendsb","hsb","iconSize","tile","sliderPaper","flexDirection","padding","nostack","maxWidth","lightSwitch","marginLeft","lightbar","placeholder","listItem","maxHeight","Light","showAll","setShowAll","isReachable","hasOwnProperty","EndpointHealth","connectivity","console","log","e","nopaper","xs","thinmargin","noback","avatarState","primary","friendlyName","secondary","checked","target","brightControl","tempControl","colorControl","halves","AreaLine","deviceByEndpointId","useContext","DataContext","areaListItem","selectArea","area","AreaController","shortcuts","length","includes","scene","indexOf","SceneController","AreaHero","applyLayoutCard","LayoutContext","lightCount","sortByName","lightsOn","thisarea","areas","undefined","children","i","child","displayCategories","push","getAreaAreas","endpointId","getAreaLights","light"],"mappings":"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","file":"static/js/60.4c5d7f3a.chunk.js","sourcesContent":["/* eslint-disable max-len */\n\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nfunction LightbulbOutlineIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\" />\n    </SvgIcon>\n  );\n}\n\nLightbulbOutlineIcon.muiName = 'SvgIcon';\n\nexport default LightbulbOutlineIcon;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n         \n    half: {\n        alignItems: \"center\",\n        display: \"flex\",\n        height: 42,\n        flexGrow: 1,\n        flexBasis: 0,\n        boxSizing: \"border-box\",\n    },\n    stack: {\n        height: \"auto\",\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        marginRight: 8,\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n        alignItems: \"center\",\n        paddingRight: 8,\n    },\n    padLeft: {\n        paddingLeft: 16,\n    },\n    slider: {\n        margin: \"-18px\"\n    }\n\n});\n\nexport default function SofaSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0)\n    \n    useEffect(() => {\n        if (props.value) {\n            setValue(props.value)\n        }\n    }, [props.value]);\n\n    \n    function handlePreChange(event, value) {\n        setValue(value);\n        if (props.preChange) {\n            props.preChange(value);\n        }\n    }; \n\n    function handleChange(event,value) {\n        props.change(value);\n    }; \n   \n    function unitDisplay() {\n        if (Array.isArray(value)) {\n            return Math.floor(value[0])+' - '+ Math.floor(value[1])+props.unit\n        } else {\n            return Math.floor(value)+props.unit\n        }\n    }\n   \n    return (\n        <div style={{ \"minWidth\": props.minWidth }} className={ props.padLeft ? classes.stack+\" \"+classes.padLeft: ( props.half ? classes.half : classes.stack) } >\n        { props.name ?\n            <Typography variant={ props.smallText ? \"caption\" : \"subtitle1\" } className={classes.stackLabel} >{props.name}</Typography>\n        :   null }\n        { props.unit ?\n            <Typography variant=\"caption\" className={classes.stackLabel} >{unitDisplay()}</Typography>\n        : null }\n            <Slider\n                value={value} step={props.step} \n                min={props.min} max={props.max}\n                onChange={handlePreChange}\n                onChangeCommitted={handleChange}\n                disabled={props.disabled}\n            />\n        </div>\n    );\n}\n\nSofaSlider.defaultProps = {\n    name: '',\n    unit: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    default: 0,\n    value: 0,\n    tabs: '',\n    disabled: false,\n    padLeft: false,\n    half: false,\n    minWidth: 240,\n    smallText: false,\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport LensIcon from '@material-ui/icons/Lens';\nimport TripOriginIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles({\n\n    selectedIcon: {\n        height: 24,\n        width: 24,\n    },\n    selectedZero: {\n        height: 20,\n        width: 20,\n    },\n    zeroIcon: {\n        margin: 6,\n        height: 10,\n        width: 10,\n    },\n    smallIcon: {\n        margin: 8,\n        height: 8,\n        width: 8,\n    },\n    working: {\n        margin: 0,\n    }\n});\n\nexport default function DotLevel(props) {\n    \n    const classes = useStyles();\n    const levels = [0,1,2,3]\n    const [level,setLevel] = useState(props.level);\n    const [working,setWorking] = useState(false);\n\n    useEffect(() => {\n        setLevel(props.level)\n        setWorking(false)\n    }, [props.level])\n    \n    function applyLevel(lev) {\n        setWorking(true)\n        setLevel(lev)\n        props.select(lev)\n    }\n\n    return (\n        <React.Fragment >\n            { levels.map((lev) =>\n            <IconButton key={lev} color={ level >0 ? \"primary\" : \"default\" } onClick={ () => applyLevel(lev) } >\n                { lev===0  ?\n                <>\n                    { working && lev===level ?\n                        <CircularProgress size={24} className={classes.working} />\n                    :\n                        <TripOriginIcon className={ lev===level ? classes.selectedZero : classes.zeroIcon} />\n                    }\n                </>\n                :\n                <>\n                    { (working && lev===level) ?\n                        <CircularProgress size={24} className={classes.working} />\n                    :\n                    <LensIcon className={ lev===level ? classes.selectedIcon : classes.smallIcon} />\n                    }\n                </>\n                }\n            </IconButton>\n            )}\n        </React.Fragment >\n    );\n}\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport SofaSlider from '../SofaSlider';\nimport BrightnessLowIcon from '@material-ui/icons/BrightnessLow';\n\nconst useStyles = makeStyles({\n        \n    indent: {\n        paddingLeft: 40,\n        paddingRight: 8,\n    }\n});\n\nexport default function LightSliderBrightness(props) {\n    \n    const classes = useStyles();\n\n    function handleBrightnessChange(event) {\n        props.device.BrightnessController.directive('SetBrightness', { \"brightness\" : event })\n    }; \n\n    return (\n            <ListItem>\n                <ListItemIcon className={classes.indent}><BrightnessLowIcon /></ListItemIcon>\n                <SofaSlider\n                    name=\"Brightness\" smallText={true} value={props.device.BrightnessController.brightness.value} unit=\"%\"\n                    min={0} max={100} step={10}\n                    change={handleBrightnessChange}\n                    disabled={!props.device.PowerController.powerState.value}\n                />\n            </ListItem>\n    );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport SofaSlider from '../SofaSlider';\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\n\nconst useStyles = makeStyles({\n        \n    indent: {\n        paddingLeft: 40,\n        paddingRight: 8,\n    }\n});\n\nexport default function LightSliderTemperature(props) {\n\n    const classes = useStyles();\n\n    function handleColorTemperatureChange(value) {\n        props.device.ColorTemperatureController.directive('SetColorTemperature', { \"colorTemperatureInKelvin\": value} )\n    }; \n\n    return (\n        <ListItem>\n            <ListItemIcon className={classes.indent}><AcUnitIcon /></ListItemIcon>\n            <SofaSlider\n                name=\"Temperature\" smallText={true} unit={\"°\"}\n                value={props.device.ColorTemperatureController.colorTemperatureInKelvin.value}\n                min={2000} max={7000} step={100}\n                change={handleColorTemperatureChange}\n                disabled={!props.powerState}\n            />\n        </ListItem>\n    );\n\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Button from '@material-ui/core/Button';\n\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport LensIcon from '@material-ui/icons/Lens';\n\nimport { HuePicker } from 'react-color';\n\nconst useStyles = makeStyles({\n        \n    wide: {\n        width: \"100%\",\n    },\n    indent: {\n        paddingLeft: 40,\n        paddingRight: 8,\n    },\n    button: {\n        minWidth: 24\n    },\n    revealIcon: {\n        height: 24,\n        width: 24,\n        color: \"FFE4B5\",\n    }\n});\n\nexport const sl2sb = (color) => {\n    var SL = {h:color.h, s:color.s, l:color.l};\n    var SB = {hue:color.h, saturation:0, brightness:0};\n    var t = SL.s * (SL.l<0.5 ? SL.l : 1-SL.l);\n    SB.brightness = SL.l+t;\n    SB.saturation = SL.l>0 ? 2*t/SB.brightness : SB.saturation ;\n    return SB\n}    \n\nexport const sb2sl = (color) => {\n    var SB = {hue:color.hue, saturation:color.saturation, brightness:color.brightness};\n    var SL = {h:color.hue, s:0, l:0};\n    SL.l = (2 - SB.saturation) * SB.brightness / 2;\n    SL.s = SL.l&&SL.l<1 ? SB.saturation*SB.brightness/(SL.l<0.5 ? SL.l*2 : 2-SL.l*2) : SL.s;\n    return SL\n}\n\nexport default function LightSliderColor(props) {\n\n    const classes = useStyles();\n    const reveal = {hue: 43.5, saturation:0.27, brightness: 1}\n    const [color, setColor] = useState(reveal);\n    \n    useEffect(() => {\n        setColor(sb2sl(props.device.ColorController.color.value))\n    }, [props.device.ColorController.color.value]);\n\n\n    function handleColorSliderChange(color, event) {\n        setColor(color.hsl);\n        var sendsb=sl2sb(color.hsl)\n        sendsb.brightness=props.device.BrightnessController.brightness.value/100\n        props.device.ColorController.directive('SetColor',{ \"color\": sendsb })\n    }\n\n    function handleColorChange(hsb) {\n        setColor(sb2sl(hsb));\n        hsb.brightness=props.device.BrightnessController.brightness.value/100\n        props.device.ColorController.directive('SetColor',{ \"color\": hsb })\n    }\n\n    return (\n        <ListItem>\n            <ListItemIcon className={classes.indent}><ColorLensIcon /></ListItemIcon>\n            <HuePicker\n                className={classes.wide}\n                color={ color }\n                onChangeComplete={ handleColorSliderChange }\n            />\n            <Button size=\"small\" onClick={ () => handleColorChange(reveal)} color={ color===reveal ? \"primary\" : \"default\"} className={classes.button }>\n                <LensIcon className={classes.revealIcon} />\n            </Button>\n        </ListItem>\n    );\n\n}\n\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ToggleAvatar from '../ToggleAvatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Switch from '@material-ui/core/Switch';\nimport LightbulbOutlineIcon from '../LightbulbOutline';\nimport CloudOffIcon from '@material-ui/icons/CloudOff';\nimport LightSliderBrightness from \"./LightSliderBrightness\"\nimport LightSliderTemperature from \"./LightSliderTemperature\"\nimport LightSliderColor from \"./LightSliderColor\"\nimport GridItem from \"../GridItem\"\n\nconst useStyles = makeStyles({\n \n    iconSize: {\n        height: 24,\n        width: 24,\n    },\n    stack: {\n        height: 44,\n        display: \"flex\",\n        flexGrow: 1,\n        paddingLeft: 16,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n    },\n    tile: {\n        display: \"flex\",\n        flexGrow: 1,\n        height: 90,\n        paddingRight: 8,\n    },\n    sliderPaper: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        padding: \"16 8 16 16\",\n        alignItems: \"center\",\n    },\n    nostack: {\n        height: 44,\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        maxWidth: 480,\n        minWidth: 240,\n        boxSizing: \"border-box\",\n        marginRight: 8,\n    },\n    lightSwitch: {\n        marginLeft: 8,\n    },\n    lightbar: {\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n    },\n    placeholder: {\n        height: 57,\n        width: \"100%\",\n    },\n    listItem: {\n        maxHeight: 64,\n        width: \"100%\",\n    }\n});\n\nexport default function Light(props) {\n    \n    const classes = useStyles();\n    const [showAll, setShowAll] = useState(false)\n    \n    function handlePowerChange(event){\n        if (event.target.checked) {\n            props.device.PowerController.directive('TurnOn')\n        } else {\n            props.device.PowerController.directive('TurnOff')\n        }\n    }; \n    \n    function isReachable() {\n        try {\n            if (props.device.hasOwnProperty('EndpointHealth')) {\n                if (props.device.EndpointHealth.connectivity.value.value==='OK') { return true }\n                return false\n            }\n            console.log('no endpoint health', props.device)\n            return true\n        } catch (e) {\n            console.log('Error getting reachable state', e)\n            return false\n        }\n    }\n    \n    return (\n        <GridItem nopaper={props.nopaper} xs={props.xs} thinmargin={props.thinmargin} >\n            <ListItem className={classes.listItem} >\n                { isReachable() ?\n                    <ToggleAvatar noback={true} avatarState={props.device.PowerController.powerState.value==='ON' ? \"on\" : \"off\" } >\n                        <LightbulbOutlineIcon className={classes.iconSize} />\n                    </ToggleAvatar>\n                :\n                    <ToggleAvatar avatarState={ \"off\" } >\n                        <CloudOffIcon className={classes.iconSize} />\n                    </ToggleAvatar>\n                }                \n                <ListItemText onClick={() => setShowAll(!showAll) } primary={props.device.friendlyName} secondary={ isReachable() ? '': 'Off at switch' } />\n                { isReachable() &&\n                    <Switch color=\"primary\" className={classes.lightSwitch} checked={props.device.PowerController.powerState.value==='ON'} onChange={handlePowerChange} />\n                }\n            </ListItem>\n            { !props.brightControl && !showAll ? null :\n                ( !props.device.hasOwnProperty('BrightnessController') ?\n                    <ListItem className={classes.placeholder} />\n                :\n                    <LightSliderBrightness device={props.device} />\n                )\n            }\n            { !props.tempControl && !showAll ? null :\n                ( !props.device.hasOwnProperty('ColorTemperatureController') ?\n                    <ListItem className={classes.placeholder} />\n                :\n                <LightSliderTemperature device={props.device}/>\n                )\n            }\n            { !props.colorControl && !showAll ? null :\n                ( !props.device.hasOwnProperty('ColorController') ?\n                    <ListItem className={classes.placeholder} />\n                :\n                    <LightSliderColor device={props.device}/>\n                )\n            }\n        </GridItem>\n    );\n}\n\nLight.defaultProps = {\n    nopaper: false,\n}\n","import React, { useContext } from 'react';\nimport { DataContext } from './DataContext/DataProvider';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport DotLevel from './DotLevel';\n\nconst useStyles = makeStyles({\n    \n    halves: {\n        flexGrow: 1,\n        flexBasis: 1,\n        boxSizing: \"border-box\",\n    },\n});\n\nexport default function AreaLine(props) {\n    \n    const classes = useStyles();\n    const { deviceByEndpointId } = useContext(DataContext);\n\n    function runShortcut(level) {\n        var scene=deviceByEndpointId(props.area.AreaController.shortcuts.value[level])\n        scene.SceneController.directive('Activate')\n    }\n    \n    function currentLevel() {\n        if (props.area.AreaController.shortcuts.value.includes(props.area.AreaController.scene.value)) {\n            return props.area.AreaController.shortcuts.value.indexOf(props.area.AreaController.scene.value)\n        }\n        return 0\n    }\n\n    return (\n        <ListItem className={classes.areaListItem}>\n            <ListItemText className={classes.halves} onClick={ () => props.selectArea(props.area.friendlyName)}>{props.area.friendlyName} </ListItemText>\n            { props.area.AreaController.shortcuts.value.length>0 &&\n                <ListItemSecondaryAction>\n                    <DotLevel half={true} level={currentLevel()} select={runShortcut} />\n                </ListItemSecondaryAction>\n            }\n        </ListItem>\n    );\n}","import React, { useContext } from 'react';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport { DataContext } from './DataContext/DataProvider';\n\nimport LightbulbOutlineIcon from './LightbulbOutline';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\n\nimport Light from './light/Light';\nimport AreaLine from './AreaLine';\nimport ToggleAvatar from './ToggleAvatar';\nimport GridItem from './GridItem';\n\nexport default function AreaHero(props) {\n\n    const { applyLayoutCard } = useContext(LayoutContext);\n    const { deviceByEndpointId, lightCount, sortByName, area } = useContext(DataContext);\n    const lightsOn = lightCount('on');\n    const thisarea = deviceByEndpointId('logic:area:'+area)\n\n    function selectArea(name) {\n        applyLayoutCard('AreaLayout',{\"name\": name})\n    }\n    \n    function getAreaAreas() {\n\n        var areas=[]\n        if (!area || thisarea===undefined) { return [] }\n        var children=thisarea.AreaController.children.value\n        if (children) {\n            for (var i = 0; i < children.length; i++) {\n                var child=deviceByEndpointId(children[i])\n                if (child && child.displayCategories.includes('AREA')) {\n                    areas.push(child)\n                }\n            }\n        }\n        return areas\n    }\n    \n    function getAreaLights() {\n\n        var areas=[]\n        if (!area || thisarea===undefined)  { return [] }\n        var children=thisarea.AreaController.children.value\n        if (children) {\n            for (var i = 0; i < children.length; i++) {\n                var child=deviceByEndpointId(children[i])\n                if (child && child.displayCategories.includes('LIGHT')) {\n                    areas.push(child)\n                }\n            }\n            return sortByName(areas)\n        }\n        return areas\n    }\n    \n    return (\n        <GridItem wide={props.wide}>\n            { lightCount('all') ?\n                <ListItem>\n                    <ToggleAvatar noback={true} avatarState={lightsOn ? \"on\" : \"off\"} onClick={ () => applyLayoutCard('LightLayout') }><LightbulbOutlineIcon/></ToggleAvatar>\n                    <ListItemText primary={lightsOn ? lightsOn+\" lights are on\" : \"All lights off\" } onClick={ () => applyLayoutCard('LightLayout') } />\n                    <ListItemSecondaryAction>\n                        <IconButton onClick={(e) => applyLayoutCard('AreasLayout')}>\n                            <ViewModuleIcon />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            :\n                <ListItem>\n                    <ToggleAvatar avatarState={\"notready\"} ><PriorityHighIcon/></ToggleAvatar>\n                    <ListItemText primary={'Waiting for light data'}/>\n                </ListItem>\n            }\n            {   getAreaAreas().map((area) => \n                <AreaLine area={ area } key={ area.endpointId } selectArea={selectArea} ></AreaLine>\n            )}\n            {   getAreaLights().map((light) => \n                <Light xs={12} nopaper={true} thinmargin={true} device={ light } key={ light.endpointId } />\n            )}\n\n        </GridItem>\n    );\n}\n"],"sourceRoot":""}