
import React from "react";
import Receiver from './devices/receiver';
import List from '@material-ui/core/List';
import Paper from '@material-ui/core/Paper';
import Typography from '@material-ui/core/Typography';
import PropTypes from 'prop-types';
import { withStyles } from '@material-ui/core/styles';

const styles = theme => ({
        
    receiverList: {
        paddingBottom: 4,
        minWidth: 320,
    },
});

class ReceiverList extends React.Component {

    constructor(props) {
        super(props);

        this.state = {
            receivers: {},
            receiverstate: {},
        };
    }
    
    static getDerivedStateFromProps(nextProps, prevState) {
        
        var changes={}
        var pstate=prevState.receiverstate
        for (var player in prevState.receivers) {
            if (nextProps.deviceState.hasOwnProperty(player)) {
                    pstate[player]=nextProps.deviceState[player]
            }
        }
        if (!prevState.hasOwnProperty('deviceState')) {
            changes.deviceState=nextProps.deviceState;
        }
        if (!prevState.hasOwnProperty('classes')) {
            changes.classes=nextProps.classes;
        }
        if (!prevState.hasOwnProperty('updateDevice')) {
            changes.updateDevice=nextProps.updateDevice;
        }
        if (!prevState.hasOwnProperty('sender')) {
            changes.sender=nextProps.sender;
        }
        changes.receiverstate=pstate
        return changes
    
    }
    
    
    setBaseState = data => {
        var rstate={}
        for (var receiver in data) {
            rstate[receiver]={}
        }
        return {receivers:data, receiverstate:rstate}

    }
    
    renderSwitch(name) {

        if (this.state.receiverstate.hasOwnProperty(name)) {
            return <Receiver key={ name } name={ name } device={ this.state.receivers[name] } deviceState={ this.state.receiverstate[name] } sender={this.props.sender} updateDevice={this.props.updateDevice}></Receiver>
        }
        //console.log('state',this.props.deviceState[device.friendlyName])
    }

    componentDidMount() {
  	    fetch('http://home.dayton.home:8090/displayCategory/RECEIVER')
 		    .then(result=>result.json())
 		    .then(data=>this.setBaseState(data))
            .then(result=>this.setState(result));
            
    }
    
    render() {
        
        const { classes } = this.props;

        return (
            <div className={classes.receiverList}>
                {
                    Object.keys(this.state.receivers).map(name => (this.renderSwitch(name)))
                }
            </div> 
        );
    }
}

ReceiverList.propTypes = {
    classes: PropTypes.object.isRequired,
};

export default withStyles(styles)(ReceiverList);
