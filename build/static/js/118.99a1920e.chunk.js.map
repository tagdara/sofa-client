{"version":3,"sources":["SofaSlider.js","SofaAvatarSlider.js","player/PlayerVolume.js"],"names":["useStyles","makeStyles","half","alignItems","display","height","flexGrow","flexBasis","boxSizing","stack","justifyContent","flexWrap","width","marginRight","overflowX","overflowY","paddingRight","padLeft","paddingLeft","slider","margin","SofaSlider","props","classes","useState","value","setValue","useEffect","style","minWidth","className","name","variant","smallText","stackLabel","unit","Array","isArray","Math","floor","step","min","max","onChange","event","preChange","onChangeCommitted","change","disabled","defaultProps","default","tabs","label","line","maxWidth","SofaAvatarSlider","reverse","small","onClick","avatarClick","noback","noAvatarBack","avatarState","primary","hasOwnProperty","undefined","PlayerVolume","player","friendlyName","SpeakerController","volume","directive","endpointId","mute"],"mappings":"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","file":"static/js/118.99a1920e.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n         \n    half: {\n        alignItems: \"center\",\n        display: \"flex\",\n        height: 42,\n        flexGrow: 1,\n        flexBasis: 0,\n        boxSizing: \"border-box\",\n    },\n    stack: {\n        height: \"auto\",\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        marginRight: 8,\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n        alignItems: \"center\",\n        paddingRight: 8,\n    },\n    padLeft: {\n        paddingLeft: 16,\n    },\n    slider: {\n        margin: \"-18px\"\n    }\n\n});\n\nexport default function SofaSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0)\n    \n    useEffect(() => {\n        if (props.value) {\n            setValue(props.value)\n        }\n    }, [props.value]);\n\n    \n    function handlePreChange(event, value) {\n        setValue(value);\n        if (props.preChange) {\n            props.preChange(value);\n        }\n    }; \n\n    function handleChange(event,value) {\n        props.change(value);\n    }; \n   \n    function unitDisplay() {\n        if (Array.isArray(value)) {\n            return Math.floor(value[0])+' - '+ Math.floor(value[1])+props.unit\n        } else {\n            return Math.floor(value)+props.unit\n        }\n    }\n   \n    return (\n        <div style={{ \"minWidth\": props.minWidth }} className={ props.padLeft ? classes.stack+\" \"+classes.padLeft: ( props.half ? classes.half : classes.stack) } >\n        { props.name ?\n            <Typography variant={ props.smallText ? \"caption\" : \"subtitle1\" } className={classes.stackLabel} >{props.name}</Typography>\n        :   null }\n        { props.unit ?\n            <Typography variant=\"caption\" className={classes.stackLabel} >{unitDisplay()}</Typography>\n        : null }\n            <Slider\n                value={value} step={props.step} \n                min={props.min} max={props.max}\n                onChange={handlePreChange}\n                onChangeCommitted={handleChange}\n                disabled={props.disabled}\n            />\n        </div>\n    );\n}\n\nSofaSlider.defaultProps = {\n    name: '',\n    unit: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    default: 0,\n    value: 0,\n    tabs: '',\n    disabled: false,\n    padLeft: false,\n    half: false,\n    minWidth: 240,\n    smallText: false,\n}\n\n\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport SofaSlider from './SofaSlider';\nimport ToggleAvatar from './ToggleAvatar'\n\nconst useStyles = makeStyles({\n         \n    label: {\n        display: \"flex\",\n        flexGrow: 1,\n        flexBasis: 0,\n        minWidth: \"35%\",\n    },\n    line: {\n        display: \"flex\",\n        width: '100%',\n        maxWidth: '100%',\n        flexGrow: 1,\n        flexBasis: 0,\n    }\n})\n\nexport default function SofaAvatarSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n\n    useEffect(() => {\n  \t    setValue(props.value)\n    }, [props.value]);\n\n    function handlePreChange(value) {\n        setValue(value)\n        if (props.hasOwnProperty('preChange')) {\n            props.preChange(value)\n        }\n    }; \n    \n    return (\n        <ListItem className={classes.line}>\n            { !props.reverse &&\n                <ToggleAvatar small={props.small} onClick={props.avatarClick} noback={props.noAvatarBack} avatarState={ props.avatarState }>\n                    {value}\n                </ToggleAvatar>\n            }\n            { props.label &&\n                <ListItemText primary={props.label} className={classes.label} />\n            }\n            <SofaSlider {...props} preChange={handlePreChange} />\n            { props.reverse &&\n                <ToggleAvatar reverse={props.reverse} small={props.small} onClick={props.avatarClick} noback={props.noAvatarBack} avatarState={ props.avatarState }>\n                    {value}\n                </ToggleAvatar>\n            }\n        </ListItem>\n    );\n}\n\nSofaAvatarSlider.defaultProps = {\n    avatarClick:undefined,\n    noAvatarBack: false,\n    avatarState: \"on\",\n    reverse: true,\n    small: false,\n}\n\n","import React from 'react';\nimport SofaAvatarSlider from '../SofaAvatarSlider'\n\nexport default function PlayerVolume(props) {\n    \n    function handleVolumeChange(event) {\n        props.directive(props.player.endpointId, \"SpeakerController\", \"SetVolume\", { \"volume\" : event} )\n    }; \n\n    function handleMuteChange(event) {\n        props.directive(props.player.endpointId, \"SpeakerController\", \"SetMute\", { \"mute\" : !props.player.SpeakerController.mute.value } )\n    }; \n\n    return (\n        <SofaAvatarSlider label={props.player.friendlyName} small={true} reverse={true} minWidth={64} value={props.player.SpeakerController.volume.value } change={handleVolumeChange} \n            avatarClick={handleMuteChange}\n        />\n    );\n\n}\n\n"],"sourceRoot":""}