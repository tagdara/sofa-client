{"version":3,"sources":["SofaSlider.js","thermostat/Thermostat.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/icons/Toys.js"],"names":["useStyles","makeStyles","half","alignItems","display","height","flexGrow","flexBasis","boxSizing","stack","justifyContent","flexWrap","width","marginRight","overflowX","overflowY","paddingRight","padLeft","paddingLeft","slider","margin","SofaSlider","props","classes","useState","value","setValue","useEffect","style","minWidth","className","name","variant","smallText","stackLabel","unit","Array","isArray","Math","floor","step","min","max","onChange","event","preChange","onChangeCommitted","change","disabled","defaultProps","default","tabs","listItem","padding","bottomListItem","minHeight","xlistItem","listItemIndent","speedlistItem","buttonLine","button","fanButton","list","flexDirection","Thermostat","temp","useContext","LayoutContext","applyLayoutCard","applyBackPage","targetSetpoint","setTargetSetpoint","powerLevel","setPowerLevel","fanSetMode","setFanSetMode","supportedRange","device","ThermostatController","hasOwnProperty","configuration","lowerSetpoint","deepvalue","upperSetpoint","PowerLevelController","avatarState","TemperatureSensor","temperature","onClick","defaultValue","friendlyName","directive","thermostatMode","size","supportedModes","map","mode","e","key","color","ListItemIcon","React","forwardRef","ref","other","_objectWithoutProperties","context","ListContext","createElement","_extends","clsx","root","alignItemsFlexStart","withStyles","theme","palette","action","active","flexShrink","marginTop","_interopRequireDefault","require","Object","defineProperty","exports","_react","_default","d"],"mappings":"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","file":"static/js/106.f098f966.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n         \n    half: {\n        alignItems: \"center\",\n        display: \"flex\",\n        height: 42,\n        flexGrow: 1,\n        flexBasis: 0,\n        boxSizing: \"border-box\",\n    },\n    stack: {\n        height: \"auto\",\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        marginRight: 8,\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n        alignItems: \"center\",\n        paddingRight: 8,\n    },\n    padLeft: {\n        paddingLeft: 16,\n    },\n    slider: {\n        margin: \"-18px\"\n    }\n\n});\n\nexport default function SofaSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0)\n    \n    useEffect(() => {\n        if (props.value) {\n            setValue(props.value)\n        }\n    }, [props.value]);\n\n    \n    function handlePreChange(event, value) {\n        setValue(value);\n        if (props.preChange) {\n            props.preChange(value);\n        }\n    }; \n\n    function handleChange(event,value) {\n        props.change(value);\n    }; \n   \n    function unitDisplay() {\n        if (Array.isArray(value)) {\n            return Math.floor(value[0])+' - '+ Math.floor(value[1])+props.unit\n        } else {\n            return Math.floor(value)+props.unit\n        }\n    }\n   \n    return (\n        <div style={{ \"minWidth\": props.minWidth }} className={ props.padLeft ? classes.stack+\" \"+classes.padLeft: ( props.half ? classes.half : classes.stack) } >\n        { props.name ?\n            <Typography variant={ props.smallText ? \"caption\" : \"subtitle1\" } className={classes.stackLabel} >{props.name}</Typography>\n        :   null }\n        { props.unit ?\n            <Typography variant=\"caption\" className={classes.stackLabel} >{unitDisplay()}</Typography>\n        : null }\n            <Slider\n                value={value} step={props.step} \n                min={props.min} max={props.max}\n                onChange={handlePreChange}\n                onChangeCommitted={handleChange}\n                disabled={props.disabled}\n            />\n        </div>\n    );\n}\n\nSofaSlider.defaultProps = {\n    name: '',\n    unit: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    default: 0,\n    value: 0,\n    tabs: '',\n    disabled: false,\n    padLeft: false,\n    half: false,\n    minWidth: 240,\n    smallText: false,\n}\n\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport { LayoutContext } from '../layout/NewLayoutProvider';\nimport { makeStyles } from '@material-ui/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ToggleAvatar from '../ToggleAvatar';\nimport Button from '@material-ui/core/Button';\nimport ToysIcon from '@material-ui/icons/Toys';\n\nimport GridItem from '../GridItem'\nimport SofaSlider from '../SofaSlider'\n\nconst useStyles = makeStyles({\n\n    listItem: {\n        padding: \"0 0 16 24\",\n        width: '100%',\n    },\n    bottomListItem: {\n        padding: \"0 0 0 24\",\n        width: '100%',\n        minHeight: 64,\n    },\n\n    xlistItem: {\n        padding: \"16px 16px 8px 16px\",\n    },\n    listItemIndent: {\n        padding: \"16 0 8 64\",\n        width: '100%',\n    },\n    speedlistItem: {\n        padding: \"0 0 8 40\",\n        width: '100%',\n    },\n    buttonLine: {\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"flex-end\",\n        padding: \"0 16 8 0\",\n    },\n    button: {\n        minWidth: 36\n    },\n    fanButton: {\n        minWidth: 36,\n        marginRight: 24,\n    },\n    list: {\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n    },\n});\n\nexport default function Thermostat(props) {\n    \n    const classes = useStyles();\n    const { applyLayoutCard, applyBackPage } = useContext(LayoutContext);\n\n    const [targetSetpoint, setTargetSetpoint] = useState(70);\n    const [powerLevel, setPowerLevel] = useState(false)\n    const [fanSetMode, setFanSetMode] = useState(false);\n\n    useEffect(() => {\n        if (props.device.ThermostatController.hasOwnProperty('upperSetpoint')) {\n            setTargetSetpoint([props.device.ThermostatController.lowerSetpoint.deepvalue, props.device.ThermostatController.upperSetpoint.deepvalue ])\n        } else {\n            setTargetSetpoint(props.device.ThermostatController.targetSetpoint.deepvalue)\n        }\n        if (props.device.hasOwnProperty('PowerLevelController')) {\n            setPowerLevel(props.device.PowerLevelController.powerLevel.value)\n        }\n    }, [props.device]);\n\n\n    function supportedModes() {\n\n        if (props.device.ThermostatController.hasOwnProperty('configuration')) {\n            if (props.device.ThermostatController.configuration.hasOwnProperty('supportedModes')) {\n                return props.device.ThermostatController.configuration.supportedModes\n            }\n        }\n        return []\n    }\n\n    function supportedRange() {\n\n        if (props.device.ThermostatController.hasOwnProperty('configuration')) {\n            if (props.device.ThermostatController.configuration.hasOwnProperty('supportedRange')) {\n                return props.device.ThermostatController.configuration.supportedRange\n            }\n        }\n        return [60,90]\n    }\n                    \n    \n    function tempColor(temp) {\n        if (!temp) { return 'disabled' } \n        if (temp>=74) { return \"hot\" }\n        if (temp<70) { return \"cool\" }\n        return \"mid\";\n    }\n    \n    function handlePrePowerLevelChange(event) {\n        setPowerLevel(event);\n    }; \n    \n    function handlePowerLevelChange(event) {\n        props.device.PowerLevelController.directive(\"SetPowerLevel\", {\"powerLevel\": event})\n    }; \n\n    function handlePreSetpointChange(event) {\n        setTargetSetpoint(event);\n    }; \n    \n    function handleSetpointChange(event) {\n        props.device.ThermostatController.directive(\"SetTargetTemperature\", { \"targetSetpoint\": { \"value\": event, \"scale\": \"FAHRENHEIT\"}} )\n    }; \n\n    function handleSetMode(event) {\n        props.device.ThermostatController.directive(\"SetThermostatMode\",  {\"thermostatMode\" : { \"value\": event }} )\n    }; \n    \n    function switchToHistory() {\n        applyBackPage('ThermostatLayout',{})\n        applyLayoutCard('ThermostatHistory', { 'device':props.device, 'days':7})\n    }\n\n\n    return ( \n        <GridItem>\n            <List className={classes.list} >\n                <ListItem>\n                    <ToggleAvatar \n                        avatarState={ tempColor(props.device.TemperatureSensor.temperature.deepvalue) }\n                        onClick={ () => switchToHistory()} >\n                            {props.device.TemperatureSensor.temperature.deepvalue ? props.device.TemperatureSensor.temperature.deepvalue : '--'}\n                    </ToggleAvatar>\n                    <SofaSlider min={supportedRange()[0]} max={supportedRange()[1]} defaultValue={70} value={targetSetpoint} unit={\"°\"} name={props.device.friendlyName}\n                                preChange={handlePreSetpointChange} change={handleSetpointChange} \n                                disabled={ props.device.ThermostatController.thermostatMode.value==='OFF' } />\n                </ListItem>\n                <ListItem className={classes.bottomListItem}>\n                    <>\n                        { powerLevel!==false &&\n                            <>\n                                { fanSetMode ?\n                                    <>\n                                        <Button size=\"small\" className={classes.fanButton } onClick={ ()=> setFanSetMode(false)}>\n                                            {props.device.ThermostatController.thermostatMode.value}\n                                        </Button>\n                                        <ListItemIcon><ToysIcon /></ListItemIcon>\n                                        <SofaSlider value={powerLevel} step={10} unit={\"%\"} name={\"Fan Speed\"} padLeft={false} minWidth={100}\n                                            preChange={handlePrePowerLevelChange} change={handlePowerLevelChange} />\n                                    </>\n                                :\n                                    <Button size=\"small\" className={classes.fanButton } onClick={ ()=> setFanSetMode(true)}>\n                                        <ToysIcon />{powerLevel}%\n                                    </Button>                        \n                                }\n                            </>\n                        }\n                    </>\n                    <>\n                        {!fanSetMode &&\n                        <>\n                            { supportedModes().map((mode) => (\n                                <Button onClick={ (e) => handleSetMode(mode)} size=\"small\" key = {mode+'m'} color={ props.device.ThermostatController.thermostatMode.value===mode ? \"primary\" : \"default\" } className={classes.button }>\n                                {mode}\n                                </Button>\n                            ))}\n                        </>\n                        }\n                    </>\n                </ListItem>\n            </List>\n        </GridItem>\n    );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 12c0-3 2.5-5.5 5.5-5.5S23 9 23 12H12zm0 0c0 3-2.5 5.5-5.5 5.5S1 15 1 12h11zm0 0c-3 0-5.5-2.5-5.5-5.5S9 1 12 1v11zm0 0c3 0 5.5 2.5 5.5 5.5S15 23 12 23V12z\"\n}), 'Toys');\n\nexports.default = _default;"],"sourceRoot":""}