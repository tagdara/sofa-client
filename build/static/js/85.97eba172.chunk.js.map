{"version":3,"sources":["SofaSlider.js","SofaAvatarSlider.js","player/PlayerArtOverlay.js","player/PlayerArtOverlayButtons.js","player/PlayerVolume.js","player/PlayerCover.js","player/PlayerCard.js","../node_modules/@material-ui/icons/ViewModule.js"],"names":["useStyles","makeStyles","half","alignItems","display","height","flexGrow","flexBasis","boxSizing","stack","justifyContent","flexWrap","width","marginRight","overflowX","overflowY","paddingRight","padLeft","paddingLeft","slider","margin","SofaSlider","props","classes","useState","value","setValue","useEffect","style","minWidth","className","name","variant","smallText","stackLabel","unit","Array","isArray","Math","floor","step","min","max","onChange","event","preChange","onChangeCommitted","change","disabled","defaultProps","default","tabs","label","line","maxWidth","minHeight","padding","noPad","SofaAvatarSlider","reverse","small","onClick","avatarClick","noback","noAvatarBack","avatarState","avatarUnit","iconLabel","primary","hasOwnProperty","undefined","theme","oldbigcover","maxHeight","position","bigcover","top","left","bottom","right","songTextBox","flexDirection","overflow","songImageHolder","songImageAspect","paddingTop","songTextHolder","songButtonHolder","songTitle","fontSize","paddingBottom","songArtist","fontWeight","imgItem","songText","topbox","borderBottom","borderBottomColor","palette","divider","PlayerArtOverlay","serverurl","window","location","hostname","container","item","xs","src","art","startsWith","title","alt","e","cover","setMini","artist","children","playIcon","playButton","backgroundColor","background","button","stopButton","skipButton","jukeButton","playersButton","coverButton","minButton","PlayerArtOverlayButtons","Fragment","size","color","players","aria-label","playPause","playbackState","skip","jukebox","open","PlayerVolume","player","friendlyName","SpeakerController","volume","directive","endpointId","mute","bigDialog","root","paper","boxShadow","coverArt","opacity","borderRadius","titleText","artistText","maingrid","nopad","textbox","closebutton","pausebutton","skipbutton","PlayerCover","isMobile","innerWidth","console","log","fullScreen","onClose","close","PaperProps","spacing","direction","in","mountOnEnter","unmountOnExit","elevation","onError","ev","target","split","handlePlayPause","handleSkip","autoFocus","list","PlayerCard","applyLayoutCard","useContext","LayoutContext","DataContext","deviceStateByEndpointId","coverView","setCoverView","coverDefault","stopPropagation","MusicController","handleStop","handleCover","document","documentElement","webkitRequestFullScreen","handlePlayers","wide","stop","key","linked","i","length","push","getLinkedPlayers","map","linkedplayer","webkitExitFullscreen","_interopRequireDefault","require","Object","defineProperty","exports","_react","_default","createElement","d"],"mappings":"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","file":"static/js/85.97eba172.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n         \n    half: {\n        alignItems: \"center\",\n        display: \"flex\",\n        height: 42,\n        flexGrow: 1,\n        flexBasis: 0,\n        boxSizing: \"border-box\",\n    },\n    stack: {\n        height: \"auto\",\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        marginRight: 0,\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n        alignItems: \"center\",\n        paddingRight: 8,\n    },\n    padLeft: {\n        paddingLeft: 16,\n    },\n    slider: {\n        margin: \"-18px\"\n    }\n\n});\n\nexport default function SofaSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0)\n    \n    useEffect(() => {\n        if (props.value) {\n            setValue(props.value)\n        }\n    }, [props.value]);\n\n    \n    function handlePreChange(event, value) {\n        setValue(value);\n        if (props.preChange) {\n            props.preChange(value);\n        }\n    }; \n\n    function handleChange(event,value) {\n        props.change(value);\n    }; \n   \n    function unitDisplay() {\n        if (Array.isArray(value)) {\n            return Math.floor(value[0])+' - '+ Math.floor(value[1])+props.unit\n        } else {\n            return Math.floor(value)+props.unit\n        }\n    }\n   \n    return (\n        <div style={{ \"minWidth\": props.minWidth }} className={ props.padLeft ? classes.stack+\" \"+classes.padLeft: ( props.half ? classes.half : classes.stack) } >\n        { props.name ?\n            <Typography variant={ props.smallText ? \"caption\" : \"subtitle1\" } className={classes.stackLabel} >{props.name}</Typography>\n        :   null }\n        { props.unit ?\n            <Typography variant=\"caption\" className={classes.stackLabel} >{unitDisplay()}</Typography>\n        : null }\n            <Slider\n                value={value} step={props.step} \n                min={props.min} max={props.max}\n                onChange={handlePreChange}\n                onChangeCommitted={handleChange}\n                disabled={props.disabled}\n            />\n        </div>\n    );\n}\n\nSofaSlider.defaultProps = {\n    name: '',\n    unit: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    default: 0,\n    value: 0,\n    tabs: '',\n    disabled: false,\n    padLeft: false,\n    half: false,\n    minWidth: 240,\n    smallText: false,\n}\n\n\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport SofaSlider from './SofaSlider';\nimport ToggleAvatar from './ToggleAvatar'\n\nconst useStyles = makeStyles({\n         \n    label: {\n        display: \"flex\",\n        flexGrow: 1,\n        flexBasis: 0,\n        minWidth: \"35%\",\n        alignItems: \"center\",\n    },\n    line: {\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        width: '100%',\n        maxWidth: '100%',\n        flexGrow: 1,\n        flexBasis: 0,\n        minHeight: 48,\n        padding: \"0 16px\",\n        alignItems: \"center\",\n    },\n    noPad: {\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        width: '100%',\n        maxWidth: '100%',\n        flexGrow: 1,\n        flexBasis: 0,\n        padding: 0,\n        alignItems: \"center\",\n    }\n})\n\nexport default function SofaAvatarSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n\n    useEffect(() => {\n  \t    setValue(props.value)\n    }, [props.value]);\n\n    function handlePreChange(value) {\n        setValue(value)\n        if (props.hasOwnProperty('preChange')) {\n            props.preChange(value)\n        }\n    }; \n    \n    return (\n        <div className={props.noPad ? classes.noPad : classes.line}>\n            { !props.reverse &&\n                <ToggleAvatar small={props.small} onClick={props.avatarClick} noback={props.noAvatarBack} avatarState={ props.avatarState }>\n                    {value+props.avatarUnit}\n                </ToggleAvatar>\n            }\n            { props.iconLabel &&\n                props.iconLabel\n            }\n            { props.label &&\n                <ListItemText primary={props.label} className={classes.label} />\n            }\n\n            <SofaSlider {...props} preChange={handlePreChange} />\n            { props.reverse &&\n                <ToggleAvatar reverse={props.reverse} small={props.small} onClick={props.avatarClick} noback={props.noAvatarBack} avatarState={ props.avatarState }>\n                    {value+props.avatarUnit}\n                </ToggleAvatar>\n            }\n        </div>\n    );\n}\n\nSofaAvatarSlider.defaultProps = {\n    avatarClick:undefined,\n    noAvatarBack: false,\n    avatarState: \"on\",\n    reverse: true,\n    small: false,\n    avatarUnit: \"\",\n    noPad: false,\n    \n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        oldbigcover: {\n            width: \"100%\",\n            maxHeight: 480,\n            position: \"relative\",\n            padding: 0,\n            height: \"auto\",\n            minHeight:100,\n        },\n        bigcover: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            minWidth: \"100%\",\n            minHeight: \"100%\",\n        },\n        songTextBox: {\n            position: \"absolute\",\n            padding: 16,\n            top:0,\n            bottom:64,\n            display: \"flex\",\n            flexDirection: \"column\",\n            overflow: \"hidden\",\n        },\n        songImageHolder: {\n            position: \"relative\",\n            padding: \"16px 0 0 16px\",\n            margin: 0,\n        },\n        songImageAspect: {\n            position: \"relative\",\n            margin: 0,\n            width: \"100%\",\n            paddingTop: \"100%\", /* 1:1 Aspect Ratio */\n        },\n        songTextHolder: {\n            paddingLeft: 16,\n            paddingTop: 16,\n            boxSizing: \"border-box\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            position: \"relative\",\n            height: \"60%\",\n        },\n        songButtonHolder: {\n            paddingLeft: 16,\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            flexDirection: \"column\",\n            position: \"relative\",\n            height: \"40%\",\n        },\n        songTitle: {\n            fontSize:\"3rem\",\n            paddingBottom:16,\n            flexBasis: 0,\n            flexGrow:2,\n            display: \"flex\",\n            overflow: \"hidden\",\n        },\n        songArtist: {\n            fontSize:\"2.2rem\",\n            fontWeight:200,\n            flexBasis: 0,\n            flexGrow:1,\n            display: \"flex\",\n            overflow: \"hidden\",\n        },\n        imgItem: {\n            padding: 0,\n            width: \"100%\",\n            minWidth:\"100%\",\n        },\n        songText: {\n            width: \"100%\",\n        },\n        topbox: {\n            paddingBottom: 8,\n            borderBottom: \"0px solid\",\n            borderBottomColor: theme.palette.divider,\n        },\n    }\n});\n\nexport default function PlayerArtOverlay(props) {\n    \n    const classes = useStyles();\n    //const [imageLoaded, setImageLoaded] = useState(false)\n    const serverurl=\"https://\"+window.location.hostname;\n    \n    return ( \n        <Grid container className={classes.topbox} >\n            <Grid item xs={4} className={classes.songImageHolder}>\n                <div className={classes.songImageAspect} >\n                <img\n                    className={classes.bigcover}\n                    src={ props.art.startsWith('http') ? props.art : serverurl+props.art+\"?title=\"+props.title }\n                    title={ props.title }\n                    alt={ props.title }\n                    onClick={ (e) => props.cover(e)}\n                    //onLoad={ () => setImageLoaded(true) }\n                />\n                </div>\n            </Grid>\n            <Grid item container xs={8} >\n                <Grid item xs={12} className={classes.songTextHolder} onClick={()=> props.setMini(true)}>\n                    <Typography variant=\"subtitle1\" className={classes.songText}>{props.title}</Typography>\n                    <Typography variant=\"subtitle2\" className={classes.songText}>{props.artist}</Typography>\n                </Grid>\n                <Grid item xs={12} className={classes.songButtonHolder}>\n                    {props.children}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\n\nconst useStyles = makeStyles(theme => {\n    \n    return {    \n        playIcon: {\n            height: 38,\n            width: 38,\n        },\n        playButton: {\n            position: \"absolute\",\n            bottom: 8,\n            left: 16,\n            backgroundColor: theme.palette.background.button,\n        },\n        stopButton: {\n            position: \"absolute\",\n            bottom: 8,\n            right: 96,\n        },\n        skipButton: {\n            position: \"absolute\",\n            bottom: 8,\n            left: 56,\n            backgroundColor: theme.palette.background.button,\n        },\n        jukeButton: {\n            position: \"absolute\",\n            bottom: 8,\n            left: 96,\n            backgroundColor: theme.palette.background.button,\n        },\n    \n        playersButton: {\n            position: \"absolute\",\n            bottom: 8,\n            right: 16,\n            backgroundColor: theme.palette.background.button,\n        },\n        coverButton: {\n            position: \"absolute\",\n            bottom: 20,\n            left: 64,\n        },\n        minButton: {\n            position: \"absolute\",\n            top: 20,\n            right: 20,\n        },\n    }\n});\n\nexport default function PlayerArtOverlayButtons(props) {\n    \n    const classes = useStyles();\n    \n    function openJukebox() {\n        var newurl=\"https://jukebox.dayton.tech\"\n        window.open(newurl,'_jukebox');\n    }\n    \n    return ( \n        <React.Fragment >\n            <IconButton size={\"small\"} color=\"primary\" className={classes.playersButton} onClick={ (e) => props.players(e)}>\n                <ViewModuleIcon />\n            </IconButton>\n            <IconButton size={\"small\"} aria-label=\"play\" className={classes.playButton} onClick={ (e) => props.playPause(e)}>\n                { props.playbackState==='PLAYING' ? <PauseIcon /> : <PlayArrowIcon /> }\n            </IconButton>\n            <IconButton size={\"small\"} className={classes.skipButton} onClick={ (e) => props.skip(e)}>\n                <SkipNextIcon />\n            </IconButton>\n            { props.jukebox &&\n            <IconButton size={\"small\"} className={classes.jukeButton} onClick={openJukebox}>\n                <QueueMusicIcon />\n            </IconButton>\n            }\n        </React.Fragment>\n    );\n}\n\n","import React from 'react';\nimport SofaAvatarSlider from '../SofaAvatarSlider'\n\nexport default function PlayerVolume(props) {\n    \n    function handleVolumeChange(event) {\n        props.directive(props.player.endpointId, \"SpeakerController\", \"SetVolume\", { \"volume\" : event} )\n    }; \n\n    function handleMuteChange(event) {\n        props.directive(props.player.endpointId, \"SpeakerController\", \"SetMute\", { \"mute\" : !props.player.SpeakerController.mute.value } )\n    }; \n\n    return (\n        <SofaAvatarSlider label={props.player.friendlyName} small={true} reverse={true} minWidth={64} value={props.player.SpeakerController.volume.value } change={handleVolumeChange} \n            avatarClick={handleMuteChange}\n        />\n    );\n\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\n\nconst useStyles = makeStyles({\n\n    bigDialog: {\n        backgroundColor: \"#000\",\n        paddingTop: \"env(safe-area-inset-top)\",\n        paddingBottom: \"env(safe-area-inset-bottom)\",\n        minWidth: '320px',\n        boxSizing: \"border-box\",\n    },\n    root: {\n        backgroundColor: \"#000\"\n    },\n    paper: {\n        backgroundColor: \"#000\",\n        boxShadow: \"none\",\n        overflow: \"hidden\"\n    },\n    coverArt: {\n        width: \"100%\",\n        maxWidth: \"100%\",\n        background: \"#000\",\n        opacity: \"1.0\", \n        margin: \"auto auto\",\n        borderRadius: 4,\n    },\n    titleText: {\n        padding: \"0 24 0 24\",\n        color: \"#ccc\",\n    },\n    artistText: {\n        padding: \"0 24 0 24\",\n        color: \"#999\",\n    },\n    maingrid: {\n        padding: 24,\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    nopad: {\n        display: 'flex',\n        margin: 0,\n        boxSizing: \"border-box\",\n        padding: 0,\n        flexWrap: 'wrap',\n        alignItems: \"center\",\n        flexGrow: 1,\n        minWidth: \"320px\",\n        flexBasis: 0,\n        position: \"relative\",\n    },\n    textbox: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    closebutton: {\n        position: \"fixed\",\n        top: 8,\n        right: 8,\n    },\n    pausebutton: {\n        position: \"fixed\",\n        bottom: 8,\n        right: 8,\n    },\n    skipbutton: {\n        position: \"fixed\",\n        bottom: 8,\n        right: 72,\n    }\n});\n\nexport default function PlayerCover(props) {\n    \n    const serverurl=\"https://\"+window.location.hostname;\n    const classes = useStyles();\n    const mobileBreakpoint = 800\n    const isMobile = window.innerWidth <= mobileBreakpoint;\n\n    function addDefaultSrc(ev) {\n        // allow unique logos per adapter\n        ev.target.src = '/image/'+props.player.endpointId.split(':')[0]+'/darklogo'\n    }\n    \n    console.log('src',props.src)\n\n    return (\n        <Dialog fullScreen open={props.open} onClose={() => props.close()} className={classes.bigDialog} PaperProps ={{ classes: { root: classes.paper}}}>\n            <Grid container spacing={8} className={classes.maingrid}>\n                <Grid item xs={isMobile ? 12 : 6}>\n                <Slide direction=\"right\" in={true} mountOnEnter unmountOnExit>\n                    <Paper elevation={1} className={ classes.nopad} >\n                        <img onError={addDefaultSrc} className={classes.coverArt} src={serverurl+props.src} alt={props.title} />\n                    </Paper>\n                </Slide>\n                </Grid>\n                <Grid item xs={isMobile ? 12 : 6} className={classes.textbox} >\n                    <Typography className={classes.titleText} variant=\"h1\" >{props.title}</Typography>\n                    <Typography className={classes.artistText} variant=\"h2\" >{props.artist}</Typography>\n                </Grid>\n            </Grid>\n            <IconButton className={classes.skipbutton} onClick={ (e) => props.handlePlayPause(e) } color=\"primary\">\n                { props.playbackState==='PLAYING' ? <PauseIcon /> : <PlayArrowIcon /> }\n            </IconButton>\n            <IconButton className={classes.pausebutton} onClick={ (e) => props.handleSkip(e) } color=\"primary\">\n                <SkipNextIcon />\n            </IconButton>\n            <IconButton className={classes.closebutton} onClick={() => props.close()} aria-label=\"Close\" color=\"primary\" autoFocus>\n                <CloseIcon />\n            </IconButton>\n        </Dialog>\n    )\n    \n};\n\n","import React, { useState, useContext } from 'react';\nimport { LayoutContext } from '../layout/NewLayoutProvider';\nimport { DataContext } from '../DataContext/DataProvider';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport PlayerArtOverlay from './PlayerArtOverlay';\nimport PlayerArtOverlayButtons from './PlayerArtOverlayButtons';\n\nimport PlayerVolume from './PlayerVolume';\nimport PlayerCover from './PlayerCover';\nimport GridItem from '../GridItem';\n\nconst useStyles = makeStyles({\n\n    list: {\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n    },\n});\n\nexport default function PlayerCard(props) {\n    \n    const classes = useStyles();\n    const { applyLayoutCard } = useContext(LayoutContext);\n    const { deviceStateByEndpointId, directive } = useContext(DataContext);\n\n    const [coverView, setCoverView] = useState(false);\n    const coverDefault = '/image/'+props.player.endpointId.split(':')[0]+'/logo'\n    const jukebox = deviceStateByEndpointId('jukebox:player:jukebox')\n\n    function handlePlayPause(event) {\n        event.stopPropagation();\n\n        if (props.player.MusicController.title.value==='Line-In' ) {\n            if (jukebox.MusicController.playbackState.value ==='PLAYING') {\n                directive(jukebox.endpointId, 'MusicController', 'Pause')\n            } else {\n                directive(jukebox.endpointId, 'MusicController', 'Play')\n            }\n        } else {\n            if (props.player.MusicController.playbackState.value ==='PLAYING') {\n                directive(props.player.endpointId, 'MusicController', 'Pause')\n            } else {\n                directive(props.player.endpointId, 'MusicController', 'Play')\n            }\n        }\n    }; \n\n    function handleSkip(event) {\n        if (props.player.MusicController.title.value==='Line-In' ) {\n            directive(jukebox.endpointId, 'MusicController', \"Skip\")\n        } else {\n            directive(props.player.endpointId, 'MusicController', \"Skip\")\n        }\n    }; \n\n    function handleStop(event) {\n        directive(props.player.endpointId, 'MusicController', \"Stop\")\n    }; \n\n    function handleCover() {\n        var elem = document.documentElement;\n        elem.webkitRequestFullScreen();\n        setCoverView(true)\n    }\n\n    function closeCover() {\n        setCoverView(false)\n        document.webkitExitFullscreen();\n    }\n    \n    function handlePlayers(e) {\n        applyLayoutCard('PlayersLayout',{'player':props.player.endpointId})    \n    }\n    \n    function getLinkedPlayers() {\n        var linked=[]\n        if (!props.player.MusicController.linked.value) {\n            return []\n        }\n        if (!Array.isArray(props.player.MusicController.linked.value)) {\n            return []\n        }\n        for (var i = 0; i < props.player.MusicController.linked.value.length; i++) {\n            if (deviceStateByEndpointId(props.player.MusicController.linked.value[i])) {\n                linked.push(deviceStateByEndpointId(props.player.MusicController.linked.value[i]))\n            }\n        }\n        return linked\n    }\n    \n    return (\n        <GridItem wide={props.wide} nopad={true} >\n            { props.player.MusicController.title.value==='Line-In' ?\n                <PlayerArtOverlay   art={jukebox.MusicController.art.value ? jukebox.MusicController.art.value : coverDefault }\n                                    title={jukebox.MusicController.title.value ? jukebox.MusicController.title.value : ''}\n                                    artist={jukebox.MusicController.artist.value ? jukebox.MusicController.artist.value : ''}\n                                    cover={handleCover} setMini={props.setMini}\n                >\n                    <PlayerArtOverlayButtons    min={props.setMini} cover={handleCover} stop={handleStop} players={handlePlayers}\n                                                playPause={handlePlayPause} skip={handleSkip} jukebox={true}\n                                                playbackState={ jukebox.MusicController.playbackState.value ? jukebox.MusicController.playbackState.value : 'Unknown'} />\n                </PlayerArtOverlay>\n            :\n                <PlayerArtOverlay   art={props.player.MusicController.art.value ? props.player.MusicController.art.value : coverDefault }\n                                    title={props.player.MusicController.title.value ? props.player.MusicController.title.value : ''}\n                                    artist={props.player.MusicController.artist.value ? props.player.MusicController.artist.value : ''}\n                                    cover={handleCover} setMini={props.setMini}\n                >\n                    <PlayerArtOverlayButtons    min={props.setMini} cover={handleCover} stop={handleStop} players={handlePlayers}\n                                                playPause={handlePlayPause} skip={handleSkip} \n                                                playbackState={ props.player.MusicController.playbackState.value ? props.player.MusicController.playbackState.value : 'Unknown'} />\n                </PlayerArtOverlay>\n            }\n            <Grid item xs={12}>\n            <List className={classes.list} >\n                <PlayerVolume key={ props.player.endpointId } player={props.player} directive={directive} />\n                { getLinkedPlayers().map( linkedplayer => (\n                    <PlayerVolume key={ linkedplayer.endpointId} player={ linkedplayer } directive={directive} />\n                ))}\n            </List>\n            { coverView ?\n                <PlayerCover playbackState={props.player.MusicController.playbackState.value} handleSkip={ handleSkip} handlePlayPause={handlePlayPause} title={props.player.MusicController.title.value} artist={props.player.MusicController.artist.value} src={props.player.MusicController.art.value} open={coverView} close={ closeCover } />\n                :null\n            }\n            </Grid>\n        </ GridItem >\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z\"\n}), 'ViewModule');\n\nexports.default = _default;"],"sourceRoot":""}