{"version":3,"sources":["player/JukeboxOverlay.js"],"names":["useStyles","makeStyles","theme","oldbigcover","width","maxHeight","position","padding","height","minHeight","bigcover","top","left","bottom","right","maxWidth","minWidth","songTextBox","display","flexDirection","overflow","songImageHolder","margin","songImageAspect","paddingTop","songTextHolder","paddingLeft","boxSizing","justifyContent","songButtonHolder","songTitle","fontSize","paddingBottom","flexBasis","flexGrow","songArtist","fontWeight","imgItem","songText","topbox","borderBottom","borderBottomColor","palette","divider","PlayerArtOverlay","props","classes","serverurl","window","location","hostname","container","className","item","xs","src","art","title","alt","onClick","e","cover","setMini","variant","artist","children"],"mappings":"oHAAA,2FAMMA,EAAYC,aAAW,SAAAC,GACzB,MAAO,CACHC,YAAa,CACTC,MAAO,OACPC,UAAW,IACXC,SAAU,WACVC,QAAS,EACTC,OAAQ,OACRC,UAAU,KAEdC,SAAU,CACNJ,SAAU,WACVK,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,SAAU,OACVV,UAAW,OACXW,SAAU,OACVP,UAAW,QAEfQ,YAAa,CACTX,SAAU,WACVC,QAAS,GACTI,IAAI,EACJE,OAAO,GACPK,QAAS,OACTC,cAAe,SACfC,SAAU,UAEdC,gBAAiB,CACbf,SAAU,WACVC,QAAS,gBACTe,OAAQ,GAEZC,gBAAiB,CACbjB,SAAU,WACVgB,OAAQ,EACRlB,MAAO,OACPoB,WAAY,QAEhBC,eAAgB,CACZC,YAAa,GACbF,WAAY,GACZG,UAAW,aACXT,QAAS,OACTU,eAAgB,SAChBT,cAAe,SACfb,SAAU,WACVE,OAAQ,OAEZqB,iBAAkB,CACdH,YAAa,GACbR,QAAS,OACTU,eAAgB,WAChBT,cAAe,SACfb,SAAU,WACVE,OAAQ,OAEZsB,UAAW,CACPC,SAAS,OACTC,cAAc,GACdC,UAAW,EACXC,SAAS,EACThB,QAAS,OACTE,SAAU,UAEde,WAAY,CACRJ,SAAS,SACTK,WAAW,IACXH,UAAW,EACXC,SAAS,EACThB,QAAS,OACTE,SAAU,UAEdiB,QAAS,CACL9B,QAAS,EACTH,MAAO,OACPY,SAAS,QAEbsB,SAAU,CACNlC,MAAO,QAEXmC,OAAQ,CACJP,cAAe,EACfQ,aAAc,YACdC,kBAAmBvC,EAAMwC,QAAQC,aAK9B,SAASC,EAAiBC,GAErC,IAAMC,EAAU9C,IAEV+C,EAAU,WAAWC,OAAOC,SAASC,SAE3C,OACI,kBAAC,IAAD,CAAMC,WAAS,EAACC,UAAWN,EAAQP,QAC/B,kBAAC,IAAD,CAAMc,MAAI,EAACC,GAAI,EAAGF,UAAWN,EAAQzB,iBACjC,yBAAK+B,UAAWN,EAAQvB,iBACxB,yBACI6B,UAAWN,EAAQpC,SACnB6C,IAAMR,EAAUF,EAAMW,IAAI,UAAUX,EAAMY,MAC1CA,MAAQZ,EAAMY,MACdC,IAAMb,EAAMY,MACZE,QAAU,SAACC,GAAD,OAAOf,EAAMgB,MAAMD,QAKrC,kBAAC,IAAD,CAAMP,MAAI,EAACF,WAAS,EAACG,GAAI,GACrB,kBAAC,IAAD,CAAMD,MAAI,EAACC,GAAI,GAAIF,UAAWN,EAAQrB,eAAgBkC,QAAS,kBAAKd,EAAMiB,SAAQ,KAC9E,kBAAC,IAAD,CAAYC,QAAQ,YAAYX,UAAWN,EAAQR,UAAWO,EAAMY,OACpE,kBAAC,IAAD,CAAYM,QAAQ,YAAYX,UAAWN,EAAQR,UAAWO,EAAMmB,SAExE,kBAAC,IAAD,CAAMX,MAAI,EAACC,GAAI,GAAIF,UAAWN,EAAQjB,kBACjCgB,EAAMoB","file":"static/js/200.182c7b76.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        oldbigcover: {\n            width: \"100%\",\n            maxHeight: 480,\n            position: \"relative\",\n            padding: 0,\n            height: \"auto\",\n            minHeight:100,\n        },\n        bigcover: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            minWidth: \"100%\",\n            minHeight: \"100%\",\n        },\n        songTextBox: {\n            position: \"absolute\",\n            padding: 16,\n            top:0,\n            bottom:64,\n            display: \"flex\",\n            flexDirection: \"column\",\n            overflow: \"hidden\",\n        },\n        songImageHolder: {\n            position: \"relative\",\n            padding: \"16px 0 0 16px\",\n            margin: 0,\n        },\n        songImageAspect: {\n            position: \"relative\",\n            margin: 0,\n            width: \"100%\",\n            paddingTop: \"100%\", /* 1:1 Aspect Ratio */\n        },\n        songTextHolder: {\n            paddingLeft: 16,\n            paddingTop: 16,\n            boxSizing: \"border-box\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            position: \"relative\",\n            height: \"60%\",\n        },\n        songButtonHolder: {\n            paddingLeft: 16,\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            flexDirection: \"column\",\n            position: \"relative\",\n            height: \"40%\",\n        },\n        songTitle: {\n            fontSize:\"3rem\",\n            paddingBottom:16,\n            flexBasis: 0,\n            flexGrow:2,\n            display: \"flex\",\n            overflow: \"hidden\",\n        },\n        songArtist: {\n            fontSize:\"2.2rem\",\n            fontWeight:200,\n            flexBasis: 0,\n            flexGrow:1,\n            display: \"flex\",\n            overflow: \"hidden\",\n        },\n        imgItem: {\n            padding: 0,\n            width: \"100%\",\n            minWidth:\"100%\",\n        },\n        songText: {\n            width: \"100%\",\n        },\n        topbox: {\n            paddingBottom: 8,\n            borderBottom: \"0px solid\",\n            borderBottomColor: theme.palette.divider,\n        },\n    }\n});\n\nexport default function PlayerArtOverlay(props) {\n    \n    const classes = useStyles();\n    //const [imageLoaded, setImageLoaded] = useState(false)\n    const serverurl=\"https://\"+window.location.hostname;\n    \n    return ( \n        <Grid container className={classes.topbox} >\n            <Grid item xs={4} className={classes.songImageHolder}>\n                <div className={classes.songImageAspect} >\n                <img\n                    className={classes.bigcover}\n                    src={ serverurl+props.art+\"?title=\"+props.title }\n                    title={ props.title }\n                    alt={ props.title }\n                    onClick={ (e) => props.cover(e)}\n                    //onLoad={ () => setImageLoaded(true) }\n                />\n                </div>\n            </Grid>\n            <Grid item container xs={8} >\n                <Grid item xs={12} className={classes.songTextHolder} onClick={()=> props.setMini(true)}>\n                    <Typography variant=\"subtitle1\" className={classes.songText}>{props.title}</Typography>\n                    <Typography variant=\"subtitle2\" className={classes.songText}>{props.artist}</Typography>\n                </Grid>\n                <Grid item xs={12} className={classes.songButtonHolder}>\n                    {props.children}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\n"],"sourceRoot":""}