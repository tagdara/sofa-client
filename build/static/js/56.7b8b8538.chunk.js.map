{"version":3,"sources":["GridSection.js","other/Shade.js","other/Computer.js","other/Mode.js","other/Device.js","other/VirtualList.js","other/ComputerList.js","other/ModeList.js","other/DeviceList.js","MoreDevicesLayout.js"],"names":["useStyles","makeStyles","theme","gridColumn","margin","overflowX","overflowY","alignContent","padding","backgroundColor","palette","background","page","borderRadius","nopad","GridSection","props","isMobile","useContext","LayoutContext","classes","container","item","spacing","key","name","xs","className","primary","break","secondary","children","defaultProps","Shade","deviceByEndpointId","DataContext","handlePress","commandName","command","commands","endpointId","controller","directive","value","size","onClick","Computer","avatarState","device","PowerController","powerState","friendlyName","LockController","lockState","color","checked","onChange","event","target","Mode","useState","setPowerState","Device","useEffect","VirtualList","virtualDevices","Fragment","Object","keys","map","index","ComputerList","devices","ModeList","DeviceList","MoreDevicesLayout","devicesByCategory","switches","devs","outdevs","j","length","hasOwnProperty","push","devsWithPowerState","wide"],"mappings":"mHAAA,6HAUMA,EAAYC,aAAW,SAAAC,GACzB,MAAO,CACHC,WAAY,CACRC,OAAQ,EACRC,UAAW,SACXC,UAAW,SACXC,aAAc,QACdC,QAAS,iBACTC,gBAAiBP,EAAMQ,QAAQC,WAAWC,KAC1CC,aAAc,mBAElBC,MAAO,CACHN,QAAS,OAMN,SAASO,EAAYC,GAAQ,IAEhCC,EAAaC,qBAAWC,iBAAxBF,SACFG,EAAUpB,IAEhB,OACI,kBAAC,IAAD,CAAMqB,WAAS,EAACC,MAAI,EAACC,QAAS,EAAGC,IAAKR,EAAMS,KAAMC,GAAI,GAAIC,UAAYP,EAAQjB,YACzEa,EAAMS,MACH,kBAAC,IAAD,CAAMH,MAAI,EAACI,GAAI,GAAIC,UAAWP,EAAQN,OACtC,kBAAC,IAAD,CAAMa,UAAWP,EAAQN,OACrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAcc,QAASZ,EAAMS,SACzBR,IAAaD,EAAMa,QACnB,kBAAC,IAAD,KACKb,EAAMc,YAIhBb,GAAYD,EAAMa,OACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACKb,EAAMc,cAO1Bd,EAAMe,UAKnBhB,EAAYiB,aAAe,CACvBH,OAAO,I,iCC9DX,wNAmBe,SAASI,EAAMjB,GAAQ,IAE1BkB,EAAuBhB,qBAAWiB,eAAlCD,mBAER,SAASE,EAAYC,GACjB,IAAIC,EAAUtB,EAAMuB,SAASF,GACrBH,EAAmBI,EAAQE,YAC/BF,EAAQG,YAAYC,UAAUJ,EAAQA,QAASA,EAAQK,OAG/D,OACI,kBAAC,UAAD,KACA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAQ,kBAAC,IAAD,QAEZ,kBAAC,IAAD,CAAcf,QAASZ,EAAMS,OAC7B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAamB,KAAK,SACd,kBAAC,IAAD,CAAQC,QAAU,kBAAMT,EAAY,UAAU,kBAAC,IAAD,OAC9C,kBAAC,IAAD,CAAQS,QAAU,kBAAMT,EAAY,UAAU,kBAAC,IAAD,OAC9C,kBAAC,IAAD,CAAQS,QAAU,kBAAMT,EAAY,QAAQ,kBAAC,IAAD,a,iCCxChE,uIAWe,SAASU,EAAS9B,GAW7B,OACI,kBAAC,UAAD,KACI,kBAAC,IAAD,KACI,kBAAC,UAAD,CAAc+B,YAA8D,OAAhD/B,EAAMgC,OAAOC,gBAAgBC,WAAWP,MAAe,KAAO,OAAO,kBAAC,IAAD,OAC/C,OAAhD3B,EAAMgC,OAAOC,gBAAgBC,WAAWP,MAC1C,kBAAC,IAAD,CAAcf,QAASZ,EAAMgC,OAAOG,aAAcrB,UAAyD,WAA9Cd,EAAMgC,OAAOI,eAAeC,UAAUV,MAAmB,SAAS,aAE/H,kBAAC,IAAD,CAAcf,QAASZ,EAAMgC,OAAOG,aAAcrB,UAAW,gBAE7D,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQwB,MAAM,UAAUC,QAAyD,OAAhDvC,EAAMgC,OAAOC,gBAAgBC,WAAWP,MAAca,SAnBvG,SAA2BC,GAEnBA,EAAMC,OAAOH,QACbvC,EAAMgC,OAAOC,gBAAgBP,UAAU,UAEvC1B,EAAMgC,OAAOC,gBAAgBP,UAAU,mB,+KCNpC,SAASiB,EAAK3C,GAAQ,IAAD,EAEI4C,mBAAS5C,EAAMgC,OAAOC,gBAAgBC,WAAWP,OAFrD,mBAEzBO,EAFyB,KAEbW,EAFa,KAahC,OACI,kBAAC,UAAD,KACI,kBAAC,IAAD,KACI,kBAAC,UAAD,CAAcd,YAA0B,OAAbG,EAAoB,KAAO,OAAO,kBAAC,IAAD,OAC7D,kBAAC,IAAD,CAActB,QAASZ,EAAMgC,OAAOG,eACpC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQG,MAAM,UAAUC,QAAyD,OAAhDvC,EAAMgC,OAAOC,gBAAgBC,WAAWP,MAAca,SAfvG,SAA2BC,GACvBI,EAAcJ,EAAMC,OAAOH,SACvBE,EAAMC,OAAOH,QACbvC,EAAMgC,OAAOC,gBAAgBP,UAAU,UAEvC1B,EAAMgC,OAAOC,gBAAgBP,UAAU,mB,+KCVpC,SAASoB,EAAO9C,GAAQ,IAAD,EAEE4C,mBAAS5C,EAAMgC,OAAOC,gBAAgBC,WAAWP,OAFnD,mBAE3BO,EAF2B,KAEfW,EAFe,KAiBlC,OAbAE,qBAAU,WACNF,EAAc7C,EAAMgC,OAAOC,gBAAgBC,WAAWP,SACvD,CAAC3B,EAAMgC,OAAOC,gBAAgBC,WAAWP,QAYxC,kBAAC,UAAD,KACI,kBAAC,IAAD,KACI,kBAAC,UAAD,CAAcI,YAA2B,OAAbG,EAAoB,KAAO,OAAO,kBAAC,IAAD,OAC9D,kBAAC,IAAD,CAActB,QAASZ,EAAMgC,OAAOG,eACpC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQG,MAAM,UAAUC,QAAsB,OAAbL,EAAmBM,SAfpE,SAA2BC,GACvBI,EAAcJ,EAAMC,OAAOH,QAAU,KAAO,OACxCE,EAAMC,OAAOH,QACbvC,EAAMgC,OAAOC,gBAAgBP,UAAU,UAEvC1B,EAAMgC,OAAOC,gBAAgBP,UAAU,mB,iCCxBnD,oFAKe,SAASsB,EAAYhD,GAAQ,IAEhCiD,EAAmB/C,qBAAWiB,eAA9B8B,eAER,OACIA,EACI,kBAAC,IAAMC,SAAP,KACMC,OAAOC,KAAKH,GAAgBI,KAAI,SAAC7C,EAAK8C,GAAN,MACA,UAA9BL,EAAezC,GAAf,KACI,kBAAC,UAAD,CAAOA,IAAM8C,EAAQ7C,KAAOD,EAAMgB,WAAayB,EAAezC,GAAKgB,WAAaD,SAAW0B,EAAezC,GAAKe,WAC9G,SAGf,O,iCClBV,4EAGe,SAASgC,EAAavD,GAEjC,OACI,kBAAC,IAAMkD,SAAP,KACMlD,EAAMwD,QAAQH,KAAI,SAACrB,GAAD,OAChB,kBAAC,UAAD,CAAUxB,IAAMwB,EAAOR,WAAaQ,OAASA,U,iCCR7D,4EAGe,SAASyB,EAASzD,GAE7B,OACI,kBAAC,IAAMkD,SAAP,KACMlD,EAAMwD,QAAQH,KAAI,SAACrB,GAAD,OAChB,kBAAC,UAAD,CAAMxB,IAAMwB,EAAOR,WAAaQ,OAASA,U,iCCRzD,4EAIe,SAAS0B,EAAW1D,GAE/B,OACI,kBAAC,IAAMkD,SAAP,KACMlD,EAAMwD,QAAQH,KAAI,SAAArB,GAAM,OACtB,kBAAC,UAAD,CAAQxB,IAAMwB,EAAOR,WAAaQ,OAASA,U,iCCT3D,gIASe,SAAS2B,EAAkB3D,GAAQ,IAEtC4D,EAAsB1D,qBAAWiB,eAAjCyC,kBACFC,EAEN,SAA4BC,GAExB,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IACzBF,EAAKE,GAAGE,eAAe,oBACvBH,EAAQI,KAAKL,EAAKE,IAG1B,OAAOD,EATMK,CAAmBR,EAAkB,WAYtD,OACI,kBAAC,IAAMV,SAAP,KACI,kBAAC,UAAD,CAAazC,KAAM,UACf,kBAAC,UAAD,CAAe4D,KAAMrE,EAAMqE,MACvB,kBAAC,UAAD,QAGNR,GACF,kBAAC,UAAD,CAAapD,KAAM,iBACf,kBAAC,UAAD,CAAe4D,KAAMrE,EAAMqE,MACvB,kBAAC,UAAD,CAAYb,QAAUK,MAK5BD,EAAkB,SACpB,kBAAC,UAAD,CAAanD,KAAM,SACf,kBAAC,UAAD,CAAe4D,KAAMrE,EAAMqE,MACvB,kBAAC,UAAD,CAAUb,QAAUI,EAAkB,YAK5CA,EAAkB,OACpB,kBAAC,UAAD,CAAanD,KAAM,aACf,kBAAC,UAAD,CAAe4D,KAAMrE,EAAMqE,MACvB,kBAAC,UAAD,CAAcb,QAAUI,EAAkB,UAMhDA,EAAkB,UACpB,kBAAC,UAAD,CAAanD,KAAM,YACf,kBAAC,UAAD,CAAe4D,KAAMrE,EAAMqE,MACvB,kBAAC,UAAD,CAAYb,QAAUI,EAAkB","file":"static/js/56.7b8b8538.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        gridColumn: {\n            margin: 1,\n            overflowX: \"hidden\",\n            overflowY: \"hidden\",\n            alignContent: \"start\",\n            padding: \"3px !important\",\n            backgroundColor: theme.palette.background.page,\n            borderRadius: \"4px 4px 4px 4px\",\n        },\n        nopad: {\n            padding: 0,\n        }\n    }\n});\n\n\nexport default function GridSection(props) {\n    \n    const { isMobile } = useContext(LayoutContext);\n    const classes = useStyles();\n\n    return (\n        <Grid container item spacing={1} key={props.name} xs={12} className={ classes.gridColumn}>\n            {props.name &&\n                <Grid item xs={12} className={classes.nopad}>\n                <List className={classes.nopad}>\n                    <ListItem>\n                        <ListItemText primary={props.name} />\n                        { (!isMobile || !props.break) &&\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        }\n                    </ListItem>\n                    { (isMobile && props.break) &&\n                        <ListItem>\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    }\n                </List>\n                </Grid>\n            }\n            {props.children}\n        </Grid>\n    );\n}\n\nGridSection.defaultProps = {\n    break: false\n}\n \n\n","import React, { useContext } from 'react';\nimport { DataContext } from '../DataContext/DataProvider';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport TonalityIcon from '@material-ui/icons/Tonality';\n\nimport GridItem from '../GridItem';\n\n\nexport default function Shade(props) {\n    \n    const { deviceByEndpointId } = useContext(DataContext);\n    \n    function handlePress(commandName) {\n        var command = props.commands[commandName]\n        var dev=deviceByEndpointId(command.endpointId)\n        dev[command.controller].directive(command.command, command.value)\n    }   \n\n    return (\n        <GridItem>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar><TonalityIcon /></Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={props.name}/>\n            <ListItemSecondaryAction>\n                <ButtonGroup size=\"small\" >\n                    <Button onClick={ () => handlePress('down') }><ExpandMoreIcon /></Button>\n                    <Button onClick={ () => handlePress('stop') }><RemoveIcon /></Button>\n                    <Button onClick={ () => handlePress('up') }><ExpandLessIcon /></Button>\n                </ButtonGroup>\n            </ListItemSecondaryAction>\n        </ListItem>\n        </GridItem>\n    );\n}\n","import React from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Switch from '@material-ui/core/Switch';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\n\nimport GridItem from '../GridItem';\nimport ToggleAvatar from '../ToggleAvatar';\n\nexport default function Computer(props) {\n\n    function handlePowerChange(event) {\n\n        if (event.target.checked) {\n            props.device.PowerController.directive('TurnOn')\n        } else {\n            props.device.PowerController.directive('TurnOff')\n        }\n    }; \n    \n    return (\n        <GridItem >\n            <ListItem>\n                <ToggleAvatar avatarState={ props.device.PowerController.powerState.value==='ON' ? 'on' : 'off'}><DesktopWindowsIcon /></ToggleAvatar>\n                { props.device.PowerController.powerState.value==='ON' ?\n                <ListItemText primary={props.device.friendlyName} secondary={props.device.LockController.lockState.value==='LOCKED' ? 'Locked':'Unlocked'}/>\n                : \n                <ListItemText primary={props.device.friendlyName} secondary={'Powered off'}/>\n                }\n                <ListItemSecondaryAction>\n                    <Switch color=\"primary\" checked={props.device.PowerController.powerState.value==='ON'} onChange={handlePowerChange} />\n                </ListItemSecondaryAction>\n           </ListItem>\n        </GridItem>   \n    );\n}\n","import React, { useState } from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Switch from '@material-ui/core/Switch';\nimport TuneIcon from '@material-ui/icons/Tune';\n\nimport GridItem from '../GridItem';\nimport ToggleAvatar from '../ToggleAvatar';\n\n\nexport default function Mode(props) {\n\n    const [powerState, setPowerState] = useState(props.device.PowerController.powerState.value);\n    \n    function handlePowerChange(event) {\n        setPowerState(event.target.checked);\n        if (event.target.checked) {\n            props.device.PowerController.directive('TurnOn')\n        } else {\n            props.device.PowerController.directive('TurnOff')\n        }\n    }; \n    \n    return (\n        <GridItem >\n            <ListItem>\n                <ToggleAvatar avatarState={powerState==='ON' ? 'on' : 'off'}><TuneIcon /></ToggleAvatar>\n                <ListItemText primary={props.device.friendlyName}/>\n                <ListItemSecondaryAction>\n                    <Switch color=\"primary\" checked={props.device.PowerController.powerState.value==='ON'} onChange={handlePowerChange} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        </GridItem>\n    );\n}\n\n","import React, { useState, useEffect } from 'react';\n\nimport ToggleAvatar from '../ToggleAvatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Switch from '@material-ui/core/Switch';\nimport TuneIcon from '@material-ui/icons/Tune';\n\nimport GridItem from '../GridItem';\n\nexport default function Device(props) {\n    \n    const [powerState, setPowerState] = useState(props.device.PowerController.powerState.value);\n\n    useEffect(() => {\n        setPowerState(props.device.PowerController.powerState.value)\n    }, [props.device.PowerController.powerState.value])\n\n    function handlePowerChange(event) {\n        setPowerState(event.target.checked ? 'ON' : 'OFF');\n        if (event.target.checked) {\n            props.device.PowerController.directive('TurnOn')\n        } else {\n            props.device.PowerController.directive('TurnOff')\n        }\n    }; \n\n    return (\n        <GridItem>\n            <ListItem>\n                <ToggleAvatar avatarState={ powerState==='ON' ? 'on' : 'off'}><TuneIcon /></ToggleAvatar>\n                <ListItemText primary={props.device.friendlyName}/>\n                <ListItemSecondaryAction>\n                    <Switch color=\"primary\" checked={powerState==='ON'} onChange={handlePowerChange} />\n                </ListItemSecondaryAction>\n           </ListItem>\n        </GridItem> \n    );\n}\n\n\n","import React, { useContext } from 'react';\nimport { DataContext } from '../DataContext/DataProvider';\n\nimport Shade from './Shade';\n\nexport default function VirtualList(props) {\n\n    const { virtualDevices } = useContext(DataContext);\n\n    return (\n        virtualDevices ?\n            <React.Fragment>\n                { Object.keys(virtualDevices).map((key, index) => (\n                    virtualDevices[key]['type']==='shade' ?\n                        <Shade key={ index } name={ key } endpointId={ virtualDevices[key].endpointId } commands={ virtualDevices[key].commands } />\n                        :null\n                ))}\n            </React.Fragment>\n        : null \n    );\n}\n","import React from \"react\";\nimport Computer from './Computer';\n\nexport default function ComputerList(props) {\n\n    return (\n        <React.Fragment >\n            { props.devices.map((device) =>\n                <Computer key={ device.endpointId } device={ device } />\n            )}\n        </React.Fragment>\n    )\n}\n","import React from \"react\";\nimport Mode from './Mode';\n\nexport default function ModeList(props) {\n\n    return (\n        <React.Fragment>\n            { props.devices.map((device) =>\n                <Mode key={ device.endpointId } device={ device }  />\n            )}\n        </React.Fragment>\n    )\n}\n","import React from 'react';\n\nimport Device from './Device';\n\nexport default function DeviceList(props) {\n\n    return (\n        <React.Fragment>\n            { props.devices.map(device =>\n                <Device key={ device.endpointId } device={ device } />\n            )}\n        </React.Fragment>\n    )\n}\n","import React, { useContext } from 'react';\nimport { DataContext } from './DataContext/DataProvider';\nimport ErrorBoundary from './ErrorBoundary';\nimport VirtualList from './other/VirtualList';\nimport ComputerList from './other/ComputerList';\nimport ModeList from './other/ModeList';\nimport DeviceList from './other/DeviceList';\nimport GridSection from './GridSection';\n\nexport default function MoreDevicesLayout(props) {\n\n    const { devicesByCategory } = useContext(DataContext);\n    const switches = devsWithPowerState(devicesByCategory('SWITCH'))\n    \n    function devsWithPowerState(devs) {\n        var outdevs=[]\n        for (var j = 0; j < devs.length; j++) {\n            if (devs[j].hasOwnProperty('PowerController')) {\n                outdevs.push(devs[j])\n            }\n        }\n        return outdevs\n    }\n \n    return (\n        <React.Fragment>\n            <GridSection name={'Shades'}>\n                <ErrorBoundary wide={props.wide}>\n                    <VirtualList />\n                </ErrorBoundary>\n            </GridSection>\n            { switches &&\n            <GridSection name={\"Other Devices\"} >\n                <ErrorBoundary wide={props.wide}>\n                    <DeviceList devices={ switches } />\n                </ErrorBoundary>\n\n            </GridSection>\n            }\n            { devicesByCategory('MODE') && \n            <GridSection name={\"Modes\"} >\n                <ErrorBoundary wide={props.wide}>\n                    <ModeList devices={ devicesByCategory('MODE') } />\n                </ErrorBoundary>\n\n            </GridSection>\n            }\n            { devicesByCategory('PC') &&\n            <GridSection name={\"Computers\"} >\n                <ErrorBoundary wide={props.wide}>\n                    <ComputerList devices={ devicesByCategory('PC') }  />\n                </ErrorBoundary>\n\n            </GridSection>\n            }\n\n            { devicesByCategory('OTHER') &&\n            <GridSection name={\"Services\"} >\n                <ErrorBoundary wide={props.wide}>\n                    <DeviceList devices={ devicesByCategory('OTHER') } />\n                </ErrorBoundary>\n\n            </GridSection>\n            }\n\n        </React.Fragment>\n    )\n}\n\n"],"sourceRoot":""}