{"version":3,"sources":["camera/cameraDialog.js","camera/securitycamera.js","CameraSelect.js"],"names":["useStyles","makeStyles","bigcamDialog","backgroundColor","paddingTop","paddingBottom","minWidth","boxSizing","root","paper","boxShadow","overflow","bigcamPaper","margin","maxHeight","display","bigcam","width","height","maxWidth","background","opacity","padding","borderRadius","bigcamRotated","position","top","left","marginTop","marginLeft","rotatebutton","zIndex","right","ratebutton","closebutton","Hls","window","CameraDialog","props","classes","useState","rotation","setRotation","uri","setUri","video","useRef","enableScaling","document","querySelector","setAttribute","closeDialog","e","close","useEffect","camera","CameraStreamController","directive","then","response","payload","cameraStreams","console","log","live","isSupported","hls","loadSource","attachMedia","current","on","Events","MANIFEST_PARSED","play","fullScreen","open","show","onClose","className","PaperProps","size","aria-label","onClick","changeInterval","refreshInterval","color","controls","muted","autoPlay","playsInline","id","style","transform","ref","src","type","alt","friendlyName","nextbutton","prevbutton","gridbutton","bottom","newgridbutton","im","hiddenimage","hidden","spinner","SecurityCamera","useContext","LayoutContext","isMobile","applyLayoutCard","intervals","imageLoaded","setImageLoaded","showDialog","setShowDialog","setRefreshInterval","imageUri","setImageUri","updateUrl","setUpdateUrl","callback","delay","savedCallback","setInterval","clearInterval","useInterval","Date","now","wide","nopad","thinmargin","onLoad","Fragment","prevCamera","nextCamera","selectButtons","name","shift","push","CameraSelect","cameras","devicesByCategory","DataContext","currentCamera","setCurrentCamera","key","endpointId","nextcam","indexOf","length"],"mappings":"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","file":"static/js/111.09f5532d.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport ScreenRotationIcon from '@material-ui/icons/ScreenRotation';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\n\nconst useStyles = makeStyles({    \n    bigcamDialog: {\n        backgroundColor: \"#222\",\n        paddingTop: \"env(safe-area-inset-top)\",\n        paddingBottom: \"env(safe-area-inset-bottom)\",\n        minWidth: '320px',\n        boxSizing: \"border-box\",\n    },\n    root: {\n        backgroundColor: \"#111\"\n    },\n    paper: {\n        backgroundColor: \"#111\",\n        boxShadow: \"none\",\n        overflow: \"hidden\"\n    },\n    bigcamPaper: {\n        margin: \"auto 4px\",\n        maxHeight: \"100%\",\n        display: \"flex\",\n    },\n    bigcam: {\n        width: \"100%\",\n        height: \"auto !important\",\n        maxWidth: \"100%\",\n        maxHeight: \"100%\",\n        background: \"#222\",\n        opacity: \"1.0\", \n        margin: \"auto auto\",\n        padding: 0,\n        borderRadius: 4,\n    },\n    bigcamRotated: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        height: \"100vw\",\n        maxWidth: \"initial\",\n        padding: 0,\n        margin: \"auto auto\",\n        marginTop: \"calc((100vh - 100vw) / 2.5)\",\n        marginLeft: \"calc((100vw * -1) /2.5) !important\",\n        borderRadius: 4,\n    },\n\n    rotatebutton: {\n        zIndex: 2000,\n        position: \"absolute\",\n        top: 16,\n        right: 72,\n    },\n    ratebutton: {\n        zIndex: 2000,\n        position: \"absolute\",\n        top: 16,\n        right: 190,\n    },\n    closebutton: {\n        zIndex: 2000,\n        position: \"absolute\",\n        top: 16,\n        right: 16,\n    },\n});\n\nconst Hls = window.Hls;\n\nexport default function CameraDialog(props) {\n\n    const classes = useStyles();\n    const [rotation, setRotation]=useState(0)\n    const [uri, setUri]=useState(\"\")\n    const video = useRef(null);\n\n    useEffect(()=> {\n        enableScaling()\n    },[]);\n\n    useEffect(()=> {\n        props.camera.CameraStreamController.directive(\"InitializeCameraStreams\", \n            {\n                \"cameraStreams\": [\n                    {\n                        \"protocol\": \"HLS\",\n                        \"resolution\": {\n                            \"width\": 640,\n                            \"height\": 480\n                        },\n                        \"authorizationType\": \"BASIC\",\n                        \"videoCodec\": \"H264\",\n                        \"audioCodec\": \"AAC\"\n                    }\n                ]\n            }\n        ).then(response => setUri(response.payload.cameraStreams[0].uri));\n    },[props.camera]);\n    \n    \n    useEffect(()=> {\n        console.log('uri update',uri)\n        enableScaling()\n        if (props.live && window.Hls.isSupported() ) {\n            var hls = new Hls();\n            hls.loadSource(uri);\n            hls.attachMedia(video.current);\n            hls.on(Hls.Events.MANIFEST_PARSED,function() { video.current.play(); });\n        }\n    }, [uri, props.live])\n    \n            \n    function enableScaling() {\n        var viewport = document.querySelector(\"meta[name=viewport]\");\n        viewport.setAttribute('content', \"viewport-fit=cover, width=device-width, initial-scale=1, maximum-scale=5, user-scalable=yes\");\n    }\n\n    function disableScaling() {\n        var viewport = document.querySelector(\"meta[name=viewport]\");\n        viewport.setAttribute('content', \"viewport-fit=cover, width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\");\n    }\n    \n    function closeDialog(e) {\n        disableScaling()\n        props.close()\n    }\n    \n    function rotate() {\n\n        \n        if (rotation!==90) {\n            setRotation(90)\n        } else {\n            setRotation(0)\n        }\n        console.log('set rotate to ',rotation)\n\n    }\n\n    return (\n        <Dialog fullScreen open={props.show} onClose={() => closeDialog()} className={classes.bigcamDialog} PaperProps ={{ classes: { root: classes.paper}}}>\n            { !props.live && \n            <Fab size=\"medium\" aria-label=\"Rate\" className={classes.ratebutton} onClick={() => props.changeInterval()}  >\n                <TimerIcon />{props.refreshInterval/1000}\n            </Fab>\n            }\n            <Fab size=\"medium\" color=\"primary\" aria-label=\"Close\" className={classes.closebutton} onClick={() => closeDialog()} >\n                <CloseIcon />\n            </Fab>\n            <Fab size=\"medium\" aria-label=\"Rotate\" className={classes.rotatebutton} onClick={() => rotate()}>\n                <ScreenRotationIcon />\n            </Fab>\n            <Paper className={classes.bigcamPaper} >\n                { props.live ?\n                <video controls muted autoPlay playsInline id=\"video\" className={rotation>0 ? classes.bigcamRotated : classes.bigcam} style={{transform: `rotate(${rotation}deg)`}} ref={video}>\n                    <source src={uri} type=\"application/x-mpegURL\" />\n                </video>\n                :\n                <img alt={props.camera.friendlyName} className={rotation>0 ? classes.bigcamRotated : classes.bigcam} style={{transform: `rotate(${rotation}deg)`}} src={props.src}/>\n                }\n            </Paper>\n        </Dialog>\n    )\n};\n\n","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { LayoutContext } from '../layout/NewLayoutProvider';\nimport { makeStyles } from '@material-ui/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\n\nimport CameraDialog from './cameraDialog';\nimport GridItem from '../GridItem';\n\nconst useStyles = makeStyles({    \n    \n    nextbutton: {\n        position: \"absolute\",\n        top: \"40%\",\n        right: 8,\n    },\n    prevbutton: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: 8,\n    },\n    gridbutton: {\n        position: \"absolute\",\n        left: 8,\n        bottom: 8,\n    },\n    newgridbutton: {\n        position: \"absolute\",\n        right: 8,\n        bottom: 8,\n    },\n\n    im: {\n        width: \"100%\",\n        height: \"auto\",\n        borderRadius: 4,\n        display: \"flex\",\n    },\n    hiddenimage: {\n        height: 0,\n        display: \"none\",\n    },\n    hidden: {\n        borderRadius: 4,\n        position: \"relative\",\n        width: \"100%\",\n        paddingTop: '56.25%', // 16:9\n    },\n    spinner: {\n        position: \"absolute\",\n        margin: \"auto\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n});\n\nfunction useInterval(callback, delay) {\n    \n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default function SecurityCamera(props) {\n\n    const classes = useStyles();\n    const { isMobile, applyLayoutCard } = useContext(LayoutContext);\n    const intervals = [1000, 500, 5000, 3000]\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [showDialog, setShowDialog] = useState(false);\n    const [refreshInterval, setRefreshInterval] = useState(3000);\n    const live = true;\n    const [imageUri,setImageUri] = useState(\"\")\n    const [updateUrl, setUpdateUrl] = useState(\"\");\n\n    useInterval(() => {\n        // Your custom logic here\n        if (imageUri) {\n            setUpdateUrl(imageUri+\"?time=\"+Date.now())\n        }\n    }, refreshInterval);\n    \n    useEffect(()=> {\n        props.camera.CameraStreamController.directive(\"InitializeCameraStreams\", \n            {\n                \"cameraStreams\": [\n                    {\n                        \"protocol\": \"HLS\",\n                        \"resolution\": {\n                            \"width\": 640,\n                            \"height\": 480\n                        },\n                        \"authorizationType\": \"BASIC\",\n                        \"videoCodec\": \"H264\",\n                        \"audioCodec\": \"AAC\"\n                    }\n                ]\n            }\n        ).then(response => { setUpdateUrl(response.payload.imageUri+\"?time=\"+Date.now()); setImageUri(response.payload.imageUri) })\n    },[props.camera]);\n\n    function imageFinished() {\n        if (!imageLoaded) {\n            setImageLoaded(true);\n        }\n    }\n    \n    function changeInterval() {\n        setRefreshInterval(intervals.shift())\n        intervals.push(refreshInterval)\n    }\n    \n    function closeDialog() {\n        setShowDialog(false)\n    }\n    \n    function handleClickOpen() {\n        setShowDialog(true)\n    }\n    \n    return (\n        <GridItem wide={props.wide} nopad={true} thinmargin={isMobile}>\n            { imageUri && \n                <img\n                    className={imageLoaded ? classes.im : classes.hiddenimage}\n                    src={updateUrl}\n                    onLoad={ () => imageFinished() }\n                    onClick={ () => handleClickOpen()}\n                    alt={props.camera.friendlyName+\" Security Camera\"}\n                />\n            }\n            {imageLoaded ?\n                <React.Fragment>\n                    { props.prevCamera &&\n                        <IconButton color=\"primary\" className={classes.prevbutton} onClick={ () => props.prevCamera()}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    }\n                    { props.nextCamera &&\n                        <IconButton color=\"primary\" className={classes.nextbutton} onClick={ () => props.nextCamera()}>\n                            <ChevronRightIcon />\n                        </IconButton>\n                    }\n                    { props.selectButtons &&\n                        <IconButton color=\"primary\" className={classes.newgridbutton} onClick={ () => applyLayoutCard('CameraLayout')}>\n                            <ViewModuleIcon />\n                        </IconButton>\n                    }\n\n                </React.Fragment>\n            :\n                <div className={classes.hidden}>\n                    <CircularProgress className={classes.spinner} size={50} />\n                </div>\n            }\n            { showDialog &&\n                <CameraDialog live={live} camera={props.camera} name={props.name} refreshInterval={refreshInterval} changeInterval={changeInterval} show={showDialog} close={closeDialog} src={imageUri} />\n            }\n        </GridItem>\n    );\n}\n","import React, { useState, useContext } from 'react';\nimport { DataContext } from './DataContext/DataProvider';\n\nimport SecurityCamera from './camera/securitycamera';\n\nexport default function CameraSelect(props) {\n\n    //const [cameras, setCameras] = useState({});\n    const { devicesByCategory } = useContext(DataContext);\n    const cameras=devicesByCategory(['CAMERA'])\n    const [currentCamera, setCurrentCamera] = useState(cameras[0]);\n\n    function nextCamera() {\n        var nextcam=cameras.indexOf(currentCamera)+1\n        if (nextcam>cameras.length-1) { nextcam=0; }\n        if (nextcam<0) {nextcam=cameras.length-1; }\n        setCurrentCamera(cameras[nextcam])\n    }\n    \n    function prevCamera() {\n        var nextcam=cameras.indexOf(currentCamera)-1\n        if (nextcam>cameras.length-1) { nextcam=0; }\n        if (nextcam<0) {nextcam=cameras.length-1; }\n        setCurrentCamera(cameras[nextcam])\n    }\n\n    return (\n        <React.Fragment>\n            { currentCamera!=null ?\n            <SecurityCamera wide={props.wide} camera={currentCamera} selectButtons={true} key={ currentCamera.endpointId } \n                            name={ currentCamera.friendlyName } nextCamera={nextCamera} prevCamera={prevCamera} />\n            :null }\n        </React.Fragment> \n    );\n}"],"sourceRoot":""}