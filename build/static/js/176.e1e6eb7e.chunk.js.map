{"version":3,"sources":["controllers/properties/input.js"],"names":["BootstrapInput","withStyles","theme","input","minWidth","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","borderColor","boxShadow","InputBase","Input","props","inputs","choices","k","device","capabilities","length","interface","endsWith","j","push","name","console","log","getInputs","useEffect","undefined","item","value","directive","endpointId","instance","onChange","e","target","id","map","inp","key"],"mappings":"oHAAA,uGAOMA,EAAiBC,aAAW,SAAAC,GAAK,MAAK,CACxCC,MAAO,CACHC,SAAU,QACVC,aAAc,EACdC,SAAU,WACVC,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CC,OAAQ,oBACRC,SAAU,GACVC,QAAS,sBACTC,WAAYZ,EAAMa,YAAYC,OAAO,CAAC,eAAgB,eACtD,UAAW,CACPX,aAAc,EACdY,YAAa,UACbC,UAAW,wCAbAjB,CAgBnBkB,KAEW,SAASC,EAAMC,GAE1B,IAAMC,EASN,WAGI,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAIH,EAAMI,OAAOC,aAAaC,OAAQH,IAClD,GAAIH,EAAMI,OAAOC,aAAaF,GAAGI,UAAUC,SAAS,mBAChD,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAMI,OAAOC,aAAaF,GAAGF,OAAOK,OAAQG,IAC5DP,EAAQQ,KAAKV,EAAMI,OAAOC,aAAaF,GAAGF,OAAOQ,GAAGE,MAKhE,OADAC,QAAQC,IAAI,UAAUX,GACfA,EApBEY,GA2Bb,OAzBAC,qBAAU,gBACiBC,IAAnBhB,EAAMiB,KAAKC,OACXlB,EAAMmB,UAAUnB,EAAMI,OAAOgB,WAAY,kBAAmB,WAAY,CAAE,MAAUnB,EAAO,IAAM,GAAID,EAAMiB,KAAKI,YAGrH,CAACrB,EAAMiB,KAAMjB,EAAMI,OAAQJ,EAAMO,YAqBhC,kBAAC,IAAD,CAAQW,MAAOlB,EAAMiB,KAAKC,MAAMpC,MAAQkB,EAAMiB,KAAKC,MAAMpC,MAAQ,GAAIwC,SALzE,SAA2BC,GACvBvB,EAAMmB,UAAUnB,EAAMI,OAAOgB,WAAY,kBAAmB,WAAY,CAAE,MAAUG,EAAEC,OAAON,OAAS,GAAIlB,EAAMiB,KAAKI,WAInBvC,MAAO,kBAACH,EAAD,CAAgBgC,KAAK,QAAQc,GAAG,WACnIxB,EAAOyB,KAAK,SAAAC,GAAG,OACb,kBAAC,IAAD,CAAUC,IAAKD,EAAKT,MAAOS,GAAMA","file":"static/js/176.e1e6eb7e.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport {withStyles } from '@material-ui/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\n\n\nconst BootstrapInput = withStyles(theme => ({\n    input: {\n        minWidth: '100px',\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        padding: '10px 26px 10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderRadius: 4,\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n}))(InputBase);\n\nexport default function Input(props) {\n    \n    const inputs=getInputs()\n\n    useEffect(() => {\n        if (props.item.value===undefined) {\n            props.directive(props.device.endpointId, 'InputController', 'SetInput', { \"input\" : inputs[0] }, {}, props.item.instance)\n        }\n    // eslint-disable-next-line\n    }, [props.item, props.device, props.interface])\n    \n    function getInputs() {\n        \n        var choices=[]        \n        for (var k = 0; k < props.device.capabilities.length; k++) {\n            if (props.device.capabilities[k].interface.endsWith('InputController')) {\n                for (var j = 0; j < props.device.capabilities[k].inputs.length; j++) {\n                    choices.push(props.device.capabilities[k].inputs[j].name)\n                }\n            }\n        }\n        console.log('inputs:',choices)\n        return choices\n    }    \n    \n    function handleInputChange(e) {\n        props.directive(props.device.endpointId, 'InputController', 'SetInput', { \"input\" : e.target.value }, {}, props.item.instance)\n    }\n\n    return (\n        <Select value={props.item.value.input ? props.item.value.input : \"\"} onChange={handleInputChange} input={<BootstrapInput name=\"input\" id=\"input\" />} >\n            { inputs.map( inp => \n                <MenuItem key={inp} value={inp}>{inp}</MenuItem>\n            )}\n        </Select>\n    );\n\n}"],"sourceRoot":""}