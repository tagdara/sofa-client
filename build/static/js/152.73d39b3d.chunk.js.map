{"version":3,"sources":["automation/UnitButton.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js"],"names":["useStyles","makeStyles","button","maxWidth","minWidth","units","UnitButton","props","classes","useState","anchor","setAnchor","Fragment","id","index","onClick","event","currentTarget","className","value","anchorEl","open","Boolean","onClose","map","option","key","selected","indexOf","item","setUnit","MenuItem","React","forwardRef","ref","tabIndex","_props$component","component","_props$disableGutters","disableGutters","_props$role","role","tabIndexProp","other","_objectWithoutProperties","disabled","undefined","createElement","ListItem","_extends","dense","clsx","root","gutters","withStyles","theme","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","name"],"mappings":"iOAQMA,EAAYC,YAAW,CAEzBC,OAAQ,CACJC,SAAU,GACVC,SAAU,MAKZC,EAAQ,CACV,MACA,QACA,QAGW,SAASC,EAAWC,GAE/B,IAAMC,EAAUR,IAFsB,EAGVS,mBAAS,MAHC,mBAG/BC,EAH+B,KAGvBC,EAHuB,KAmBtC,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CAAQC,GAAI,KAAKN,EAAMO,MAAOC,QAftC,SAAqBC,GACjBL,EAAUK,EAAMC,gBAcwCC,UAAWV,EAAQN,QAClEK,EAAMY,MAAQZ,EAAMY,MAAQ,OAGjC,kBAAC,IAAD,CAAMN,GAAG,YAAYO,SAAUV,EAAQW,KAAMC,QAAQZ,GAASa,QAftE,SAAqBP,GACjBL,EAAU,QAeDN,EAAMmB,KAAI,SAACC,EAAQX,GAAT,OACP,kBAAC,IAAD,CACIY,IAAKD,EACLE,SAAUb,IAAUT,EAAMuB,QAAQrB,EAAMY,OACxCJ,QAAS,SAAAC,GAAK,OAhBDa,EAgB6Bf,EAf1DH,EAAU,WACVJ,EAAMuB,QAAQzB,EAAMwB,IAFxB,IAAiCA,IAkBZJ,U,iCCvDzB,uEAoCIM,EAAWC,IAAMC,YAAW,SAAkB1B,EAAO2B,GACvD,IAYIC,EAZA3B,EAAUD,EAAMC,QAChBU,EAAYX,EAAMW,UAClBkB,EAAmB7B,EAAM8B,UACzBA,OAAiC,IAArBD,EAA8B,KAAOA,EACjDE,EAAwB/B,EAAMgC,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAcjC,EAAMkC,KACpBA,OAAuB,IAAhBD,EAAyB,WAAaA,EAC7Cb,EAAWpB,EAAMoB,SACjBe,EAAenC,EAAM4B,SACrBQ,EAAQC,YAAyBrC,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,OAAQ,WAAY,aAQxH,OAJKA,EAAMsC,WACTV,OAA4BW,IAAjBJ,EAA6BA,GAAgB,GAGnDV,IAAMe,cAAcC,IAAUC,YAAS,CAC5C/C,QAAQ,EACRuC,KAAMA,EACNN,SAAUA,EACVE,UAAWA,EACXV,SAAUA,EACVY,eAAgBA,EAChB/B,QAAS,CACP0C,MAAO1C,EAAQ0C,OAEjBhC,UAAWiC,YAAK3C,EAAQ4C,KAAMlC,EAAWS,GAAYnB,EAAQmB,UAAWY,GAAkB/B,EAAQ6C,SAClGnB,IAAKA,GACJS,OAuDUW,iBAlHK,SAAgBC,GAClC,MAAO,CAELH,KAAMH,YAAS,GAAIM,EAAMC,WAAWC,MAAOC,YAAgB,CACzDC,UAAW,GACXC,WAAY,EACZC,cAAe,EACfC,UAAW,aACXC,MAAO,OACPC,SAAU,SACVC,WAAY,UACXV,EAAMW,YAAYC,GAAG,MAAO,CAC7BR,UAAW,UAKbN,QAAS,GAGT1B,SAAU,GAGVuB,MAAOD,YAAS,GAAIM,EAAMC,WAAWY,MAAO,CAC1CT,UAAW,YA0FiB,CAChCU,KAAM,eADOf,CAEZvB","file":"static/js/152.73d39b3d.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles({\n        \n    button: {\n        maxWidth: 64,\n        minWidth: 64,\n    },\n    \n});\n\nconst units = [\n    'min',\n    'hours',\n    'days',\n];\n\nexport default function UnitButton(props) {\n\n    const classes = useStyles();\n    const [anchor, setAnchor] = useState(null)\n\n\n    function handleClick(event) {\n        setAnchor(event.currentTarget);\n    };\n    \n    function handleClose(event) {\n        setAnchor(null)\n    };\n    \n    function handleMenuSelect(event, item) {\n        setAnchor(null)\n        props.setUnit(units[item])\n    };\n\n    return (\n        <React.Fragment>\n            <Button id={\"op\"+props.index} onClick={handleClick} className={classes.button}>\n                {props.value ? props.value : \"min\"}\n            </Button>\n    \n            <Menu id=\"lock-menu\" anchorEl={anchor} open={Boolean(anchor)} onClose={handleClose}>\n                {units.map((option, index) => (\n                    <MenuItem\n                        key={option}\n                        selected={index === units.indexOf(props.value)}\n                        onClick={event => handleMenuSelect(event, index)}\n                    >\n                        {option}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </React.Fragment>\n    )\n}\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO To remove in v5?\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: {\n      dense: classes.dense\n    },\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);"],"sourceRoot":""}