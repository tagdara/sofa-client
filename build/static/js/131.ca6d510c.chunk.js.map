{"version":3,"sources":["player/CoverDimmer.js","player/OldPlayerArtOverlay.js","../node_modules/@material-ui/core/esm/Fade/Fade.js"],"names":["useStyles","makeStyles","theme","coverDimmer","position","top","left","right","bottom","backgroundColor","palette","background","default","opacity","borderRadius","CoverDimmer","props","classes","elevation","className","bigcover","width","maxHeight","padding","songTextBox","display","flexDirection","overflow","songTextHolder","margin","songTitle","fontSize","paddingBottom","flexBasis","flexGrow","songArtist","fontWeight","imgItem","PlayerArtOverlay","useState","showOverlay","setShowOverlay","imageLoaded","setImageLoaded","serverurl","window","location","hostname","toggleOverlay","onClick","in","src","art","Date","now","title","alt","onLoad","Fragment","variant","artist","children","styles","entering","entered","defaultTimeout","enter","duration","enteringScreen","exit","leavingScreen","Fade","React","forwardRef","ref","inProp","onEnter","onExit","style","_props$timeout","timeout","other","_objectWithoutProperties","useTheme","handleRef","useForkRef","createElement","Transition","_extends","appear","node","isAppearing","reflow","transitionProps","getTransitionProps","mode","webkitTransition","transitions","create","transition","state","childProps","cloneElement","visibility","undefined"],"mappings":"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","file":"static/js/131.ca6d510c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        coverDimmer: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: theme.palette.background.default,\n            opacity: \"0.8\",\n            borderRadius: \"4px 4px 0px 0px\",\n        },\n    }\n});\n\nexport default function CoverDimmer(props) {\n\n    const classes = useStyles();\n    return ( \n        <Paper elevation={0} className={classes.coverDimmer} {...props} />\n    );\n}\n\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport CoverDimmer from './CoverDimmer';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        bigcover: {\n            width: \"100%\",\n            maxHeight: 480,\n            position: \"relative\",\n            padding: 0,\n            borderRadius: \"4px 4px 0px 0px\",\n        },\n        songTextBox: {\n            position: \"absolute\",\n            padding: 16,\n            top:0,\n            bottom:64,\n            display: \"flex\",\n            flexDirection: \"column\",\n            overflow: \"hidden\",\n        },\n        songTextHolder: {\n            margin: \"0 auto\",\n        },\n        songTitle: {\n            fontSize:\"3rem\",\n            paddingBottom:16,\n            flexBasis: 0,\n            flexGrow:2,\n            display: \"flex\",\n            overflow: \"hidden\",\n        },\n        songArtist: {\n            fontSize:\"2.2rem\",\n            fontWeight:200,\n            flexBasis: 0,\n            flexGrow:1,\n            display: \"flex\",\n            overflow: \"hidden\",\n        },\n        imgItem: {\n            padding: 0,\n            width: \"100%\",\n        }\n    }\n});\n\nexport default function PlayerArtOverlay(props) {\n    \n    const classes = useStyles();\n    const [showOverlay, setShowOverlay] = useState(true);\n    const [imageLoaded, setImageLoaded] = useState(false)\n    const serverurl=\"https://\"+window.location.hostname;\n    \n    function toggleOverlay() {\n        setShowOverlay(!showOverlay)\n    }\n\n    return ( \n        <ListItem className={classes.imgItem} onClick={ () => toggleOverlay()} >\n            <Fade in={ imageLoaded } >\n            <img\n                className={classes.bigcover}\n                src={ serverurl+props.art+\"?time=\"+Date.now() }\n                title={ props.title }\n                alt={ props.title }\n                onClick={ () => toggleOverlay()}\n                onLoad={ () => setImageLoaded(true) }\n            />\n            </Fade>\n            { showOverlay &&\n                <React.Fragment>\n                    <CoverDimmer onClick={ () => toggleOverlay()} />\n                    <div className={classes.songTextBox}>\n                        <div className={classes.songTextHolder}>\n                            <Typography className={classes.songTitle} variant=\"h3\">{props.title}</Typography>\n                            <Typography className={classes.songArtist} variant=\"h4\">{props.artist}</Typography>\n                        </div>\n                    </div>\n                </React.Fragment>\n            }\n            {props.children}\n        </ListItem>\n    );\n}\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\nvar styles = {\n  entering: {\n    opacity: 1\n  },\n  entered: {\n    opacity: 1\n  }\n};\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Fade transition is used by the [Modal](/components/modal/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Fade = React.forwardRef(function Fade(props, ref) {\n  var children = props.children,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onExit = props.onExit,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,\n      other = _objectWithoutProperties(props, [\"children\", \"in\", \"onEnter\", \"onExit\", \"style\", \"timeout\"]);\n\n  var theme = useTheme();\n  var handleRef = useForkRef(children.ref, ref);\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    reflow(node); // So the animation always start from the start.\n\n    var transitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);\n    node.style.transition = theme.transitions.create('opacity', transitionProps);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  var handleExit = function handleExit(node) {\n    var transitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);\n    node.style.transition = theme.transitions.create('opacity', transitionProps);\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  return React.createElement(Transition, _extends({\n    appear: true,\n    in: inProp,\n    onEnter: handleEnter,\n    onExit: handleExit,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return React.cloneElement(children, _extends({\n      style: _extends({\n        opacity: 0,\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], {}, style, {}, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Fade.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Fade;"],"sourceRoot":""}