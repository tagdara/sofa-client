{"version":3,"sources":["LightbulbOutline.js","GridSection.js","SofaSlider.js","light/LightSliderBrightness.js","light/LightSliderTemperature.js","light/LightSliderColor.js","light/Light.js","Scene.js","SceneAdd.js","AreaLayout.js"],"names":["LightbulbOutlineIcon","props","d","muiName","useStyles","makeStyles","theme","base","margin","overflowX","alignContent","padding","borderRadius","gridColumn","overflowY","scrollColumn","height","nopad","background","backgroundColor","palette","page","GridSection","isMobile","useContext","LayoutContext","classes","useState","show","setShow","container","item","spacing","key","name","xs","className","classNames","scroll","primary","onClick","break","secondary","children","defaultProps","half","alignItems","display","flexGrow","flexBasis","boxSizing","stack","justifyContent","flexWrap","width","marginRight","paddingRight","padLeft","paddingLeft","slider","SofaSlider","value","setValue","useEffect","style","minWidth","variant","smallText","stackLabel","unit","Array","isArray","Math","floor","step","min","max","onChange","event","preChange","onChangeCommitted","change","disabled","default","tabs","indent","LightSliderBrightness","device","BrightnessController","brightness","directive","endpointId","PowerController","powerState","LightSliderTemperature","ColorTemperatureController","colorTemperatureInKelvin","wide","button","revealIcon","color","sl2sb","h","SL","s","l","SB","hue","saturation","t","sb2sl","LightSliderColor","reveal","setColor","ColorController","onChangeComplete","hsl","sendsb","size","hsb","iconSize","tile","sliderPaper","flexDirection","nostack","maxWidth","lightSwitch","marginLeft","lightbar","placeholder","listItem","maxHeight","Light","showAll","setShowAll","isReachable","hasOwnProperty","EndpointHealth","connectivity","console","log","e","nopaper","thinmargin","noback","avatarState","friendlyName","checked","target","brightControl","tempControl","colorControl","root","minHeight","working","Scene","setWorking","computedLevel","scene","SceneController","shortcut","remove","newName","setNewName","id","label","area","AreaController","setNewScene","dialogActions","paddingBottom","listDialogContent","buttonspacer","AreaLayout","deviceStateByEndpointId","DataContext","layout","edit","setEdit","filter","setFilter","setBrightControl","setTempControl","setColorControl","newScene","childrenByArea","ads","i","length","dev","displayCategories","includes","push","nameSort","a","b","isAShortcut","shortcuts","indexOf","Fragment","smallicon","lights","all","toUpperCase","sort","j","filterByType","map","fontSize","outscenes","allscenes","shortcutlist","reverse","sortByShortcuts"],"mappings":"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","file":"static/js/54.3ee0a440.chunk.js","sourcesContent":["/* eslint-disable max-len */\n\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nfunction LightbulbOutlineIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\" />\n    </SvgIcon>\n  );\n}\n\nLightbulbOutlineIcon.muiName = 'SvgIcon';\n\nexport default LightbulbOutlineIcon;\n","import React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport classNames from 'classnames';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        base: {\n            margin: 1,\n            overflowX: \"hidden\",\n            alignContent: \"start\",\n            padding: \"3px !important\",\n            borderRadius: \"4px 4px 4px 4px\",\n        },\n        gridColumn: {\n            overflowY: \"hidden\",\n        },\n        scrollColumn: {\n            overflowY: \"auto\",\n            height: \"100%\",\n        },\n        nopad: {\n            padding: 0,\n        },\n        background: {\n            backgroundColor: theme.palette.background.page,\n        }\n    }\n});\n\n\nexport default function GridSection(props) {\n    \n    const { isMobile } = useContext(LayoutContext);\n    const classes = useStyles();\n    const [show, setShow] = useState(props.show);\n\n    return (\n        <Grid container item spacing={1} key={props.name} xs={props.xs} \n            className={ classNames(classes.base, props.scroll ? classes.scrollColumn : classes.gridColumn, props.background ? classes.background : null)} \n        >\n\n            {props.name &&\n                <Grid item xs={12} className={classes.nopad}>\n                <List className={classes.nopad} >\n                    <ListItem>\n                        <ListItemText primary={props.name} onClick={ () => setShow(!show) } />\n                        { (!isMobile || !props.break) &&\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        }\n                    </ListItem>\n                    { (isMobile && props.break) &&\n                        <ListItem>\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    }\n                </List>\n                </Grid>\n            }\n            { show && props.children}\n        </Grid>\n    );\n}\n\nGridSection.defaultProps = {\n    break: false,\n    show: true,\n    scroll: false,\n    xs: 12,\n    background: true,\n}\n \n\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n         \n    half: {\n        alignItems: \"center\",\n        display: \"flex\",\n        height: 42,\n        flexGrow: 1,\n        flexBasis: 0,\n        boxSizing: \"border-box\",\n    },\n    stack: {\n        height: \"auto\",\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        marginRight: 8,\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n        alignItems: \"center\",\n        paddingRight: 8,\n    },\n    padLeft: {\n        paddingLeft: 16,\n    },\n    slider: {\n        margin: \"-18px\"\n    }\n\n});\n\nexport default function SofaSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0)\n    \n    useEffect(() => {\n        if (props.value) {\n            setValue(props.value)\n        }\n    }, [props.value]);\n\n    \n    function handlePreChange(event, value) {\n        setValue(value);\n        if (props.preChange) {\n            props.preChange(value);\n        }\n    }; \n\n    function handleChange(event,value) {\n        props.change(value);\n    }; \n   \n    function unitDisplay() {\n        if (Array.isArray(value)) {\n            return Math.floor(value[0])+' - '+ Math.floor(value[1])+props.unit\n        } else {\n            return Math.floor(value)+props.unit\n        }\n    }\n   \n    return (\n        <div style={{ \"minWidth\": props.minWidth }} className={ props.padLeft ? classes.stack+\" \"+classes.padLeft: ( props.half ? classes.half : classes.stack) } >\n        { props.name ?\n            <Typography variant={ props.smallText ? \"caption\" : \"subtitle1\" } className={classes.stackLabel} >{props.name}</Typography>\n        :   null }\n        { props.unit ?\n            <Typography variant=\"caption\" className={classes.stackLabel} >{unitDisplay()}</Typography>\n        : null }\n            <Slider\n                value={value} step={props.step} \n                min={props.min} max={props.max}\n                onChange={handlePreChange}\n                onChangeCommitted={handleChange}\n                disabled={props.disabled}\n            />\n        </div>\n    );\n}\n\nSofaSlider.defaultProps = {\n    name: '',\n    unit: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    default: 0,\n    value: 0,\n    tabs: '',\n    disabled: false,\n    padLeft: false,\n    half: false,\n    minWidth: 240,\n    smallText: false,\n}\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport SofaSlider from '../SofaSlider';\nimport BrightnessLowIcon from '@material-ui/icons/BrightnessLow';\n\nconst useStyles = makeStyles({\n        \n    indent: {\n        paddingLeft: 40,\n        paddingRight: 8,\n    }\n});\n\nexport default function LightSliderBrightness(props) {\n    \n    const classes = useStyles();\n\n    function handleBrightnessChange(event) {\n        props.directive(props.device.endpointId,'BrightnessController', 'SetBrightness', { \"brightness\" : event })\n    }; \n\n    return (\n            <ListItem>\n                <ListItemIcon className={classes.indent}><BrightnessLowIcon /></ListItemIcon>\n                <SofaSlider\n                    name=\"Brightness\" smallText={true} value={props.device.BrightnessController.brightness.value} unit=\"%\"\n                    min={0} max={100} step={10}\n                    change={handleBrightnessChange}\n                    disabled={!props.device.PowerController.powerState.value}\n                />\n            </ListItem>\n    );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport SofaSlider from '../SofaSlider';\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\n\nconst useStyles = makeStyles({\n        \n    indent: {\n        paddingLeft: 40,\n        paddingRight: 8,\n    }\n});\n\nexport default function LightSliderTemperature(props) {\n\n    const classes = useStyles();\n\n    function handleColorTemperatureChange(value) {\n        props.directive(props.device.endpointId, \"ColorTemperatureController\", \"SetColorTemperature\", { \"colorTemperatureInKelvin\": value} )\n    }; \n\n    return (\n        <ListItem>\n            <ListItemIcon className={classes.indent}><AcUnitIcon /></ListItemIcon>\n            <SofaSlider\n                name=\"Temperature\" smallText={true} unit={\"°\"}\n                value={props.device.ColorTemperatureController.colorTemperatureInKelvin.value}\n                min={2000} max={7000} step={100}\n                change={handleColorTemperatureChange}\n                disabled={!props.powerState}\n            />\n        </ListItem>\n    );\n\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Button from '@material-ui/core/Button';\n\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport LensIcon from '@material-ui/icons/Lens';\n\nimport { HuePicker } from 'react-color';\n\nconst useStyles = makeStyles({\n        \n    wide: {\n        width: \"100%\",\n    },\n    indent: {\n        paddingLeft: 40,\n        paddingRight: 8,\n    },\n    button: {\n        minWidth: 24\n    },\n    revealIcon: {\n        height: 24,\n        width: 24,\n        color: \"FFE4B5\",\n    }\n});\n\nexport const sl2sb = (color) => {\n    var SL = {h:color.h, s:color.s, l:color.l};\n    var SB = {hue:color.h, saturation:0, brightness:0};\n    var t = SL.s * (SL.l<0.5 ? SL.l : 1-SL.l);\n    SB.brightness = SL.l+t;\n    SB.saturation = SL.l>0 ? 2*t/SB.brightness : SB.saturation ;\n    return SB\n}    \n\nexport const sb2sl = (color) => {\n    var SB = {hue:color.hue, saturation:color.saturation, brightness:color.brightness};\n    var SL = {h:color.hue, s:0, l:0};\n    SL.l = (2 - SB.saturation) * SB.brightness / 2;\n    SL.s = SL.l&&SL.l<1 ? SB.saturation*SB.brightness/(SL.l<0.5 ? SL.l*2 : 2-SL.l*2) : SL.s;\n    return SL\n}\n\nexport default function LightSliderColor(props) {\n\n    const classes = useStyles();\n    const reveal = {hue: 43.5, saturation:0.27, brightness: 1}\n    const [color, setColor] = useState(reveal);\n    \n    useEffect(() => {\n        setColor(sb2sl(props.device.ColorController.color.value))\n    }, [props.device.ColorController.color.value]);\n\n\n    function handleColorSliderChange(color, event) {\n        setColor(color.hsl);\n        var sendsb=sl2sb(color.hsl)\n        sendsb.brightness=props.device.BrightnessController.brightness.value/100\n        props.directive(props.device.endpointId, \"ColorController\", \"SetColor\", { \"color\": sendsb })\n    }\n\n    function handleColorChange(hsb) {\n        setColor(sb2sl(hsb));\n        hsb.brightness=props.device.BrightnessController.brightness.value/100\n        props.directive(props.device.endpointId, \"ColorController\", \"SetColor\", { \"color\": hsb })\n    }\n\n    return (\n        <ListItem>\n            <ListItemIcon className={classes.indent}><ColorLensIcon /></ListItemIcon>\n            <HuePicker\n                className={classes.wide}\n                color={ color }\n                onChangeComplete={ handleColorSliderChange }\n            />\n            <Button size=\"small\" onClick={ () => handleColorChange(reveal)} color={ color===reveal ? \"primary\" : \"default\"} className={classes.button }>\n                <LensIcon className={classes.revealIcon} />\n            </Button>\n        </ListItem>\n    );\n\n}\n\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ToggleAvatar from '../ToggleAvatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Switch from '@material-ui/core/Switch';\nimport LightbulbOutlineIcon from '../LightbulbOutline';\nimport CloudOffIcon from '@material-ui/icons/CloudOff';\nimport LightSliderBrightness from \"./LightSliderBrightness\"\nimport LightSliderTemperature from \"./LightSliderTemperature\"\nimport LightSliderColor from \"./LightSliderColor\"\nimport GridItem from \"../GridItem\"\n\nconst useStyles = makeStyles({\n \n    iconSize: {\n        height: 24,\n        width: 24,\n    },\n    stack: {\n        height: 44,\n        display: \"flex\",\n        flexGrow: 1,\n        paddingLeft: 16,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n    },\n    tile: {\n        display: \"flex\",\n        flexGrow: 1,\n        height: 90,\n        paddingRight: 8,\n    },\n    sliderPaper: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        padding: \"16 8 16 16\",\n        alignItems: \"center\",\n    },\n    nostack: {\n        height: 44,\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        maxWidth: 480,\n        minWidth: 240,\n        boxSizing: \"border-box\",\n        marginRight: 8,\n    },\n    lightSwitch: {\n        marginLeft: 8,\n    },\n    lightbar: {\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n    },\n    placeholder: {\n        height: 57,\n        width: \"100%\",\n    },\n    listItem: {\n        maxHeight: 64,\n        width: \"100%\",\n    }\n});\n\nexport default function Light(props) {\n    \n    const classes = useStyles();\n    const [showAll, setShowAll] = useState(false)\n    \n    function handlePowerChange(event) {\n        props.directive(props.device.endpointId, 'PowerController', event.target.checked ? 'TurnOn' : 'TurnOff')\n    }; \n    \n    function isReachable() {\n        try {\n            if (props.device.hasOwnProperty('EndpointHealth')) {\n                if (props.device.EndpointHealth.connectivity.value.value==='OK') { return true }\n                return false\n            }\n            console.log('no endpoint health', props.device)\n            return true\n        } catch (e) {\n            console.log('Error getting reachable state', e)\n            return false\n        }\n    }\n    \n    return (\n        <GridItem nopaper={props.nopaper} xs={props.xs} thinmargin={props.thinmargin} >\n            <ListItem className={classes.listItem} >\n                { isReachable() ?\n                    <ToggleAvatar noback={true} avatarState={props.device.PowerController.powerState.value==='ON' ? \"on\" : \"off\" } >\n                        <LightbulbOutlineIcon className={classes.iconSize} />\n                    </ToggleAvatar>\n                :\n                    <ToggleAvatar avatarState={ \"off\" } >\n                        <CloudOffIcon className={classes.iconSize} />\n                    </ToggleAvatar>\n                }                \n                <ListItemText onClick={() => setShowAll(!showAll) } primary={props.device.friendlyName} secondary={ isReachable() ? '': 'Off at switch' } />\n                { isReachable() &&\n                    <Switch color=\"primary\" className={classes.lightSwitch} checked={props.device.PowerController.powerState.value==='ON'} onChange={handlePowerChange} />\n                }\n            </ListItem>\n            { !props.brightControl && !showAll ? null :\n                ( !props.device.hasOwnProperty('BrightnessController') ?\n                    <ListItem className={classes.placeholder} />\n                :\n                    <LightSliderBrightness device={props.device} directive={props.directive} />\n                )\n            }\n            { !props.tempControl && !showAll ? null :\n                ( !props.device.hasOwnProperty('ColorTemperatureController') ?\n                    <ListItem className={classes.placeholder} />\n                :\n                <LightSliderTemperature device={props.device} directive={props.directive}/>\n                )\n            }\n            { !props.colorControl && !showAll ? null :\n                ( !props.device.hasOwnProperty('ColorController') ?\n                    <ListItem className={classes.placeholder} />\n                :\n                    <LightSliderColor device={props.device} directive={props.directive}/>\n                )\n            }\n        </GridItem>\n    );\n}\n\nLight.defaultProps = {\n    nopaper: false,\n}\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListIcon from '@material-ui/icons/List';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ToggleAvatar from './ToggleAvatar';\nimport GridItem from \"./GridItem\"\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles({\n    \n    root: {\n        minHeight: 72,\n        display: \"flex\",\n        width: \"100%\",\n    },\n    listItem: {\n        padding: \"8 24px\",\n    },\n    working: {\n        margin: \"4px 20px 4px 4px\"\n    }\n});\n\n\nexport default function Scene(props) {\n    \n    const classes = useStyles();\n    const [working, setWorking] = useState(false)\n    \n    useEffect(() => {\n        setWorking(false)\n    }, [props.computedLevel]);\n    \n    function runScene() {\n        console.log('Activating', props.scene.friendlyName)\n        setWorking(true)\n        props.scene.SceneController.directive('Activate')\n    }\n    \n    function deleteScene(endpointId) {\n        props.scene.SceneController.directive(\"Delete\")\n    }\n    \n    return (\n        <GridItem >\n            <ListItem onClick={ () => runScene()}>\n                { working ?\n                    <CircularProgress size={32} className={classes.working} />\n                :\n                    <ToggleAvatar avatarState={props.scene.endpointId===props.computedLevel ? 'on' : 'off'}>\n                        {props.shortcut==='x' ? <ListIcon /> : props.shortcut }\n                    </ToggleAvatar>\n                }\n                <ListItemText>{props.scene.friendlyName}</ListItemText>\n                { props.remove &&\n                    <ListItemSecondaryAction className={classes.listItem}>\n                        <ListItemIcon onClick={() => deleteScene() }><CloseIcon /></ListItemIcon>   \n                    </ListItemSecondaryAction>\n                }\n            </ListItem>\n        </GridItem >\n    )\n};\n\n\n","import React, { useState } from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListIcon from '@material-ui/icons/List';\nimport ListItemIcon from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport TextField from '@material-ui/core/TextField';\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport ToggleAvatar from './ToggleAvatar';\nimport GridItem from \"./GridItem\"\n\nexport default function Scene(props) {\n    \n    const [newName, setNewName] = useState('')\n\n    function snapScene(sceneName) {\n        props.area.AreaController.directive(\"Snapshot\", newName)\n        props.setNewScene(false)\n    }\n    \n    const handleChange = name => event => {\n        setNewName(event.target.value)\n    }\n    \n    return (\n        <GridItem >\n            <ListItem>\n                <ToggleAvatar avatarState={'on'} >\n                    <ListIcon />\n                </ToggleAvatar>\n                <TextField id=\"newscene\" label=\"Name\" value={newName} onChange={handleChange('name')} margin=\"normal\"/>\n                <ListItemSecondaryAction>\n                    <ListItemIcon  onClick={() => snapScene(newName) }>\n                        <CheckIcon />\n                    </ListItemIcon>\n                    <ListItemIcon  onClick={() => props.setNewScene(false) }>\n                        <CloseIcon />\n                    </ListItemIcon>\n                </ListItemSecondaryAction>\n            </ListItem>\n        </GridItem >\n    )\n};","import React, {useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport { DataContext } from './DataContext/DataProvider';\n\nimport Button from '@material-ui/core/Button';\nimport Light from './light/Light';\nimport GridSection from './GridSection';\n\nimport Scene from './Scene'\nimport SceneAdd from './SceneAdd'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\nimport BrightnessLowIcon from '@material-ui/icons/BrightnessLow';\nimport CameraIcon from '@material-ui/icons/Camera';\n\n\nconst useStyles = makeStyles({\n    \n    dialogActions: {\n        paddingBottom: \"env(safe-area-inset-bottom)\",\n    },\n    listDialogContent: {\n        padding: 0,\n    },\n    button: {\n        minWidth: 36\n    },\n    buttonspacer: {\n        minWidth: 36,\n        marginRight: 18\n    },\n\n});\n\nexport default function AreaLayout(props) {\n\n    const classes = useStyles();\n    const { deviceStateByEndpointId } = useContext(DataContext);\n    const { layout } = useContext(LayoutContext);\n    \n    const [edit, setEdit] = useState(false)\n    const [filter, setFilter] = useState('ALL');\n    const [brightControl, setBrightControl] = useState(false)\n    const [tempControl, setTempControl] = useState(false)\n    const [colorControl, setColorControl] = useState(false)\n    const [newScene, setNewScene] = useState(false);\n    const area = deviceStateByEndpointId('logic:area:'+layout.props.name)\n\n    function childrenByArea(filter) {\n\n        var ads=[]\n        try {\n            var children=area.AreaController.children.value\n            for (var i = 0; i < children.length; i++) {\n                var dev=deviceStateByEndpointId(children[i])\n                if (!filter || filter==='ALL' || (dev && dev.displayCategories.includes(filter))) {\n                    ads.push(dev)\n                }\n            }\n            return ads    \n        } catch (e) {\n            console.log('Error getting children by area', e)\n        } finally {\n            return ads\n        }\n}\n\n    function nameSort(a,b) {\n      if (a.friendlyName < b.friendlyName)\n        return -1;\n      if (a.friendlyName > b.friendlyName)\n        return 1;\n      return 0;\n    }\n\n    function filterByType(filter) {\n        var lights=[]\n        var all=childrenByArea('LIGHT')\n        if (filter.toUpperCase()===\"ALL\") { \n            return all.sort(nameSort) \n        }\n        for (var j = 0; j < all.length; j++) {\n            if (all[j].PowerController.powerState.value===filter.toUpperCase()) {\n                lights.push(all[j])\n            }\n        }\n        return lights.sort(nameSort)\n    }\n\n    function isAShortcut(scene) {\n        if (area.AreaController.shortcuts.value.indexOf(scene) >= 0) {\n            return area.AreaController.shortcuts.value.indexOf(scene)\n        } else {\n            return 'x'\n        }\n    }\n\n    function sortByShortcuts() {\n\n        var outscenes=[]\n        try {\n            var allscenes=childrenByArea('SCENE_TRIGGER')\n            var shortcutlist=[...area.AreaController.shortcuts.value].reverse()\n            for (var j = 0; j < shortcutlist.length; j++) {\n                outscenes.push(deviceStateByEndpointId(shortcutlist[j]))\n            }\n    \n            for (j = 0; j < allscenes.length; j++) {\n                if (!shortcutlist.includes(allscenes[j].endpointId)) {\n                    outscenes.push(allscenes[j])\n                }\n            }\n        } catch (e) {\n            console.log('Error getting children by area', e)\n        } finally {\n            return outscenes\n        }\n    }\n    \n    return (    \n        <React.Fragment>\n            <GridSection name={layout.props.name+\" Lights\"} break={true}\n                    secondary={\n                        <>\n                            <Button onClick={ () => setBrightControl(!brightControl) } color={ brightControl ? \"primary\" : \"default\"} className={classes.button }>\n                                <BrightnessLowIcon className={classes.smallicon } />\n                            </Button>\n                            <Button onClick={ () => setTempControl(!tempControl) } color={ tempControl ? \"primary\" : \"default\"} className={classes.button }>\n                                <AcUnitIcon className={classes.smallicon } />\n                            </Button>\n                            <Button onClick={ () => setColorControl(!colorControl) } color={ colorControl ? \"primary\" : \"default\"} className={classes.buttonspacer }>\n                                <ColorLensIcon className={classes.smallicon } />\n                            </Button>\n            \n                            <Button onClick={ () => setFilter('ALL')} color={ filter==='ALL' ? \"primary\" : \"default\"} className={classes.button }>\n                                All\n                            </Button>\n                            <Button onClick={ () => setFilter('ON')} color={ filter==='ON' ? \"primary\" : \"default\"} className={classes.button }>\n                                On\n                            </Button>\n                        </>\n                    } \n            >\n                { filterByType(filter).map(device =>\n                    <Light key={ device.endpointId } device={ device }\n                        brightControl={brightControl} tempControl={tempControl} colorControl={colorControl}\n                    />\n                )}\n            </GridSection>\n            <GridSection name={\"Scenes\"} secondary={\n                <>\n                    <IconButton onClick={ () => setEdit(!edit) } className={classes.button }><RemoveIcon fontSize=\"small\" /></IconButton> \n                    <IconButton onClick={ () => setNewScene(true) } className={classes.button }><CameraIcon fontSize=\"small\" /></IconButton> \n                </>\n            }>\n                { newScene && <SceneAdd area={area} setNewScene={setNewScene} /> }\n                { sortByShortcuts().map(scene => \n                    <Scene remove={edit} scene={scene} key={scene.endpointId} shortcut={isAShortcut(scene.endpointId)} computedLevel={area.scene} />\n                )}\n            </GridSection>\n\n        </React.Fragment>\n    )\n};"],"sourceRoot":""}