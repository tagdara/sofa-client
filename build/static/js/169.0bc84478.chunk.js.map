{"version":3,"sources":["player/PlayerCover.js"],"names":["useStyles","makeStyles","bigDialog","backgroundColor","paddingTop","paddingBottom","minWidth","boxSizing","root","paper","boxShadow","overflow","coverArt","width","maxWidth","background","opacity","margin","borderRadius","titleText","padding","color","artistText","maingrid","height","display","alignItems","nopad","flexWrap","flexGrow","flexBasis","position","textbox","justifyContent","flexDirection","closebutton","top","right","pausebutton","bottom","skipbutton","PlayerCover","props","serverurl","window","location","hostname","classes","isMobile","innerWidth","console","log","src","fullScreen","open","onClose","close","className","PaperProps","container","spacing","item","xs","direction","in","mountOnEnter","unmountOnExit","elevation","onError","ev","target","player","endpointId","split","alt","title","variant","artist","onClick","e","handlePlayPause","playbackState","handleSkip","aria-label","autoFocus"],"mappings":"oHAAA,uMAgBMA,EAAYC,YAAW,CAEzBC,UAAW,CACPC,gBAAiB,OACjBC,WAAY,2BACZC,cAAe,8BACfC,SAAU,QACVC,UAAW,cAEfC,KAAM,CACFL,gBAAiB,QAErBM,MAAO,CACHN,gBAAiB,OACjBO,UAAW,OACXC,SAAU,UAEdC,SAAU,CACNC,MAAO,OACPC,SAAU,OACVC,WAAY,OACZC,QAAS,MACTC,OAAQ,YACRC,aAAc,GAElBC,UAAW,CACPC,QAAS,YACTC,MAAO,QAEXC,WAAY,CACRF,QAAS,YACTC,MAAO,QAEXE,SAAU,CACNH,QAAS,GACTI,OAAQ,OACRC,QAAS,OACTC,WAAY,UAEhBC,MAAO,CACHF,QAAS,OACTR,OAAQ,EACRV,UAAW,aACXa,QAAS,EACTQ,SAAU,OACVF,WAAY,SACZG,SAAU,EACVvB,SAAU,QACVwB,UAAW,EACXC,SAAU,YAEdC,QAAS,CACLC,eAAgB,SAChBR,QAAS,OACTS,cAAe,UAEnBC,YAAa,CACTJ,SAAU,QACVK,IAAK,EACLC,MAAO,GAEXC,YAAa,CACTP,SAAU,QACVQ,OAAQ,EACRF,MAAO,GAEXG,WAAY,CACRT,SAAU,QACVQ,OAAQ,EACRF,MAAO,MAIA,SAASI,EAAYC,GAEhC,IAAMC,EAAU,WAAWC,OAAOC,SAASC,SACrCC,EAAU/C,IAEVgD,EAAWJ,OAAOK,YADC,IAUzB,OAFAC,QAAQC,IAAI,MAAMT,EAAMU,KAGpB,kBAAC,IAAD,CAAQC,YAAU,EAACC,KAAMZ,EAAMY,KAAMC,QAAS,kBAAMb,EAAMc,SAASC,UAAWV,EAAQ7C,UAAWwD,WAAa,CAAEX,QAAS,CAAEvC,KAAMuC,EAAQtC,SACrI,kBAAC,IAAD,CAAMkD,WAAS,EAACC,QAAS,EAAGH,UAAWV,EAAQxB,UAC3C,kBAAC,IAAD,CAAMsC,MAAI,EAACC,GAAId,EAAW,GAAK,GAC/B,kBAAC,IAAD,CAAOe,UAAU,QAAQC,IAAI,EAAMC,cAAY,EAACC,eAAa,GACzD,kBAAC,IAAD,CAAOC,UAAW,EAAGV,UAAYV,EAAQpB,OACrC,yBAAKyC,QAbzB,SAAuBC,GAEnBA,EAAGC,OAAOlB,IAAM,UAAUV,EAAM6B,OAAOC,WAAWC,MAAM,KAAK,GAAG,aAWnBhB,UAAWV,EAAQnC,SAAUwC,IAAKT,EAAUD,EAAMU,IAAKsB,IAAKhC,EAAMiC,WAIvG,kBAAC,IAAD,CAAMd,MAAI,EAACC,GAAId,EAAW,GAAK,EAAGS,UAAWV,EAAQf,SACjD,kBAAC,IAAD,CAAYyB,UAAWV,EAAQ5B,UAAWyD,QAAQ,MAAOlC,EAAMiC,OAC/D,kBAAC,IAAD,CAAYlB,UAAWV,EAAQzB,WAAYsD,QAAQ,MAAOlC,EAAMmC,UAGxE,kBAAC,IAAD,CAAYpB,UAAWV,EAAQP,WAAYsC,QAAU,SAACC,GAAD,OAAOrC,EAAMsC,gBAAgBD,IAAK1D,MAAM,WACjE,YAAtBqB,EAAMuC,cAA4B,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OAExD,kBAAC,IAAD,CAAYxB,UAAWV,EAAQT,YAAawC,QAAU,SAACC,GAAD,OAAOrC,EAAMwC,WAAWH,IAAK1D,MAAM,WACrF,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CAAYoC,UAAWV,EAAQZ,YAAa2C,QAAS,kBAAMpC,EAAMc,SAAS2B,aAAW,QAAQ9D,MAAM,UAAU+D,WAAS,GAClH,kBAAC,IAAD","file":"static/js/169.0bc84478.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\n\nconst useStyles = makeStyles({\n\n    bigDialog: {\n        backgroundColor: \"#000\",\n        paddingTop: \"env(safe-area-inset-top)\",\n        paddingBottom: \"env(safe-area-inset-bottom)\",\n        minWidth: '320px',\n        boxSizing: \"border-box\",\n    },\n    root: {\n        backgroundColor: \"#000\"\n    },\n    paper: {\n        backgroundColor: \"#000\",\n        boxShadow: \"none\",\n        overflow: \"hidden\"\n    },\n    coverArt: {\n        width: \"100%\",\n        maxWidth: \"100%\",\n        background: \"#000\",\n        opacity: \"1.0\", \n        margin: \"auto auto\",\n        borderRadius: 4,\n    },\n    titleText: {\n        padding: \"0 24 0 24\",\n        color: \"#ccc\",\n    },\n    artistText: {\n        padding: \"0 24 0 24\",\n        color: \"#999\",\n    },\n    maingrid: {\n        padding: 24,\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    nopad: {\n        display: 'flex',\n        margin: 0,\n        boxSizing: \"border-box\",\n        padding: 0,\n        flexWrap: 'wrap',\n        alignItems: \"center\",\n        flexGrow: 1,\n        minWidth: \"320px\",\n        flexBasis: 0,\n        position: \"relative\",\n    },\n    textbox: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    closebutton: {\n        position: \"fixed\",\n        top: 8,\n        right: 8,\n    },\n    pausebutton: {\n        position: \"fixed\",\n        bottom: 8,\n        right: 8,\n    },\n    skipbutton: {\n        position: \"fixed\",\n        bottom: 8,\n        right: 72,\n    }\n});\n\nexport default function PlayerCover(props) {\n    \n    const serverurl=\"https://\"+window.location.hostname;\n    const classes = useStyles();\n    const mobileBreakpoint = 800\n    const isMobile = window.innerWidth <= mobileBreakpoint;\n\n    function addDefaultSrc(ev) {\n        // allow unique logos per adapter\n        ev.target.src = '/image/'+props.player.endpointId.split(':')[0]+'/darklogo'\n    }\n    \n    console.log('src',props.src)\n\n    return (\n        <Dialog fullScreen open={props.open} onClose={() => props.close()} className={classes.bigDialog} PaperProps ={{ classes: { root: classes.paper}}}>\n            <Grid container spacing={8} className={classes.maingrid}>\n                <Grid item xs={isMobile ? 12 : 6}>\n                <Slide direction=\"right\" in={true} mountOnEnter unmountOnExit>\n                    <Paper elevation={1} className={ classes.nopad} >\n                        <img onError={addDefaultSrc} className={classes.coverArt} src={serverurl+props.src} alt={props.title} />\n                    </Paper>\n                </Slide>\n                </Grid>\n                <Grid item xs={isMobile ? 12 : 6} className={classes.textbox} >\n                    <Typography className={classes.titleText} variant=\"h1\" >{props.title}</Typography>\n                    <Typography className={classes.artistText} variant=\"h2\" >{props.artist}</Typography>\n                </Grid>\n            </Grid>\n            <IconButton className={classes.skipbutton} onClick={ (e) => props.handlePlayPause(e) } color=\"primary\">\n                { props.playbackState==='PLAYING' ? <PauseIcon /> : <PlayArrowIcon /> }\n            </IconButton>\n            <IconButton className={classes.pausebutton} onClick={ (e) => props.handleSkip(e) } color=\"primary\">\n                <SkipNextIcon />\n            </IconButton>\n            <IconButton className={classes.closebutton} onClick={() => props.close()} aria-label=\"Close\" color=\"primary\" autoFocus>\n                <CloseIcon />\n            </IconButton>\n        </Dialog>\n    )\n    \n};\n\n"],"sourceRoot":""}