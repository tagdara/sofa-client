{"version":3,"sources":["other/Device.js","other/DeviceList.js","other/Shade.js","other/VirtualList.js","MoreDevicesHero.js"],"names":["useStyles","makeStyles","theme","item","minHeight","Device","props","classes","className","noback","avatarState","device","PowerController","powerState","value","icon","primary","friendlyName","secondary","hasOwnProperty","EnergySensor","power","color","checked","onChange","event","directive","endpointId","target","nested","DeviceList","Fragment","devices","map","key","button","backgroundColor","palette","background","borderColor","marginRight","padding","buttonRight","Shade","handlePress","commandName","command","commands","controller","name","buttonGroup","size","variant","onClick","VirtualList","useContext","DataContext","virtualDeviceStates","Object","keys","index","cardline","display","list","maxWidth","width","flexDirection","minLI","alignItems","MoreDevicesHero","applyLayoutCard","LayoutContext","deviceStatesByFriendlyName","switches","useState","showDetail","setShowDetail","onCount","ondevs","i","length","wide","nopad","normal","defaultProps"],"mappings":"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","file":"static/js/119.a4fd74ed.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ToggleAvatar from '../ToggleAvatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Switch from '@material-ui/core/Switch';\nimport TuneIcon from '@material-ui/icons/Tune';\n\nimport GridItem from '../GridItem';\n\nconst useStyles = makeStyles(theme => {\n    return {      \n\n        item: {\n            minHeight: 54,\n        }\n    }\n})\n\nexport default function Device(props) {\n    \n    const classes = useStyles();\n \n    function handlePowerChange(event) {\n        props.directive(props.device.endpointId, \"PowerController\", event.target.checked ? 'TurnOn' : 'TurnOff')\n    }; \n\n    function nestLine(item) {\n        if (props.nested) { return item }\n        return <GridItem>{item}</GridItem>\n    }\n    \n    function energy() {\n        if (props.device.hasOwnProperty('EnergySensor')) {\n            return props.device.EnergySensor.power.value+\"W\"\n        }\n        return null\n    }\n\n    return ( nestLine(\n            <ListItem className={classes.item} >\n                <ToggleAvatar noback={true} avatarState={ props.device.PowerController.powerState.value==='ON' ? 'on' : 'off'}>{ props.icon ? props.icon : <TuneIcon />}</ToggleAvatar>\n                <ListItemText primary={props.device.friendlyName} secondary={ energy()} />\n                <ListItemSecondaryAction>\n                    <Switch color=\"primary\" checked={props.device.PowerController.powerState.value==='ON'} onChange={handlePowerChange} />\n                </ListItemSecondaryAction>\n           </ListItem> )\n    );\n}\n\n\n","import React from 'react';\n\nimport Device from './Device';\n\nexport default function DeviceList(props) {\n\n    return (\n        <React.Fragment>\n            { props.devices.map(device =>\n                <Device nested={props.nested} icon={props.icon} key={ device.endpointId } device={ device } directive={props.directive} />\n            )}\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport TonalityIcon from '@material-ui/icons/Tonality';\nimport ToggleAvatar from '../ToggleAvatar'\nimport GridItem from '../GridItem';\n\nconst useStyles = makeStyles(theme => {\n    return {      \n        button: {\n            backgroundColor: theme.palette.background.button,\n            borderColor: \"rgba(255,255,255, 0) !important\",\n            marginRight: 1,\n            padding: \"3px 8px\"\n        },\n        buttonRight: {\n            padding: \"3px 8px\",\n            backgroundColor: theme.palette.background.button,\n        },\n        \n        item: {\n            minHeight: 54,\n        }\n    }\n})\n\nexport default function Shade(props) {\n\n    const classes = useStyles();\n\n    function handlePress(commandName) {\n        var command = props.commands[commandName]\n        props.directive(command.endpointId, command.controller, command.command, command.value)\n    }\n    \n    function nestLine(item) {\n        if (props.nested) { return item }\n        return <GridItem>{item}</GridItem>\n    }\n\n    return ( nestLine(\n        <ListItem className={classes.item} >\n            <ToggleAvatar noback={true} avatarState={ 'off' }>{ props.icon ? props.icon : <TonalityIcon />}</ToggleAvatar>\n            <ListItemText primary={props.name}/>\n            <ButtonGroup className={classes.buttonGroup} size=\"small\" variant=\"text\"  >\n                <Button className={classes.button} onClick={ () => handlePress('down') }><ExpandMoreIcon /></Button>\n                <Button className={classes.button} onClick={ () => handlePress('stop') }><RemoveIcon /></Button>\n                <Button className={classes.buttonRight} onClick={ () => handlePress('up') }><ExpandLessIcon /></Button>\n            </ButtonGroup>\n        </ListItem>\n        )\n    );\n}\n","import React, { useContext } from 'react';\nimport { DataContext } from '../DataContext/DataProvider';\n\nimport Shade from './Shade';\n\nexport default function VirtualList(props) {\n\n    const { virtualDeviceStates, directive } = useContext(DataContext);\n\n    return (\n        virtualDeviceStates ?\n            <React.Fragment>\n                { Object.keys(virtualDeviceStates).map((key, index) => (\n                    virtualDeviceStates[key]['type']==='shade' ?\n                        <Shade nested={props.nested} directive={directive} key={ index } name={ key } endpointId={ virtualDeviceStates[key].endpointId } commands={ virtualDeviceStates[key].commands } />\n                        :null\n                ))}\n            </React.Fragment>\n        : null \n    );\n}\n","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport { DataContext } from './DataContext/DataProvider';\n\nimport ToggleAvatar from './ToggleAvatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport DevicesOtherIcon from '@material-ui/icons/DevicesOther';\n\nimport GridItem from './GridItem';\nimport VirtualList from './other/VirtualList';\nimport DeviceList from './other/DeviceList';\nimport FanIcon from '@material-ui/icons/Toys';\n\nconst useStyles = makeStyles(theme => {\n    \n    return {    \n        cardline: {\n            padding: \"8px 16px 8px 16px\",\n            display: \"flex\",\n        },\n        list: {\n            maxWidth: \"100%\",\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n        },\n        minLI: {\n            minHeight: 48,\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"row\",\n        },\n    }\n\n});\n\nexport default function MoreDevicesHero(props) {\n    \n    const classes = useStyles();\n    const { applyLayoutCard } = useContext(LayoutContext);\n    const { deviceStatesByFriendlyName, directive } = useContext(DataContext);\n    const switches=deviceStatesByFriendlyName(['Bathroom Fan','Bathroom Heat Fan'], false, 'SWITCH')\n    const [ showDetail, setShowDetail] = useState(props.showDetail)\n    \n\n    function onCount() {\n        var ondevs=0\n        for (var i = 0; i < switches.length; i++) {\n            if (switches[i].PowerController.powerState.value==='ON') {\n                ondevs+=1\n            }\n        }\n        return ondevs\n    }\n\n    return (\n        <GridItem wide={props.wide} nopad={true} >\n            <List className={classes.list} >\n                { !showDetail ?\n                <ListItem className={ classes.cardline } onClick={ () => setShowDetail(!showDetail) } >\n                    <ToggleAvatar  onClick={ () => applyLayoutCard('MoreDevicesLayout') } noback={true} avatarState={ onCount() ? 'on' : 'off'}><DevicesOtherIcon /></ToggleAvatar>\n                    <ListItemText primary={\"More Devices\"} secondary={onCount() ? onCount()+\" devices on\" : null} className={onCount() ? classes.normal : classes.minLI} />\n                </ListItem>\n                :\n                    <>\n                        <VirtualList directive={directive} nested={true} />\n                        { switches &&\n                            <DeviceList nested={true} icon={<FanIcon />} devices={ switches } directive={directive} />\n                        }\n                    </>\n                }\n            </List>\n            \n        </GridItem>\n    );\n}\n\nMoreDevicesHero.defaultProps = {\n    showDetail: false,\n}\n"],"sourceRoot":""}