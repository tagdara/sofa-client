{"version":3,"sources":["ZoneHero.js","../node_modules/@material-ui/icons/PriorityHigh.js","../node_modules/@material-ui/icons/VerifiedUser.js"],"names":["ZoneHero","props","applyLayoutCard","useContext","LayoutContext","devices","deviceStatesByCategory","DataContext","zoneOpen","zoneCount","getSecurityZones","secZones","i","length","description","includes","push","condition","count","map","zone","controller","hasOwnProperty","ContactSensor","MotionSensor","detectionState","value","toUpperCase","wide","onClick","e","noback","avatarState","primary","secondary","openzones","friendlyName","listOfOpenZones","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","Fragment","cx","cy","r","d"],"mappings":"oHAAA,uJAae,SAASA,EAASC,GAAQ,IAE7BC,EAAoBC,qBAAWC,iBAA/BF,gBAEFG,GAAQC,EADqBH,qBAAWI,eAAtCD,wBAC6B,CAAC,iBAAiB,kBACjDE,EAAWC,EAAU,YAAY,EAEvC,SAASC,IAEL,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAC3BP,EAAQO,GAAGE,YAAYC,SAAS,iBACjCJ,EAASK,KAAKX,EAAQO,IAG9B,OAAOD,EAWX,SAASF,EAAUQ,GACf,IAAIC,EAAM,EAeV,OAdAR,IAAmBS,KAAI,SAAAC,GACnB,IAAIC,EAAW,KAWf,OAVID,EAAKE,eAAe,iBACpBD,EAAWD,EAAKG,cACTH,EAAKE,eAAe,kBAC3BD,EAAWD,EAAKI,eAIhBH,GAA2B,QAAZJ,GAAqBI,EAAWI,eAAeC,QAAQT,EAAUU,gBAChFT,GAAY,GAET,MAEJA,EAqBX,OACI,kBAAC,UAAD,CAAUU,KAAM3B,EAAM2B,MA5CjBlB,IA8CD,kBAAC,IAAD,CAAUmB,QAAU,SAACC,GAAD,OAAO5B,EAAgB,gBACvC,kBAAC,UAAD,CAAc6B,QAASvB,EAAUwB,YAAexB,EAAY,OAAS,UAC/DA,EAAW,kBAAC,IAAD,MAAsB,kBAAC,IAAD,OAEvC,kBAAC,IAAD,CAAcyB,QAASzB,EAAWC,EAAU,YAAY,wBAA0B,mBAAqByB,UAxBnH,WACI,IAAIC,EAAU,GAad,OAZAzB,IAAmBS,KAAI,SAAAC,GACnB,IAAIC,EAAW,KASf,OARID,EAAKE,eAAe,iBACpBD,EAAWD,EAAKG,cACTH,EAAKE,eAAe,kBAC3BD,EAAWD,EAAKI,cAEhBH,GAAiD,aAAlCA,EAAWI,eAAeC,QACzCS,EAAUA,EAAUf,EAAKgB,aAAa,KAEnC,MAEJD,EAUmHE,MAGtH,kBAAC,IAAD,KACI,kBAAC,UAAD,CAAcL,YAAa,YAAa,kBAAC,IAAD,OACxC,kBAAC,IAAD,CAAcC,QAAS,8B,iCCrFvC,IAAIK,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3ChB,OAAO,IAETgB,EAAQC,aAAU,EAElB,IAAIC,EAASN,EAAuBC,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,KAElBI,SAASC,EAAOD,QAAQG,cAAcF,EAAOD,QAAQI,SAAU,KAAMH,EAAOD,QAAQG,cAAc,SAAU,CAC5IE,GAAI,KACJC,GAAI,KACJC,EAAG,MACDN,EAAOD,QAAQG,cAAc,OAAQ,CACvCK,EAAG,oBACA,gBAELT,EAAQC,QAAUE,G,iCCnBlB,IAAIP,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3ChB,OAAO,IAETgB,EAAQC,aAAU,EAElB,IAAIC,EAASN,EAAuBC,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,KAElBI,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EK,EAAG,wHACD,gBAEJT,EAAQC,QAAUE","file":"static/js/120.0dc81aa6.chunk.js","sourcesContent":["import React from 'react';\nimport { useContext } from 'react';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport { DataContext } from './DataContext/DataProvider';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\n\nimport GridItem from './GridItem';\nimport ToggleAvatar from './ToggleAvatar';\n\nexport default function ZoneHero(props) {\n\n    const { applyLayoutCard } = useContext(LayoutContext);\n    const { deviceStatesByCategory } = useContext(DataContext);\n    const devices=deviceStatesByCategory(['CONTACT_SENSOR','MOTION_SENSOR'])\n    const zoneOpen = zoneCount('DETECTED')>0;\n    \n    function getSecurityZones() {\n        var secZones=[]\n        for (var i = 0; i < devices.length; i++) { \n            if (!devices[i].description.includes('(Automation)')) {\n                secZones.push(devices[i])\n            } \n        }\n        return secZones\n    }\n\n    function zoneReady() {\n        \n        if (!getSecurityZones()) {\n            return false\n        } \n        return true\n    }\n    \n    function zoneCount(condition) {\n        var count=0;\n        getSecurityZones().map(zone => {\n            var controller=null\n            if (zone.hasOwnProperty('ContactSensor')) {\n                controller=zone.ContactSensor\n            } else if (zone.hasOwnProperty('MotionSensor')) {\n                controller=zone.MotionSensor\n            } \n            \n            //console.log('cont',controller.detectionState.value)\n            if (controller && (condition==='all' || controller.detectionState.value===condition.toUpperCase())) {\n                count=count+1\n            }\n            return ''\n        })\n        return count\n    }\n\n\n    function listOfOpenZones() {\n        var openzones=''\n        getSecurityZones().map(zone => {\n            var controller=null\n            if (zone.hasOwnProperty('ContactSensor')) {\n                controller=zone.ContactSensor\n            } else if (zone.hasOwnProperty('MotionSensor')) {\n                controller=zone.MotionSensor\n            }\n            if (controller &&  controller.detectionState.value==='DETECTED') {\n                openzones=openzones+zone.friendlyName+\" \"\n            }\n            return ''\n        })\n        return openzones\n    }\n\n    return (\n        <GridItem wide={props.wide}>\n            { zoneReady() ?\n            <ListItem onClick={ (e) => applyLayoutCard('ZoneLayout')}>\n                <ToggleAvatar noback={!zoneOpen} avatarState={ (zoneOpen) ? \"open\" : \"closed\" } >\n                    { zoneOpen ? <PriorityHighIcon/> : <VerifiedUserIcon/> }\n                </ToggleAvatar>\n                <ListItemText primary={zoneOpen ? zoneCount('DETECTED')+' zones are not secure' : 'All zones secure' } secondary={listOfOpenZones()}/>\n            </ListItem>\n            :\n            <ListItem>\n                <ToggleAvatar avatarState={\"notready\"} ><PriorityHighIcon/></ToggleAvatar>\n                <ListItemText primary={'Waiting for zone data'}/>\n            </ListItem>\n            }\n        </GridItem>\n    );\n}\n\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"19\",\n  r: \"2\"\n}), _react.default.createElement(\"path\", {\n  d: \"M10 3h4v12h-4z\"\n})), 'PriorityHigh');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\"\n}), 'VerifiedUser');\n\nexports.default = _default;"],"sourceRoot":""}