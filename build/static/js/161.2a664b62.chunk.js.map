{"version":3,"sources":["GridSection.js","ThermostatHistory.js"],"names":["useStyles","makeStyles","theme","base","margin","overflowX","alignContent","padding","borderRadius","gridColumn","overflowY","scrollColumn","maxHeight","mobile","height","desktop","background","backgroundColor","palette","layer","section","center","justifyContent","GridSection","props","isMobile","useContext","LayoutContext","classes","useState","show","setShow","container","item","spacing","key","name","xs","className","classNames","scroll","nopad","primary","onClick","break","secondary","children","defaultProps","dateEntry","paddingRight","width","timeEntry","BootstrapInput","withStyles","input","minWidth","position","paper","border","fontSize","transition","transitions","create","borderColor","boxShadow","InputBase","ThermostatHistory","device","setDevice","groupBy","setGroupBy","moment","subtract","start","setStart","format","startDateEntry","setStartDateEntry","startTimeEntry","setStartTimeEntry","end","setEnd","endDateEntry","setEndDateEntry","endTimeEntry","setEndTimeEntry","history","setHistory","DeviceContext","deviceByEndpointId","devicesByController","historyQuery","thermostats","tz","guess","chartwidth","window","innerWidth","chartheight","manualSearch","qry","endpointId","then","result","JSON","parse","chooseRange","range","unit","searchstart","searchend","console","log","useEffect","x","friendlyName","nopaper","value","onChange","e","target","id","map","tstat","variant","label","type","InputLabelProps","shrink","inputProps","step","style","length","data","top","right","left","bottom","vertical","dataKey","tickCount","scale","domain","tick","y","payload","fill","textAnchor","unix","connectNulls","stroke","dot","strokeWidth"],"mappings":"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","file":"static/js/161.2a664b62.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport classNames from 'classnames';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        base: {\n            margin: 1,\n            overflowX: \"hidden\",\n            alignContent: \"start\",\n            padding: \"3px !important\",\n            borderRadius: \"4px 4px 4px 4px\",\n        },\n        gridColumn: {\n            overflowY: \"hidden\",\n        },\n        scrollColumn: {\n            overflowY: \"auto\",\n            maxHeight: \"100%\",\n        },\n        mobile: {\n            height: 16,\n        },\n        desktop: {\n        },\n        background: {\n            backgroundColor: theme.palette.layer.section,\n        },\n        center: {\n            justifyContent: \"center\",\n        }\n    }\n});\n\n\nexport default function GridSection(props) {\n    \n    const { isMobile } = useContext(LayoutContext);\n    const classes = useStyles();\n    const [show, setShow] = useState(props.show);\n\n    return (\n        <Grid container item spacing={1} key={props.name} xs={props.xs} \n            className={ classNames(classes.base, props.scroll ? classes.scrollColumn : classes.gridColumn, props.background ? classes.background : null)} \n        >\n\n            {props.name &&\n                <Grid item xs={12} className={classes.nopad}>\n                <List className={classes.nopad} >\n                    <ListItem className={ isMobile ? classes.mobile : classes.desktop} >\n                        <ListItemText primary={props.name} onClick={ () => setShow(!show) } />\n                        { (!isMobile || !props.break) &&\n                            <>\n                                {props.secondary}\n                            </>\n                        }\n                    </ListItem >\n                    { (isMobile && props.break) &&\n                        <ListItem className={classes.center}>\n                                {props.secondary}\n                        </ListItem>\n                    }\n                </List>\n                </Grid>\n            }\n            { show && props.children}\n        </Grid>\n    );\n}\n\nGridSection.defaultProps = {\n    break: false,\n    show: true,\n    scroll: false,\n    xs: 12,\n    background: true,\n}\n \n\n","import React, { useContext } from 'react';\nimport { useState, useEffect } from 'react';\nimport { DeviceContext } from './DataContext/DeviceProvider';\nimport {makeStyles, withStyles } from '@material-ui/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport ListItem from '@material-ui/core/ListItem';\nimport GridItem from \"./GridItem\"\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport Button from '@material-ui/core/Button';\n\nimport moment from 'moment';\nimport 'moment-timezone';\nimport GridSection from './GridSection';\n\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Text } from 'recharts';\n\nconst useStyles = makeStyles({\n    \n    dateEntry: {\n        paddingRight: 8,\n        width: \"20%\",\n    },\n    timeEntry: {\n        paddingRight: 24,\n        width: \"20%\",\n    },\n});\n  \nconst BootstrapInput = withStyles(theme => ({\n    input: {\n        minWidth: '100px',\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        padding: '10px 26px 10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderRadius: 4,\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n}))(InputBase);  \n\nexport default function ThermostatHistory(props) {\n    \n    const classes = useStyles();\n    const [ device, setDevice] = useState(props.device)\n    const [ groupBy, setGroupBy] = useState('4h')\n    const [ start, setStart] = useState(moment().subtract(4,'day'));\n    const [ startDateEntry, setStartDateEntry] = useState(start.format('YYYY-MM-DD'))\n    const [ startTimeEntry, setStartTimeEntry] = useState(start.format('HH:mm:ss'))\n    const [ end, setEnd] = useState(moment())\n    const [ endDateEntry, setEndDateEntry] = useState(end.format('YYYY-MM-DD'))\n    const [ endTimeEntry, setEndTimeEntry] = useState(end.format('HH:mm:ss'))\n\n    const [history, setHistory] = useState([])\n    const { deviceByEndpointId, devicesByController, historyQuery } = useContext(DeviceContext);\n    const thermostats=devicesByController('TemperatureSensor')\n    const tz = moment.tz.guess();\n    const chartwidth=window.innerWidth > 1400 ? 1400 : window.innerWidth\n    const chartheight=chartwidth /2 > 500 ? 500 : chartwidth / 2\n    \n    console.log(start,end)\n    \n    useEffect(() => { \n        console.log(history)\n    }, [history] )\n\n    useEffect(() => { \n        var x=moment(startDateEntry+\" \"+startTimeEntry)\n        setStart(x)\n    }, [startTimeEntry, startDateEntry] )\n\n    useEffect(() => { \n        var x=moment(endDateEntry+\" \"+endTimeEntry)\n        setEnd(x)\n    }, [endTimeEntry, endDateEntry] )\n\n    \n    function manualSearch(start, end) {\n        var qry=\"SELECT ROUND(MEAN(temperature)) FROM controller_property WHERE time > '\"+start.format()+\"' AND temperature > -30 AND time < '\"+end.format()+\"' AND endpoint='\"+device.endpointId+\"' GROUP BY time(\"+groupBy+\") ORDER BY time ASC\"\n        historyQuery(qry).then(result=> setHistory(JSON.parse(result)))\n    }\n    \n    function chooseRange(range, unit) {\n        var searchstart=moment().subtract(range,unit).format()\n        var searchend=moment().format()\n        setStart(searchstart)\n        setEnd(searchend)\n        manualSearch(searchstart, searchend)\n    }\n    \n    const CustomizedAxisTick = props => {\n        // eslint-disable-next-line react/prop-types\n        const { x, y, payload } = props;\n        \n        return (<>\n            <Text x={x} y={y + 8} fill=\"#777\" fontSize={10} textAnchor=\"middle\">{moment.unix(payload.value).tz(tz).format('MMM D')}</Text>\n            <Text x={x} y={y + 20} fill=\"#777\" fontSize={10} textAnchor=\"middle\">{moment.unix(payload.value).tz(tz).format('ha')}</Text>\n            </>\n        )\n    };  \n    \n    function handleDeviceChange(e) {\n        console.log('selected', e.target.value)\n        setDevice(deviceByEndpointId(e.target.value))\n    }\n    \n    return (    \n        <GridSection name={props.device.friendlyName+\" every \"+groupBy} >\n            <GridItem nopaper={true} xs={12}>\n                <ListItem >\n                    <Select value={device.endpointId ? device.endpointId : \"\"} onChange={handleDeviceChange} input={<BootstrapInput name=\"input\" id=\"input\" />} >\n                    { thermostats.map( tstat => \n                        <MenuItem key={ tstat.endpointId } value={tstat.endpointId}>{tstat.friendlyName}</MenuItem>\n                    )}\n                    </Select>\n                </ListItem>\n                <ListItem>\n                    <TextField className={classes.dateEntry} variant=\"outlined\" onChange={(e) => setStartDateEntry(e.target.value) }\n                        id=\"start\" label=\"Start\" type=\"date\"\n                        value={startDateEntry}\n                        InputLabelProps={{ shrink: true, }} inputProps={{ step: 300, style: {padding: 10 } }}  />\n                    <TextField className={classes.timeEntry} variant=\"outlined\" onChange={(e) => setStartTimeEntry(e.target.value) }\n                        id=\"time\" label=\"Time\" type=\"time\"\n                        value={startTimeEntry}\n                        InputLabelProps={{ shrink: true, }} inputProps={{ step: 300, style: {padding: 10 } }}  />\n\n                    <TextField className={classes.dateEntry} variant=\"outlined\" onChange={(e) => setEndDateEntry(e.target.value) } \n                        id=\"end\" label=\"End\" type=\"date\" \n                        value={endDateEntry}\n                        InputLabelProps={{ shrink: true, }} inputProps={{ step: 300, style: {padding: 10 } }}  />\n                    <TextField className={classes.timeEntry} variant=\"outlined\" onChange={(e) => setEndTimeEntry(e.target.value)  }\n                        id=\"endtime\" label=\"Time\" type=\"time\"\n                        value={endTimeEntry}\n                        InputLabelProps={{ shrink: true, }} inputProps={{ step: 300, style: {padding: 10 } }}  />\n\n\n                <Button onClick={()=>manualSearch(start, end)}>Go</Button>\n                </ListItem>\n                <ListItem >\n                    <Button onClick={()=> chooseRange(24,'hour') }>24h</Button>\n                    <Button onClick={()=> chooseRange(7,'day') }>7d</Button>    \n                    <Button onClick={()=> chooseRange(14,'day') }>14d</Button>  \n                    <Button onClick={()=> chooseRange(30,'day') }>30d</Button>\n                    <Button onClick={()=> chooseRange(90,'day') }>90d</Button>\n                </ListItem>\n                <ListItem >\n                    <Button onClick={()=> setGroupBy('5s')}>10m</Button>\n                    <Button onClick={()=> setGroupBy('1m')}>10m</Button>\n                    <Button onClick={()=> setGroupBy('10m')}>10m</Button>\n                    <Button onClick={()=> setGroupBy('30m')}>30m</Button>\n                    <Button onClick={()=> setGroupBy('1h')}>1h</Button>    \n                    <Button onClick={()=> setGroupBy('4h')}>4h</Button>  \n                    <Button onClick={()=> setGroupBy('6h')}>6h</Button>\n                </ListItem>\n            </GridItem>\n\n\n                { history.length>0 &&\n                    <LineChart\n                        width={chartwidth} height={chartheight} data={history} \n                        margin={{ top: 16, right: 16, left: 8, bottom: 16, }} >\n                        <CartesianGrid vertical={false} />\n                        <XAxis dataKey=\"time\" tickCount={10} scale={'time'} type=\"number\" domain={['dataMin', 'dataMax']} \n                                tick={<CustomizedAxisTick />} />\n                        <YAxis type=\"number\" domain={[65,80]} width={32}/>\n                        <Line connectNulls type=\"monotone\" dataKey=\"round\" stroke=\"#ff7300\" dot={true} strokeWidth={2} />\n                    </LineChart>\n                }\n        </GridSection>\n    )\n\n};\n"],"sourceRoot":""}