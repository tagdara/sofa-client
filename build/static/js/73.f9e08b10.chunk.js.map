{"version":3,"sources":["GridSection.js","devices/Zone.js","ZoneLayout.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/icons/Clear.js","../node_modules/@material-ui/icons/Done.js"],"names":["useStyles","makeStyles","theme","gridColumn","margin","overflowX","overflowY","alignContent","padding","backgroundColor","palette","background","page","borderRadius","nopad","GridSection","props","isMobile","useContext","LayoutContext","classes","container","item","spacing","key","name","xs","className","primary","break","secondary","children","defaultProps","Zone","getSensorController","device","hasOwnProperty","ContactSensor","MotionSensor","onClick","history","endpointId","avatarState","detectionState","value","changeTime","format","ZoneLayout","applyLayoutCard","applyBackPage","useRef","DataContext","current","devicesByCategory","getChangeTimesForDevices","allzones","useState","changeTimes","setChangeTimes","historyZone","useEffect","zones","then","result","Fragment","secZones","i","length","description","includes","push","getSecurityZones","map","friendlyName","time","autoZones","getAutomationZones","ListItemSecondaryAction","React","forwardRef","ref","other","_objectWithoutProperties","createElement","_extends","clsx","root","muiName","withStyles","position","right","top","transform","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","d"],"mappings":"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","file":"static/js/73.f9e08b10.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        gridColumn: {\n            margin: 1,\n            overflowX: \"hidden\",\n            overflowY: \"hidden\",\n            alignContent: \"start\",\n            padding: \"3px !important\",\n            backgroundColor: theme.palette.background.page,\n            borderRadius: \"4px 4px 4px 4px\",\n        },\n        nopad: {\n            padding: 0,\n        }\n    }\n});\n\n\nexport default function GridSection(props) {\n    \n    const { isMobile } = useContext(LayoutContext);\n    const classes = useStyles();\n\n    return (\n        <Grid container item spacing={1} key={props.name} xs={12} className={ classes.gridColumn}>\n            {props.name &&\n                <Grid item xs={12} className={classes.nopad}>\n                <List className={classes.nopad}>\n                    <ListItem>\n                        <ListItemText primary={props.name} />\n                        { (!isMobile || !props.break) &&\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        }\n                    </ListItem>\n                    { (isMobile && props.break) &&\n                        <ListItem>\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    }\n                </List>\n                </Grid>\n            }\n            {props.children}\n        </Grid>\n    );\n}\n\nGridSection.defaultProps = {\n    break: false\n}\n \n\n","import React from 'react';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ToggleAvatar from '../ToggleAvatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridItem from '../GridItem';\n\nexport default function Zone(props) {    \n\n    function getSensorController() {\n        if (props.device.hasOwnProperty('ContactSensor')) {\n            return props.device.ContactSensor\n        } else if (props.device.hasOwnProperty('MotionSensor')) {\n            return props.device.MotionSensor\n        }\n        return null\n    }\n\n    return (\n        <GridItem >\n            <ListItem onClick={() => props.history(props.name, props.endpointId)}>\n                <ToggleAvatar avatarState={ getSensorController().detectionState.value==='NOT_DETECTED' ? 'closed' : 'open' } > \n                    { getSensorController().detectionState.value==='NOT_DETECTED' ? <DoneIcon /> : <ClearIcon /> }\n                </ToggleAvatar>\n                <ListItemText primary={props.name} secondary={props.changeTime==='Unknown' ? 'Unknown':<Moment format=\"ddd MMM D h:mm:sa\">{props.changeTime}</Moment>} />\n            </ListItem>\n        </GridItem>\n    );\n}\n","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport { DataContext } from './DataContext/DataProvider';\n\nimport Zone from './devices/Zone';\nimport GridSection from './GridSection';\n\nexport default function ZoneLayout(props) {\n\n    const { applyLayoutCard, applyBackPage } = useContext(LayoutContext);\n    const { devicesByCategory, getChangeTimesForDevices } = useRef(useContext(DataContext)).current;\n    const allzones=devicesByCategory(['CONTACT_SENSOR','MOTION_SENSOR'])\n    const [changeTimes, setChangeTimes] = useState({})\n\n    useEffect(() => {\n        var zones=devicesByCategory(['CONTACT_SENSOR','MOTION_SENSOR'])\n        getChangeTimesForDevices('detectionState',zones).then(result => setChangeTimes(result))\n    }, [devicesByCategory,getChangeTimesForDevices]);\n\n    function getSecurityZones() {\n        var secZones=[]\n        for (var i = 0; i < allzones.length; i++) {\n            if (!allzones[i].description.includes('(Automation)')) {\n                secZones.push(allzones[i])\n            } \n        }\n        return secZones\n    }\n    \n    function getAutomationZones() {\n        var autoZones=[]\n        for (var i = 0; i < allzones.length; i++) { \n            if (allzones[i].description.includes('(Automation)')) {\n                autoZones.push(allzones[i])\n            } \n        }\n        return autoZones\n    }\n\n    function historyZone(name, endpointId) {\n        applyBackPage('ZoneLayout', {} )\n        applyLayoutCard('HistoryLayout', {\"name\": name, \"endpointId\": endpointId, \"property\":\"detectionState\"})\n    }\n\n    return (    \n        <React.Fragment>\n            <GridSection name={\"Security Zones\"} >\n                { getSecurityZones().map(device =>\n                    <Zone history={historyZone} key={ device.endpointId } endpointId={ device.endpointId } name={ device.friendlyName } device={ device } changeTime={(changeTimes && (device.endpointId in changeTimes)) ? changeTimes[device.endpointId].time : \"Unknown\"}  />\n                )}\n            </GridSection>\n            <GridSection name={\"Automation Zones\"} >\n                { getAutomationZones().map(device =>\n                    <Zone history={historyZone} key={ device.endpointId } endpointId={ device.endpointId } name={ device.friendlyName } device={ device } changeTime={(changeTimes && (device.endpointId in changeTimes)) ? changeTimes[device.endpointId].time : \"Unknown\"}  />\n                )}\n            </GridSection>\n        </React.Fragment>\n    )\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;"],"sourceRoot":""}