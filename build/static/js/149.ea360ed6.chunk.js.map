{"version":3,"sources":["controllers/PowerController.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/Switch/Switch.js"],"names":["PowerController","props","interface","powerState","value","device","hasOwnProperty","EndpointHealth","connectivity","console","log","color","checked","onChange","event","target","directive","IconButton","React","forwardRef","ref","_props$edge","edge","children","classes","className","_props$color","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","other","_objectWithoutProperties","createElement","ButtonBase","_extends","clsx","root","concat","capitalize","small","start","edgeStart","end","edgeEnd","centerRipple","focusRipple","label","withStyles","theme","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","palette","action","active","transition","transitions","create","duration","shortest","backgroundColor","fade","hoverOpacity","marginLeft","marginRight","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","width","display","alignItems","justifyContent","name","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","icon","id","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","type","isControlled","useRef","current","_React$useState","useState","Boolean","checkedState","setCheckedState","muiFormControl","useFormControl","hasLabelFor","component","role","undefined","input","newChecked","cursor","position","opacity","height","top","left","margin","zIndex","Switch","thumb","switchBase","track","boxSizing","flexShrink","verticalAlign","grey","transform","common","black","white","boxShadow","shadows"],"mappings":"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","file":"static/js/149.ea360ed6.chunk.js","sourcesContent":["import React from 'react';\n\nimport Switch from '@material-ui/core/Switch';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport default function PowerController(props) {\n\n    function handlePowerChange(event){\n        if (event.target.checked) {\n            props.interface.directive('TurnOn')\n        } else {\n            props.interface.directive('TurnOff')\n        }\n    };     \n    \n    function isReachable() {\n        if (props.device.hasOwnProperty('EndpointHealth')) {\n            if (props.device.EndpointHealth.connectivity.value.value==='OK') { return true }\n            return false\n        }\n        console.log('no endpoint health', props.device)\n        return true\n    }\n\n    return (\n        <TableRow>\n            <TableCell>\n                Power\n            </TableCell>\n            <TableCell>\n                {props.interface.powerState.value}\n            </TableCell>\n            <TableCell>\n                { isReachable() &&\n                    <Switch color=\"primary\" checked={props.interface.powerState.value==='ON'} onChange={handlePowerChange} />\n                }\n            </TableCell>\n        </TableRow>\n    );\n\n}\n\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, {\n      small: classes[\"size\".concat(capitalize(size))]\n    }[size], {\n      start: classes.edgeStart,\n      end: classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: you are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      checkedState = _React$useState[0],\n      setCheckedState = _React$useState[1];\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(newChecked);\n    }\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disabled\", \"edge\", \"size\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      start: classes.edgeStart,\n      end: classes.edgeEnd\n    }[edge], {\n      small: classes[\"size\".concat(capitalize(size))]\n    }[size])\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref,\n    disabled: disabled\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}