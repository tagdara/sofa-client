{"version":3,"sources":["controllers/properties/powerLevel.js","SmallSlider.js"],"names":["PowerLevel","props","useEffect","undefined","interface","powerLevel","value","hasOwnProperty","setDefault","unit","min","max","step","change","event","directive","disabled","device","PowerController","powerState","useStyles","makeStyles","half","alignItems","display","height","flexGrow","flexBasis","boxSizing","stack","justifyContent","flexWrap","width","marginRight","overflowX","paddingRight","padLeft","paddingLeft","slider","margin","small","padding","smallLabel","SmallSlider","classes","useState","setValue","className","onChange","preChange","onChangeCommitted","variant","Array","isArray","Math","floor","defaultProps","default"],"mappings":"uHAAA,4EAGe,SAASA,EAAWC,GAe/B,OAbAC,qBAAU,gBAEiCC,IAAnCF,EAAMG,UAAUC,WAAWC,OACvBL,EAAMG,UAAUG,eAAe,eAC/BN,EAAMG,UAAUI,WAAW,MAGpC,CAACP,EAAMG,YAON,kBAAC,UAAD,CACIE,MAAQL,EAAMG,UAAUC,WAAWC,MAAQG,KAAM,IACjDC,IAAK,EAAGC,IAAK,IAAKC,KAAM,GACxBC,OARR,SAAgCC,GAC5Bb,EAAMG,UAAUW,UAAU,gBAAiB,CAAE,WAAeD,KAQxDE,WAAUf,EAAMgB,OAAOV,eAAe,qBAAsBN,EAAMgB,OAAOC,gBAAgBC,WAAWb,U,oIClB1Gc,EAAYC,YAAW,CAEzBC,KAAM,CACFC,WAAY,SACZC,QAAS,OACTC,OAAQ,GACRC,SAAU,EACVC,UAAW,EACXC,UAAW,cAEfC,MAAO,CACHJ,OAAQ,OACRD,QAAS,OACTE,SAAU,EACVI,eAAgB,gBAChBC,SAAU,OACVC,MAAO,OACPJ,UAAW,aACXK,YAAa,EACbC,UAAW,SACXX,WAAY,SACZY,aAAc,GAElBC,QAAS,CACLC,YAAa,IAEjBC,OAAQ,CACJC,OAAQ,SAEZC,MAAO,CACHC,QAAS,GAEbC,WAAY,CACRL,YAAa,KAKN,SAASM,EAAY1C,GAEhC,IAAM2C,EAAUxB,IAFuB,EAGbyB,mBAAS5C,EAAMK,OAHF,mBAGhCA,EAHgC,KAGzBwC,EAHyB,KA6BvC,OAxBA5C,qBAAU,WACN4C,EAAS7C,EAAMK,SAChB,CAACL,EAAMK,QAuBN,oCACI,kBAAC,IAAD,CACIyC,UAAWH,EAAQJ,MACnBlC,WAAgBH,IAARG,EAAoB,EAAIA,EAAQM,KAAMX,EAAMW,KACpDF,IAAKT,EAAMS,IAAKC,IAAKV,EAAMU,IAC3BqC,SAzBZ,SAAyBlC,EAAOR,GAC5BwC,EAASxC,GACLL,EAAMgD,WACNhD,EAAMgD,UAAU3C,IAuBZ4C,kBAnBZ,SAAsBpC,EAAMR,GACxBL,EAAMY,OAAOP,IAmBLU,cAAmBb,IAARG,GAAqBL,EAAMe,WAExCf,EAAMQ,KACJ,kBAAC,IAAD,CAAY0C,QAAQ,UAAUJ,UAAWH,EAAQF,YAlBrDU,MAAMC,QAAQ/C,GACPgD,KAAKC,MAAMjD,EAAM,IAAI,MAAOgD,KAAKC,MAAMjD,EAAM,IAAIL,EAAMQ,KAEvD6C,KAAKC,MAAMjD,GAAOL,EAAMQ,MAgB7B,MAKdkC,EAAYa,aAAe,CACvB/C,KAAM,GACNC,IAAK,EACLC,IAAK,IACLC,KAAM,EACN6C,QAAS,EACTnD,MAAO,EACPU,UAAU","file":"static/js/10.d0d5d523.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport SmallSlider from '../../SmallSlider';\n\nexport default function PowerLevel(props) {\n    \n    useEffect(() => {\n        // Set default if passed undefined\n        if (props.interface.powerLevel.value===undefined) {\n            if (props.interface.hasOwnProperty('setDefault')) {\n                props.interface.setDefault(50)\n            }\n        }\n    }, [props.interface])\n    \n    function handlePowerLevelChange(event) {\n        props.interface.directive('SetPowerLevel', { \"powerLevel\" : event })\n    }; \n\n    return (\n        <SmallSlider\n            value={ props.interface.powerLevel.value } unit={\"%\"}\n            min={0} max={100} step={10}\n            change={ handlePowerLevelChange }\n            disabled={props.device.hasOwnProperty('PowerController') ? !props.device.PowerController.powerState.value : false}\n        />\n    );\n}\n\n","import React , { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n         \n    half: {\n        alignItems: \"center\",\n        display: \"flex\",\n        height: 42,\n        flexGrow: 1,\n        flexBasis: 0,\n        boxSizing: \"border-box\",\n    },\n    stack: {\n        height: \"auto\",\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        marginRight: 8,\n        overflowX: \"hidden\",\n        alignItems: \"center\",\n        paddingRight: 8,\n    },\n    padLeft: {\n        paddingLeft: 16,\n    },\n    slider: {\n        margin: \"-18px\"\n    },\n    small: {\n        padding: 3,\n    },\n    smallLabel: {\n        paddingLeft: 8,\n    }\n\n});\n\nexport default function SmallSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(props.value)\n    \n    useEffect(() => {\n        setValue(props.value)\n    }, [props.value]);\n\n    \n    function handlePreChange(event, value) {\n        setValue(value);\n        if (props.preChange) {\n            props.preChange(value);\n        }\n    }; \n\n    function handleChange(event,value) {\n        props.change(value);\n    }; \n   \n    function unitDisplay() {\n        if (Array.isArray(value)) {\n            return Math.floor(value[0])+' - '+ Math.floor(value[1])+props.unit\n        } else {\n            return Math.floor(value)+props.unit\n        }\n    }\n   \n    return (\n        <>\n            <Slider\n                className={classes.small}\n                value={ value===undefined ? 0 : value } step={props.step} \n                min={props.min} max={props.max}\n                onChange={handlePreChange}\n                onChangeCommitted={handleChange}\n                disabled={ value===undefined || props.disabled }\n            />\n            { props.unit ?\n                <Typography variant=\"caption\" className={classes.smallLabel} >{unitDisplay()}</Typography>\n            : null }\n        </>\n    );\n}\n\nSmallSlider.defaultProps = {\n    unit: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    default: 0,\n    value: 0,\n    disabled: false,\n}\n\n\n"],"sourceRoot":""}