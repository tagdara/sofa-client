{"version":3,"sources":["SofaSlider.js","GridSection.js","ButtonItem.js","light/LightSliderBrightness.js","light/LightSliderTemperature.js","light/LightSliderColor.js","light/Light.js","SceneLayout.js"],"names":["useStyles","makeStyles","half","alignItems","display","height","flexGrow","flexBasis","boxSizing","stack","justifyContent","flexWrap","width","marginRight","overflowX","overflowY","paddingRight","padLeft","paddingLeft","slider","margin","SofaSlider","props","classes","useState","value","setValue","useEffect","style","minWidth","className","name","variant","smallText","stackLabel","unit","Array","isArray","Math","floor","step","min","max","onChange","event","preChange","onChangeCommitted","change","disabled","defaultProps","default","tabs","theme","base","alignContent","padding","borderRadius","gridColumn","scrollColumn","maxHeight","mobile","desktop","background","backgroundColor","palette","layer","section","center","GridSection","isMobile","useContext","LayoutContext","show","setShow","container","item","spacing","key","xs","classNames","scroll","nopad","primary","onClick","break","secondary","children","root","minHeight","listItem","working","marginLeft","padLabel","label","sceneButton","noMargin","noPad","highlight","itemHighlight","ButtonItem","ButtonObject","button","classnames","action","noback","undefined","avatarState","small","avatarIcon","labelSecondary","noGrid","thinmargin","nopaper","nolist","indent","LightSliderBrightness","device","BrightnessController","brightness","directive","endpointId","PowerController","powerState","LightSliderTemperature","ColorTemperatureController","colorTemperatureInKelvin","wide","revealIcon","color","sketchPickerStyles","picker","boxShadow","sl2sb","h","SL","s","l","SB","hue","saturation","t","sb2sl","LightSliderColor","sl","reveal","setColor","openDialog","setOpenDialog","ColorController","size","open","close","maxWidth","fullWidth","disableAlpha","styles","onChangeComplete","hsl","sendsb","presetColors","hsb","iconSize","tile","sliderPaper","flexDirection","nostack","lightSwitch","lightbar","placeholder","lightLabel","hover","Light","showAll","setShowAll","isReachable","hasOwnProperty","EndpointHealth","connectivity","console","log","e","friendlyName","deleting","checked","target","remove","brightControl","tempControl","colorControl","SceneLayout","DataContext","saveSceneDetails","getSceneDetails","deviceStateByEndpointId","sceneDetails","setSceneDetails","sceneLights","setSceneLights","controllerName","command","payload","i","length","workingLights","scene","then","res","detail","light","fakelight","push","fakeLights","Fragment","map","workingDetail","workingItem"],"mappings":"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","file":"static/js/78.3256e6ac.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n         \n    half: {\n        alignItems: \"center\",\n        display: \"flex\",\n        height: 42,\n        flexGrow: 1,\n        flexBasis: 0,\n        boxSizing: \"border-box\",\n    },\n    stack: {\n        height: \"auto\",\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        marginRight: 0,\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n        alignItems: \"center\",\n        paddingRight: 8,\n    },\n    padLeft: {\n        paddingLeft: 16,\n    },\n    slider: {\n        margin: \"-18px\"\n    }\n\n});\n\nexport default function SofaSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0)\n    \n    useEffect(() => {\n        if (props.value) {\n            setValue(props.value)\n        }\n    }, [props.value]);\n\n    \n    function handlePreChange(event, value) {\n        setValue(value);\n        if (props.preChange) {\n            props.preChange(value);\n        }\n    }; \n\n    function handleChange(event,value) {\n        props.change(value);\n    }; \n   \n    function unitDisplay() {\n        if (Array.isArray(value)) {\n            return Math.floor(value[0])+' - '+ Math.floor(value[1])+props.unit\n        } else {\n            return Math.floor(value)+props.unit\n        }\n    }\n   \n    return (\n        <div style={{ \"minWidth\": props.minWidth }} className={ props.padLeft ? classes.stack+\" \"+classes.padLeft: ( props.half ? classes.half : classes.stack) } >\n        { props.name ?\n            <Typography variant={ props.smallText ? \"caption\" : \"subtitle1\" } className={classes.stackLabel} >{props.name}</Typography>\n        :   null }\n        { props.unit ?\n            <Typography variant=\"caption\" className={classes.stackLabel} >{unitDisplay()}</Typography>\n        : null }\n            <Slider\n                value={value} step={props.step} \n                min={props.min} max={props.max}\n                onChange={handlePreChange}\n                onChangeCommitted={handleChange}\n                disabled={props.disabled}\n            />\n        </div>\n    );\n}\n\nSofaSlider.defaultProps = {\n    name: '',\n    unit: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    default: 0,\n    value: 0,\n    tabs: '',\n    disabled: false,\n    padLeft: false,\n    half: false,\n    minWidth: 240,\n    smallText: false,\n}\n\n\n","import React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport classNames from 'classnames';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        base: {\n            margin: 1,\n            overflowX: \"hidden\",\n            alignContent: \"start\",\n            padding: \"3px !important\",\n            borderRadius: \"4px 4px 4px 4px\",\n        },\n        gridColumn: {\n            overflowY: \"hidden\",\n        },\n        scrollColumn: {\n            overflowY: \"auto\",\n            maxHeight: \"100%\",\n        },\n        mobile: {\n            height: 16,\n        },\n        desktop: {\n        },\n        background: {\n            backgroundColor: theme.palette.layer.section,\n        },\n        center: {\n            justifyContent: \"center\",\n        }\n    }\n});\n\n\nexport default function GridSection(props) {\n    \n    const { isMobile } = useContext(LayoutContext);\n    const classes = useStyles();\n    const [show, setShow] = useState(props.show);\n\n    return (\n        <Grid container item spacing={1} key={props.name} xs={props.xs} \n            className={ classNames(classes.base, props.scroll ? classes.scrollColumn : classes.gridColumn, props.background ? classes.background : null)} \n        >\n\n            {props.name &&\n                <Grid item xs={12} className={classes.nopad}>\n                <List className={classes.nopad} >\n                    <ListItem className={ isMobile ? classes.mobile : classes.desktop} >\n                        <ListItemText primary={props.name} onClick={ () => setShow(!show) } />\n                        { (!isMobile || !props.break) &&\n                            <>\n                                {props.secondary}\n                            </>\n                        }\n                    </ListItem >\n                    { (isMobile && props.break) &&\n                        <ListItem className={classes.center}>\n                                {props.secondary}\n                        </ListItem>\n                    }\n                </List>\n                </Grid>\n            }\n            { show && props.children}\n        </Grid>\n    );\n}\n\nGridSection.defaultProps = {\n    break: false,\n    show: true,\n    scroll: false,\n    xs: 12,\n    background: true,\n}\n \n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ToggleAvatar from './ToggleAvatar';\nimport GridItem from \"./GridItem\"\nimport classnames from 'classnames';\n\nconst useStyles = makeStyles(theme => {\n    return {        \n        root: {\n            minHeight: 72,\n            display: \"flex\",\n            width: \"100%\",\n        },\n        listItem: {\n            padding: \"8px 8px\",\n        },\n        working: {\n            marginLeft: 4,\n        },\n        padLabel: {\n            paddingLeft: 28,\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        label: {\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        item: {\n            margin: 4,\n            minHeight: 54,\n            flexGrow:1,\n            borderRadius: 4,\n            backgroundColor: theme.palette.layer.item,\n            width: \"auto\",\n            padding: 8,\n        },\n        sceneButton: {\n            display: \"flex\",\n            width: \"100%\",\n        },\n        noMargin: {\n            margin: 0,\n        },\n        noPad: {\n            padding: 0,\n        },\n        highlight: {\n            backgroundColor: theme.palette.layer.itemHighlight,\n        }\n    }\n});\n\n\nexport default function ButtonItem(props) {\n    \n    const classes = useStyles();\n\n    var ButtonObject =  (\n        <ListItem button className={classnames(classes.item, props.highlight && classes.highlight, props.noMargin && classes.noMargin, props.noPad && classes.noPad)} onClick={ () => props.action()}>\n            <div className={classes.sceneButton}>\n                <ToggleAvatar noback={props.noback===undefined ? true : props.noback} avatarState={props.avatarState ? props.avatarState : 'off'} small={props.small} >\n                    { props.avatarIcon }\n                </ToggleAvatar>\n                <ListItemText className={props.small ? classes.padLabel : classes.label } primary={props.label} secondary={props.labelSecondary} />\n                { props.secondary }\n            </div>\n        </ListItem>\n    )\n\n    return (\n        <>\n        { !props.noGrid ?\n            <GridItem xs={props.xs} thinmargin={props.thinmargin} nopaper={true} noPad={props.noPad} nolist={props.nolist} >\n                { ButtonObject }\n                { props.children }\n            </GridItem>\n            :\n            <>\n                { ButtonObject }\n                { props.children }\n            </>\n        }\n        </>\n    )    \n\n};\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport SofaSlider from '../SofaSlider';\nimport BrightnessLowIcon from '@material-ui/icons/BrightnessLow';\n\nconst useStyles = makeStyles({\n        \n    indent: {\n        paddingLeft: 16,\n        paddingRight: 8,\n    }\n});\n\nexport default function LightSliderBrightness(props) {\n    \n    const classes = useStyles();\n\n    function handleBrightnessChange(event) {\n        props.directive(props.device.endpointId,'BrightnessController', 'SetBrightness', { \"brightness\" : event })\n    }; \n\n    return (\n            <ListItem>\n                <ListItemIcon className={classes.indent}><BrightnessLowIcon /></ListItemIcon>\n                <SofaSlider\n                    name=\"Brightness\" smallText={true} value={props.device.BrightnessController.brightness.value} unit=\"%\"\n                    min={0} max={100} step={10}\n                    change={handleBrightnessChange}\n                    disabled={!props.device.PowerController.powerState.value}\n                />\n            </ListItem>\n    );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport SofaSlider from '../SofaSlider';\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\n\nconst useStyles = makeStyles({\n        \n    indent: {\n        paddingLeft: 16,\n        paddingRight: 8,\n    }\n});\n\nexport default function LightSliderTemperature(props) {\n\n    const classes = useStyles();\n\n    function handleColorTemperatureChange(value) {\n        props.directive(props.device.endpointId, \"ColorTemperatureController\", \"SetColorTemperature\", { \"colorTemperatureInKelvin\": value} )\n    }; \n\n    return (\n        <ListItem>\n            <ListItemIcon className={classes.indent}><AcUnitIcon /></ListItemIcon>\n            <SofaSlider\n                name=\"Temperature\" smallText={true} unit={\"°\"}\n                value={props.device.ColorTemperatureController.colorTemperatureInKelvin.value}\n                min={2000} max={7000} step={100}\n                change={handleColorTemperatureChange}\n                disabled={!props.powerState}\n            />\n        </ListItem>\n    );\n\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Button from '@material-ui/core/Button';\n\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport LensIcon from '@material-ui/icons/Lens';\n\nimport { SketchPicker } from 'react-color'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst useStyles = makeStyles({\n        \n    wide: {\n        width: \"100%\",\n    },\n    indent: {\n        paddingLeft: 16,\n        paddingRight: 8,\n    },\n    button: {\n        minWidth: 48,\n        flexGrow: 1,\n    },\n    revealIcon: {\n        height: 24,\n        width: 24,\n        color: \"#FFE4B5\",\n    }\n});\n\n\nconst sketchPickerStyles = {\n    default: {\n        picker: { // See the individual picker source for which keys to use\n            boxShadow: 'none',\n        },\n    },\n}\n\nexport const sl2sb = (color) => {\n    var SL = {h:color.h, s:color.s, l:color.l};\n    var SB = {hue:color.h, saturation:0, brightness:0};\n    var t = SL.s * (SL.l<0.5 ? SL.l : 1-SL.l);\n    SB.brightness = SL.l+t;\n    SB.saturation = SL.l>0 ? 2*t/SB.brightness : SB.saturation ;\n    return SB\n}    \n\nexport const sb2sl = (color) => {\n    var SB = {hue:color.hue, saturation:color.saturation, brightness:color.brightness};\n    var SL = {h:color.hue, s:0, l:0};\n    SL.l = (2 - SB.saturation) * SB.brightness / 2;\n    SL.s = SL.l&&SL.l<1 ? SB.saturation*SB.brightness/(SL.l<0.5 ? SL.l*2 : 2-SL.l*2) : SL.s;\n    return SL\n}\n\nexport default function LightSliderColor(props) {\n\n    const classes = useStyles();\n    const reveal = {hue: 43.5, saturation:0.27, brightness: 1}\n    const [color, setColor] = useState(reveal);\n    const [openDialog, setOpenDialog] = useState(false);\n    \n    useEffect(() => {\n        setColor(sb2sl(props.device.ColorController.color.value))\n    }, [props.device.ColorController.color.value]);\n\n    function gethsl(sl) {\n        if (sl) {\n            return { \"backgroundColor\":\"hsl(\"+sl['h']+\", \"+(sl['s']*100)+\"%, \"+(sl['l']*100)+\"%)\"}\n        }\n        return { \"backgroundColor\":\"hsl(255, 100%, 100%)\"}\n    }\n    \n    function closeDialog() {\n        setOpenDialog(false)\n    }\n\n    function handleColorSliderChange(color, event) {\n        setColor(color.hsl);\n        var sendsb=sl2sb(color.hsl)\n        //sendsb.brightness=props.device.BrightnessController.brightness.value/100\n        props.directive(props.device.endpointId, \"ColorController\", \"SetColor\", { \"color\": sendsb })\n    }\n\n    function handleColorChange(hsb) {\n        setColor(sb2sl(hsb));\n        hsb.brightness=props.device.BrightnessController.brightness.value/100\n        props.directive(props.device.endpointId, \"ColorController\", \"SetColor\", { \"color\": hsb })\n    }\n    \n    function saveColor() { \n        var sendsb=sl2sb(color)\n        props.directive(props.device.endpointId, 'ColorController', 'SetColor', { \"color\" : sendsb }, {})\n        setOpenDialog(false)\n    }\n\n    return (\n        <ListItem>\n            <ListItemIcon className={classes.indent}><ColorLensIcon /></ListItemIcon>\n            <Button variant=\"outlined\" size=\"small\" onClick={ () => setOpenDialog(true) } style={gethsl(color)} className={classes.button }> &nbsp;\n            </Button>\n            <Dialog open={openDialog} close={closeDialog} maxWidth={'xs'} fullWidth={false} >\n                <SketchPicker\n                    disableAlpha styles={sketchPickerStyles}\n                    color={ color }\n                    onChangeComplete={ handleColorSliderChange }\n                    presetColors= { [   '#D0021B', '#F5A623', '#F8E71C', '#8B572A', \n                                        '#7ED321', '#417505', '#BD10E0', '#9013FE', \n                                        '#4A90E2', '#50E3C2', '#B8E986', '#FFFFFF', \"#FEEBBA\"\n                                    ] }\n                />\n                <DialogActions>\n                    <Button onClick={saveColor} color=\"primary\">\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Button size=\"small\" onClick={ () => handleColorChange(reveal)} color={ color===reveal ? \"primary\" : \"default\"} className={classes.button }>\n                <LensIcon className={classes.revealIcon} />\n            </Button>\n        </ListItem>\n    );\n\n}\n\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport Switch from '@material-ui/core/Switch';\nimport LightbulbOutlineIcon from '../LightbulbOutline';\nimport CloudOffIcon from '@material-ui/icons/CloudOff';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport LightSliderBrightness from \"./LightSliderBrightness\"\nimport LightSliderTemperature from \"./LightSliderTemperature\"\nimport LightSliderColor from \"./LightSliderColor\"\nimport ButtonItem from \"../ButtonItem\"\n\nconst useStyles = makeStyles(theme => {\n    return {        \n    iconSize: {\n        height: 24,\n        width: 24,\n    },\n    stack: {\n        height: 44,\n        display: \"flex\",\n        flexGrow: 1,\n        paddingLeft: 16,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n    },\n    tile: {\n        display: \"flex\",\n        flexGrow: 1,\n        height: 90,\n        paddingRight: 8,\n    },\n    sliderPaper: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        padding: \"16 8 16 16\",\n        alignItems: \"center\",\n    },\n    nostack: {\n        height: 44,\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        maxWidth: 480,\n        minWidth: 240,\n        boxSizing: \"border-box\",\n        marginRight: 8,\n    },\n    lightSwitch: {\n        marginLeft: 8,\n    },\n    lightbar: {\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n    },\n    placeholder: {\n        height: 57,\n        width: \"100%\",\n    },\n    listItem: {\n        maxHeight: 64,\n        width: \"100%\",\n        margin: 4,\n        padding: 8,\n    },\n    lightLabel: {\n        height: 48,\n        maxWidth: \"50%\",\n        flexGrow:1,\n        '&:hover': {\n            backgroundColor: theme.palette.background.hover,\n        },\n        borderRadius:4,\n        padding: 8,\n        boxSizing: \"border-box\",\n        alignItems: \"center\",\n        display: \"flex\",\n    }\n\n}\n});\n\nexport default function Light(props) {\n    \n    const classes = useStyles();\n    const [showAll, setShowAll] = useState(props.showAll)\n    \n    function handlePowerChange(event) {\n        props.directive(props.device.endpointId, 'PowerController', event.target.checked ? 'TurnOn' : 'TurnOff')\n    }; \n    \n    function isReachable() {\n        try {\n            if (props.device.hasOwnProperty('EndpointHealth')) {\n                if (props.device.EndpointHealth.connectivity.value.value==='OK') { return true }\n                return false\n            }\n            console.log('no endpoint health', props.device)\n            return true\n        } catch (e) {\n            console.log('Error getting reachable state', e)\n            return false\n        }\n    }\n    \n    return (\n            <ButtonItem noGrid={props.noGrid} nolist={true} noMargin={props.noMargin} noback={true}\n                avatarIcon={ isReachable() ?\n                    <LightbulbOutlineIcon className={classes.iconSize} />\n                :\n                    <CloudOffIcon className={classes.iconSize} />\n                }                \n                avatarState={ props.device.PowerController.powerState.value==='ON' ? \"on\" : \"off\" }\n                label={ props.device.friendlyName }\n                labelSecondary={ isReachable() ? null : 'Off at switch' }\n                small={ props.small }\n                action={() => setShowAll(!showAll) }\n                secondary={\n                    <>\n                        { ( isReachable() && !props.deleting ) &&\n                            <Switch color=\"primary\" className={classes.lightSwitch} checked={props.device.PowerController.powerState.value==='ON'} onChange={handlePowerChange} />\n                        }\n                        { props.deleting && \n                            <IconButton size=\"small\" onClick={()=>props.remove(props.device)} ><ClearIcon /></IconButton>\n                        }\n                    </>\n                }\n                children={\n                    <>\n                        { !props.brightControl && !showAll ? null :\n                            ( !props.device.hasOwnProperty('BrightnessController') ?\n                                <ListItem className={classes.placeholder} />\n                            :\n                                <LightSliderBrightness device={props.device} directive={props.directive} />\n                            )\n                        }\n                        { !props.tempControl && !showAll ? null :\n                            ( !props.device.hasOwnProperty('ColorTemperatureController') ?\n                                <ListItem className={classes.placeholder} />\n                            :\n                            <LightSliderTemperature device={props.device} directive={props.directive}/>\n                            )\n                        }\n                        { !props.colorControl && !showAll ? null :\n                            ( !props.device.hasOwnProperty('ColorController') ?\n                                <ListItem className={classes.placeholder} />\n                            :\n                                <LightSliderColor device={props.device} directive={props.directive}/>\n                            )\n                        }\n                    </>\n                }\n\n            />\n    );\n\n}\n\nLight.defaultProps = {\n    nopaper: false,\n    showAll: false,\n}\n","import React, {useContext, useState, useEffect } from 'react';\nimport { DataContext } from './DataContext/DataProvider';\n\nimport ButtonItem from './ButtonItem';\nimport Light from './light/Light';\nimport GridSection from './GridSection';\nimport SaveIcon from '@material-ui/icons/Save';\n\nexport default function SceneLayout(props) {\n\n    const { saveSceneDetails, getSceneDetails, deviceStateByEndpointId } = useContext(DataContext);\n    const [sceneDetails, setSceneDetails] = useState(undefined)\n    const [sceneLights, setSceneLights] = useState([])\n    \n    useEffect(() => {\n        getSceneDetails(props.scene.friendlyName)\n            .then(res=>{ setSceneDetails(res); fakeLights(res); })\n    // eslint-disable-next-line \n    }, []);\n    \n    function fakeLights(detail) {\n        var working=[]\n        for (var light in detail.children ) {\n            var fakelight=deviceStateByEndpointId(light)\n            if (detail.children[light].hasOwnProperty('powerState')) {\n                fakelight.PowerController.powerState.value=detail.children[light]['powerState']\n            }\n            if (detail.children[light].hasOwnProperty('brightness')) {\n                fakelight.BrightnessController.brightness.value=detail.children[light]['brightness']\n            }\n            if (detail.children[light].hasOwnProperty('hue')) {\n                fakelight.ColorController.color.value.hue=detail.children[light]['hue']\n                fakelight.ColorController.color.value.saturation=detail.children[light]['saturation']\n                fakelight.ColorController.color.value.brightness=detail.children[light]['brightness']/100\n            }\n\n            working.push(fakelight)\n        }\n        setSceneLights(working)\n    }\n    \n    \n    function directive (endpointId, controllerName, command, payload={}, cookie={}) {\n\n        for (var i = 0; i < sceneLights.length; i++) {\n            if (sceneLights[i].endpointId===endpointId) {\n                var workingLights=[...sceneLights]\n                if (command==='TurnOn') { payload={\"powerState\": \"ON\"} }\n                if (command==='TurnOff') { payload={\"powerState\": \"OFF\"}  }     \n                for (var key in payload) {\n                    if (payload.hasOwnProperty(key)) {\n                        workingLights[i][controllerName][key]['value']=payload[key]\n                    }\n                }\n                \n                setSceneLights(workingLights)\n                break\n            }\n        }\n    }\n    \n    function saveScene(){\n        var workingDetail={...sceneDetails}\n        for (var i = 0; i < sceneLights.length; i++) {\n            var workingItem={}\n            if (sceneLights[i].hasOwnProperty('PowerController')) {\n                workingItem.powerState=sceneLights[i].PowerController.powerState.value\n            }\n            if (sceneLights[i].hasOwnProperty('BrightnessController')) {\n                workingItem.brightness=sceneLights[i].BrightnessController.brightness.value\n            }\n            if (sceneLights[i].hasOwnProperty('ColorController')) {\n                workingItem.hue=sceneLights[i].ColorController.color.value.hue\n                workingItem.saturation=sceneLights[i].ColorController.color.value.saturation\n            }\n            workingDetail.children[sceneLights[i].endpointId]={...workingItem}\n        }\n        \n        console.log('would save:', workingDetail)\n        saveSceneDetails(props.scene.friendlyName, workingDetail)\n            \n    }\n\n    return (    \n        <React.Fragment>\n            { sceneLights!==undefined &&\n                <>\n                    <GridSection name={props.scene.friendlyName}>\n                        { sceneLights.map(device =>\n                            <Light key={ device.endpointId } device={ device } directive={directive} nopaper={false} showAll={true}  />\n                        )}\n                    </GridSection>\n                    <GridSection>\n                        <ButtonItem action={saveScene} avatarIcon={<SaveIcon/>} label={\"Save Scene\"} />\n                    </GridSection>\n                </>\n            }\n        </React.Fragment>\n    )\n};"],"sourceRoot":""}