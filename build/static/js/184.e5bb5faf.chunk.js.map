{"version":3,"sources":["ButtonItem.js"],"names":["useStyles","makeStyles","theme","root","minHeight","display","width","listItem","padding","working","marginLeft","padLabel","paddingLeft","alignItems","label","item","margin","flexGrow","borderRadius","backgroundColor","palette","layer","sceneButton","noMargin","noPad","highlight","itemHighlight","ButtonItem","props","classes","ButtonObject","button","className","classnames","onClick","action","noback","undefined","avatarState","small","avatarIcon","primary","secondary","labelSecondary","noGrid","children","xs","thinmargin","nopaper","nolist"],"mappings":"oHAAA,4HASMA,EAAYC,aAAW,SAAAC,GACzB,MAAO,CACHC,KAAM,CACFC,UAAW,GACXC,QAAS,OACTC,MAAO,QAEXC,SAAU,CACNC,QAAS,WAEbC,QAAS,CACLC,WAAY,GAEhBC,SAAU,CACNC,YAAa,GACbP,QAAS,OACTQ,WAAY,UAEhBC,MAAO,CACHT,QAAS,OACTQ,WAAY,UAEhBE,KAAM,CACFC,OAAQ,EACRZ,UAAW,GACXa,SAAS,EACTC,aAAc,EACdC,gBAAiBjB,EAAMkB,QAAQC,MAAMN,KACrCT,MAAO,OACPE,QAAS,GAEbc,YAAa,CACTjB,QAAS,OACTC,MAAO,QAEXiB,SAAU,CACNP,OAAQ,GAEZQ,MAAO,CACHhB,QAAS,GAEbiB,UAAW,CACPN,gBAAiBjB,EAAMkB,QAAQC,MAAMK,mBAMlC,SAASC,EAAWC,GAE/B,IAAMC,EAAU7B,IAEZ8B,EACA,kBAAC,IAAD,CAAUC,QAAM,EAACC,UAAWC,IAAWJ,EAAQd,KAAMa,EAAMH,WAAaI,EAAQJ,UAAWG,EAAML,UAAYM,EAAQN,SAAUK,EAAMJ,OAASK,EAAQL,OAAQU,QAAU,kBAAMN,EAAMO,WAChL,yBAAKH,UAAWH,EAAQP,aACpB,kBAAC,UAAD,CAAcc,YAAuBC,IAAfT,EAAMQ,QAA4BR,EAAMQ,OAAQE,YAAaV,EAAMU,YAAcV,EAAMU,YAAc,MAAOC,MAAOX,EAAMW,OACzIX,EAAMY,YAEZ,kBAAC,IAAD,CAAcR,UAAWJ,EAAMW,MAAQV,EAAQlB,SAAWkB,EAAQf,MAAQ2B,QAASb,EAAMd,MAAO4B,UAAWd,EAAMe,iBAC/Gf,EAAMc,YAKpB,OACI,oCACGd,EAAMgB,OAML,oCACMd,EACAF,EAAMiB,UAPZ,kBAAC,UAAD,CAAUC,GAAIlB,EAAMkB,GAAIC,WAAYnB,EAAMmB,WAAYC,SAAS,EAAMxB,MAAOI,EAAMJ,MAAOyB,OAAQrB,EAAMqB,QACjGnB,EACAF,EAAMiB","file":"static/js/184.e5bb5faf.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ToggleAvatar from './ToggleAvatar';\nimport GridItem from \"./GridItem\"\nimport classnames from 'classnames';\n\nconst useStyles = makeStyles(theme => {\n    return {        \n        root: {\n            minHeight: 72,\n            display: \"flex\",\n            width: \"100%\",\n        },\n        listItem: {\n            padding: \"8px 8px\",\n        },\n        working: {\n            marginLeft: 4,\n        },\n        padLabel: {\n            paddingLeft: 28,\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        label: {\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        item: {\n            margin: 4,\n            minHeight: 54,\n            flexGrow:1,\n            borderRadius: 4,\n            backgroundColor: theme.palette.layer.item,\n            width: \"auto\",\n            padding: 8,\n        },\n        sceneButton: {\n            display: \"flex\",\n            width: \"100%\",\n        },\n        noMargin: {\n            margin: 0,\n        },\n        noPad: {\n            padding: 0,\n        },\n        highlight: {\n            backgroundColor: theme.palette.layer.itemHighlight,\n        }\n    }\n});\n\n\nexport default function ButtonItem(props) {\n    \n    const classes = useStyles();\n\n    var ButtonObject =  (\n        <ListItem button className={classnames(classes.item, props.highlight && classes.highlight, props.noMargin && classes.noMargin, props.noPad && classes.noPad)} onClick={ () => props.action()}>\n            <div className={classes.sceneButton}>\n                <ToggleAvatar noback={props.noback===undefined ? true : props.noback} avatarState={props.avatarState ? props.avatarState : 'off'} small={props.small} >\n                    { props.avatarIcon }\n                </ToggleAvatar>\n                <ListItemText className={props.small ? classes.padLabel : classes.label } primary={props.label} secondary={props.labelSecondary} />\n                { props.secondary }\n            </div>\n        </ListItem>\n    )\n\n    return (\n        <>\n        { !props.noGrid ?\n            <GridItem xs={props.xs} thinmargin={props.thinmargin} nopaper={true} noPad={props.noPad} nolist={props.nolist} >\n                { ButtonObject }\n                { props.children }\n            </GridItem>\n            :\n            <>\n                { ButtonObject }\n                { props.children }\n            </>\n        }\n        </>\n    )    \n\n};\n\n\n"],"sourceRoot":""}