{"version":3,"sources":["SmallSlider.js"],"names":["useStyles","makeStyles","half","alignItems","display","height","flexGrow","flexBasis","boxSizing","stack","justifyContent","flexWrap","width","marginRight","overflowX","paddingRight","padLeft","paddingLeft","slider","margin","small","padding","smallLabel","SmallSlider","props","classes","useState","value","setValue","useEffect","className","undefined","step","min","max","onChange","event","preChange","onChangeCommitted","change","disabled","unit","variant","Array","isArray","Math","floor","defaultProps","default"],"mappings":"uNAKMA,EAAYC,YAAW,CAEzBC,KAAM,CACFC,WAAY,SACZC,QAAS,OACTC,OAAQ,GACRC,SAAU,EACVC,UAAW,EACXC,UAAW,cAEfC,MAAO,CACHJ,OAAQ,OACRD,QAAS,OACTE,SAAU,EACVI,eAAgB,gBAChBC,SAAU,OACVC,MAAO,OACPJ,UAAW,aACXK,YAAa,EACbC,UAAW,SACXX,WAAY,SACZY,aAAc,GAElBC,QAAS,CACLC,YAAa,IAEjBC,OAAQ,CACJC,OAAQ,SAEZC,MAAO,CACHC,QAAS,GAEbC,WAAY,CACRL,YAAa,KAKN,SAASM,EAAYC,GAEhC,IAAMC,EAAUzB,IAFuB,EAGb0B,mBAASF,EAAMG,OAHF,mBAGhCA,EAHgC,KAGzBC,EAHyB,KA6BvC,OAxBAC,qBAAU,WACND,EAASJ,EAAMG,SAChB,CAACH,EAAMG,QAuBN,oCACI,kBAAC,IAAD,CACIG,UAAWL,EAAQL,MACnBO,WAAgBI,IAARJ,EAAoB,EAAIA,EAAQK,KAAMR,EAAMQ,KACpDC,IAAKT,EAAMS,IAAKC,IAAKV,EAAMU,IAC3BC,SAzBZ,SAAyBC,EAAOT,GAC5BC,EAASD,GACLH,EAAMa,WACNb,EAAMa,UAAUV,IAuBZW,kBAnBZ,SAAsBF,EAAMT,GACxBH,EAAMe,OAAOZ,IAmBLa,cAAmBT,IAARJ,GAAqBH,EAAMgB,WAExChB,EAAMiB,KACJ,kBAAC,IAAD,CAAYC,QAAQ,UAAUZ,UAAWL,EAAQH,YAlBrDqB,MAAMC,QAAQjB,GACPkB,KAAKC,MAAMnB,EAAM,IAAI,MAAOkB,KAAKC,MAAMnB,EAAM,IAAIH,EAAMiB,KAEvDI,KAAKC,MAAMnB,GAAOH,EAAMiB,MAgB7B,MAKdlB,EAAYwB,aAAe,CACvBN,KAAM,GACNR,IAAK,EACLC,IAAK,IACLF,KAAM,EACNgB,QAAS,EACTrB,MAAO,EACPa,UAAU","file":"static/js/151.5e719f5e.chunk.js","sourcesContent":["import React , { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n         \n    half: {\n        alignItems: \"center\",\n        display: \"flex\",\n        height: 42,\n        flexGrow: 1,\n        flexBasis: 0,\n        boxSizing: \"border-box\",\n    },\n    stack: {\n        height: \"auto\",\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        marginRight: 8,\n        overflowX: \"hidden\",\n        alignItems: \"center\",\n        paddingRight: 8,\n    },\n    padLeft: {\n        paddingLeft: 16,\n    },\n    slider: {\n        margin: \"-18px\"\n    },\n    small: {\n        padding: 3,\n    },\n    smallLabel: {\n        paddingLeft: 8,\n    }\n\n});\n\nexport default function SmallSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(props.value)\n    \n    useEffect(() => {\n        setValue(props.value)\n    }, [props.value]);\n\n    \n    function handlePreChange(event, value) {\n        setValue(value);\n        if (props.preChange) {\n            props.preChange(value);\n        }\n    }; \n\n    function handleChange(event,value) {\n        props.change(value);\n    }; \n   \n    function unitDisplay() {\n        if (Array.isArray(value)) {\n            return Math.floor(value[0])+' - '+ Math.floor(value[1])+props.unit\n        } else {\n            return Math.floor(value)+props.unit\n        }\n    }\n   \n    return (\n        <>\n            <Slider\n                className={classes.small}\n                value={ value===undefined ? 0 : value } step={props.step} \n                min={props.min} max={props.max}\n                onChange={handlePreChange}\n                onChangeCommitted={handleChange}\n                disabled={ value===undefined || props.disabled }\n            />\n            { props.unit ?\n                <Typography variant=\"caption\" className={classes.smallLabel} >{unitDisplay()}</Typography>\n            : null }\n        </>\n    );\n}\n\nSmallSlider.defaultProps = {\n    unit: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    default: 0,\n    value: 0,\n    disabled: false,\n}\n\n\n"],"sourceRoot":""}