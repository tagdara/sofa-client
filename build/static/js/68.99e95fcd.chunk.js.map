{"version":3,"sources":["GridSection.js","other/Device.js","other/DeviceList.js","other/Shade.js","other/Mode.js","other/VirtualList.js","other/ModeList.js","MoreDevicesLayout.js"],"names":["useStyles","makeStyles","theme","base","margin","overflowX","alignContent","padding","borderRadius","gridColumn","overflowY","scrollColumn","height","nopad","background","backgroundColor","palette","page","GridSection","props","isMobile","useContext","LayoutContext","classes","useState","show","setShow","container","item","spacing","key","name","xs","className","classNames","scroll","primary","onClick","break","secondary","children","defaultProps","Device","avatarState","device","PowerController","powerState","value","friendlyName","color","checked","onChange","event","directive","endpointId","target","DeviceList","Fragment","devices","map","Shade","DeviceContext","handlePress","commandName","command","commands","controller","size","Mode","setPowerState","VirtualList","virtualDeviceStates","DataContext","Object","keys","index","ModeList","MoreDevicesLayout","deviceStatesByCategory","switches","devs","outdevs","j","length","hasOwnProperty","push","devsWithPowerState","modes","wide"],"mappings":"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","file":"static/js/68.99e95fcd.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport classNames from 'classnames';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        base: {\n            margin: 1,\n            overflowX: \"hidden\",\n            alignContent: \"start\",\n            padding: \"3px !important\",\n            borderRadius: \"4px 4px 4px 4px\",\n        },\n        gridColumn: {\n            overflowY: \"hidden\",\n        },\n        scrollColumn: {\n            overflowY: \"auto\",\n            height: \"100%\",\n        },\n        nopad: {\n            padding: 0,\n        },\n        background: {\n            backgroundColor: theme.palette.background.page,\n        }\n    }\n});\n\n\nexport default function GridSection(props) {\n    \n    const { isMobile } = useContext(LayoutContext);\n    const classes = useStyles();\n    const [show, setShow] = useState(props.show);\n\n    return (\n        <Grid container item spacing={1} key={props.name} xs={props.xs} \n            className={ classNames(classes.base, props.scroll ? classes.scrollColumn : classes.gridColumn, props.background ? classes.background : null)} \n        >\n\n            {props.name &&\n                <Grid item xs={12} className={classes.nopad}>\n                <List className={classes.nopad} >\n                    <ListItem>\n                        <ListItemText primary={props.name} onClick={ () => setShow(!show) } />\n                        { (!isMobile || !props.break) &&\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        }\n                    </ListItem>\n                    { (isMobile && props.break) &&\n                        <ListItem>\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    }\n                </List>\n                </Grid>\n            }\n            { show && props.children}\n        </Grid>\n    );\n}\n\nGridSection.defaultProps = {\n    break: false,\n    show: true,\n    scroll: false,\n    xs: 12,\n    background: true,\n}\n \n\n","import React from 'react';\n\nimport ToggleAvatar from '../ToggleAvatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Switch from '@material-ui/core/Switch';\nimport TuneIcon from '@material-ui/icons/Tune';\n\nimport GridItem from '../GridItem';\n\nexport default function Device(props) {\n \n    function handlePowerChange(event) {\n        props.directive(props.device.endpointId, \"PowerController\", event.target.checked ? 'TurnOn' : 'TurnOff')\n    }; \n\n    return (\n        <GridItem>\n            <ListItem>\n                <ToggleAvatar avatarState={ props.device.PowerController.powerState.value==='ON' ? 'on' : 'off'}><TuneIcon /></ToggleAvatar>\n                <ListItemText primary={props.device.friendlyName}/>\n                <ListItemSecondaryAction>\n                    <Switch color=\"primary\" checked={props.device.PowerController.powerState.value==='ON'} onChange={handlePowerChange} />\n                </ListItemSecondaryAction>\n           </ListItem>\n        </GridItem> \n    );\n}\n\n\n","import React from 'react';\n\nimport Device from './Device';\n\nexport default function DeviceList(props) {\n\n    return (\n        <React.Fragment>\n            { props.devices.map(device =>\n                <Device key={ device.endpointId } device={ device } directive={props.directive} />\n            )}\n        </React.Fragment>\n    )\n}\n","import React, { useContext } from 'react';\nimport { DeviceContext } from '../DataContext/DeviceProvider';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport TonalityIcon from '@material-ui/icons/Tonality';\n\nimport GridItem from '../GridItem';\n\n\nexport default function Shade(props) {\n    \n    const { directive } = useContext(DeviceContext);\n    \n    function handlePress(commandName) {\n        var command = props.commands[commandName]\n        directive(command.endpointId, command.controller, command.command, command.value)\n    }   \n\n    return (\n        <GridItem>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar><TonalityIcon /></Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={props.name}/>\n            <ListItemSecondaryAction>\n                <ButtonGroup size=\"small\" >\n                    <Button onClick={ () => handlePress('down') }><ExpandMoreIcon /></Button>\n                    <Button onClick={ () => handlePress('stop') }><RemoveIcon /></Button>\n                    <Button onClick={ () => handlePress('up') }><ExpandLessIcon /></Button>\n                </ButtonGroup>\n            </ListItemSecondaryAction>\n        </ListItem>\n        </GridItem>\n    );\n}\n","import React, { useState } from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Switch from '@material-ui/core/Switch';\nimport TuneIcon from '@material-ui/icons/Tune';\n\nimport GridItem from '../GridItem';\nimport ToggleAvatar from '../ToggleAvatar';\n\n\nexport default function Mode(props) {\n\n    const [powerState, setPowerState] = useState(props.device.PowerController.powerState.value);\n    \n    function handlePowerChange(event) {\n        setPowerState(event.target.checked);\n        if (event.target.checked) {\n            props.device.PowerController.directive('TurnOn')\n        } else {\n            props.device.PowerController.directive('TurnOff')\n        }\n    }; \n    \n    return (\n        <GridItem >\n            <ListItem>\n                <ToggleAvatar avatarState={powerState==='ON' ? 'on' : 'off'}><TuneIcon /></ToggleAvatar>\n                <ListItemText primary={props.device.friendlyName}/>\n                <ListItemSecondaryAction>\n                    <Switch color=\"primary\" checked={props.device.PowerController.powerState.value==='ON'} onChange={handlePowerChange} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        </GridItem>\n    );\n}\n\n","import React, { useContext } from 'react';\nimport { DataContext } from '../DataContext/DataProvider';\n\nimport Shade from './Shade';\n\nexport default function VirtualList(props) {\n\n    const { virtualDeviceStates } = useContext(DataContext);\n\n    return (\n        virtualDeviceStates ?\n            <React.Fragment>\n                { Object.keys(virtualDeviceStates).map((key, index) => (\n                    virtualDeviceStates[key]['type']==='shade' ?\n                        <Shade key={ index } name={ key } endpointId={ virtualDeviceStates[key].endpointId } commands={ virtualDeviceStates[key].commands } />\n                        :null\n                ))}\n            </React.Fragment>\n        : null \n    );\n}\n","import React from \"react\";\nimport Mode from './Mode';\n\nexport default function ModeList(props) {\n\n    return (\n        <React.Fragment>\n            { props.devices.map((device) =>\n                <Mode key={ device.endpointId } device={ device }  />\n            )}\n        </React.Fragment>\n    )\n}\n","import React, { useContext } from 'react';\nimport { DataContext } from './DataContext/DataProvider';\nimport ErrorBoundary from './ErrorBoundary';\nimport VirtualList from './other/VirtualList';\n//import ComputerList from './other/ComputerList';\nimport ModeList from './other/ModeList';\nimport DeviceList from './other/DeviceList';\nimport GridSection from './GridSection';\n\nexport default function MoreDevicesLayout(props) {\n\n    const { deviceStatesByCategory, directive } = useContext(DataContext);\n    const switches = devsWithPowerState(deviceStatesByCategory('SWITCH'))   \n    const modes = deviceStatesByCategory('MODE')\n    \n    \n    function devsWithPowerState(devs) {\n        var outdevs=[]\n        for (var j = 0; j < devs.length; j++) {\n            if (devs[j].hasOwnProperty('PowerController')) {\n                outdevs.push(devs[j])\n            }\n        }\n        return outdevs\n    }\n \n    return (\n        <React.Fragment>\n            <GridSection name={'Shades'}>\n                <ErrorBoundary wide={props.wide}>\n                    <VirtualList />\n                </ErrorBoundary>\n            </GridSection>\n            { switches &&\n            <GridSection name={\"Other Devices\"} >\n                <ErrorBoundary wide={props.wide}>\n                    <DeviceList devices={ switches } directive={directive} />\n                </ErrorBoundary>\n\n            </GridSection>\n            }\n            { modes && \n            <GridSection name={\"Modes\"} show={false}>\n                <ErrorBoundary wide={props.wide}>\n                    <ModeList devices={ modes } />\n                </ErrorBoundary>\n\n            </GridSection>\n            }\n        </React.Fragment>\n    )\n}\n\n"],"sourceRoot":""}