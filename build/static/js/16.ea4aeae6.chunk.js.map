{"version":3,"sources":["SofaSlider.js","controllers/properties/volume.js","SofaAvatarSlider.js"],"names":["useStyles","makeStyles","half","alignItems","display","height","flexGrow","flexBasis","boxSizing","stack","justifyContent","flexWrap","width","marginRight","overflowX","overflowY","paddingRight","padLeft","paddingLeft","slider","margin","SofaSlider","props","classes","useState","value","setValue","useEffect","style","minWidth","className","name","variant","smallText","stackLabel","unit","Array","isArray","Math","floor","step","min","max","onChange","event","preChange","onChangeCommitted","change","disabled","defaultProps","default","tabs","Volume","undefined","item","directive","device","endpointId","instance","interface","small","reverse","volume","label","line","maxWidth","minHeight","padding","noPad","SofaAvatarSlider","onClick","avatarClick","noback","noAvatarBack","avatarState","avatarUnit","iconLabel","primary","hasOwnProperty"],"mappings":"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","file":"static/js/16.ea4aeae6.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n         \n    half: {\n        alignItems: \"center\",\n        display: \"flex\",\n        height: 42,\n        flexGrow: 1,\n        flexBasis: 0,\n        boxSizing: \"border-box\",\n    },\n    stack: {\n        height: \"auto\",\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        marginRight: 0,\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n        alignItems: \"center\",\n        paddingRight: 8,\n    },\n    padLeft: {\n        paddingLeft: 16,\n    },\n    slider: {\n        margin: \"-18px\"\n    }\n\n});\n\nexport default function SofaSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0)\n    \n    useEffect(() => {\n        if (props.value) {\n            setValue(props.value)\n        }\n    }, [props.value]);\n\n    \n    function handlePreChange(event, value) {\n        setValue(value);\n        if (props.preChange) {\n            props.preChange(value);\n        }\n    }; \n\n    function handleChange(event,value) {\n        props.change(value);\n    }; \n   \n    function unitDisplay() {\n        if (Array.isArray(value)) {\n            return Math.floor(value[0])+' - '+ Math.floor(value[1])+props.unit\n        } else {\n            return Math.floor(value)+props.unit\n        }\n    }\n   \n    return (\n        <div style={{ \"minWidth\": props.minWidth }} className={ props.padLeft ? classes.stack+\" \"+classes.padLeft: ( props.half ? classes.half : classes.stack) } >\n        { props.name ?\n            <Typography variant={ props.smallText ? \"caption\" : \"subtitle1\" } className={classes.stackLabel} >{props.name}</Typography>\n        :   null }\n        { props.unit ?\n            <Typography variant=\"caption\" className={classes.stackLabel} >{unitDisplay()}</Typography>\n        : null }\n            <Slider\n                value={value} step={props.step} \n                min={props.min} max={props.max}\n                onChange={handlePreChange}\n                onChangeCommitted={handleChange}\n                disabled={props.disabled}\n            />\n        </div>\n    );\n}\n\nSofaSlider.defaultProps = {\n    name: '',\n    unit: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    default: 0,\n    value: 0,\n    tabs: '',\n    disabled: false,\n    padLeft: false,\n    half: false,\n    minWidth: 240,\n    smallText: false,\n}\n\n\n","import React, { useEffect } from 'react';\nimport SofaAvatarSlider from '../../SofaAvatarSlider';\n\nexport default function Volume(props) {\n    \n    useEffect(() => {\n        if (props.item.value===undefined) {\n            props.directive(props.device.endpointId, 'SpeakerController', 'SetVolume', { \"volume\" : 50 }, {}, props.item.instance)\n        }\n    // eslint-disable-next-line\n    }, [props.item, props.device, props.interface])\n    \n    function handleVolumeChange(event) {\n        props.directive(props.device.endpointId, 'SpeakerController', 'SetVolume', { \"volume\" : event }, {}, props.item.instance)\n    }; \n\n    return (\n        <SofaAvatarSlider small={true} reverse={true} minWidth={64} value={ props.item.value ? props.item.value.volume : 50 } change={ handleVolumeChange } />\n    );\n}\n\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport SofaSlider from './SofaSlider';\nimport ToggleAvatar from './ToggleAvatar'\n\nconst useStyles = makeStyles({\n         \n    label: {\n        display: \"flex\",\n        flexGrow: 1,\n        flexBasis: 0,\n        minWidth: \"35%\",\n        alignItems: \"center\",\n    },\n    line: {\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        width: '100%',\n        maxWidth: '100%',\n        flexGrow: 1,\n        flexBasis: 0,\n        minHeight: 48,\n        padding: \"0 16px\",\n        alignItems: \"center\",\n    },\n    noPad: {\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        width: '100%',\n        maxWidth: '100%',\n        flexGrow: 1,\n        flexBasis: 0,\n        padding: 0,\n        alignItems: \"center\",\n    }\n})\n\nexport default function SofaAvatarSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n\n    useEffect(() => {\n  \t    setValue(props.value)\n    }, [props.value]);\n\n    function handlePreChange(value) {\n        setValue(value)\n        if (props.hasOwnProperty('preChange')) {\n            props.preChange(value)\n        }\n    }; \n    \n    return (\n        <div className={props.noPad ? classes.noPad : classes.line}>\n            { !props.reverse &&\n                <ToggleAvatar small={props.small} onClick={props.avatarClick} noback={props.noAvatarBack} avatarState={ props.avatarState }>\n                    {value+props.avatarUnit}\n                </ToggleAvatar>\n            }\n            { props.iconLabel &&\n                props.iconLabel\n            }\n            { props.label &&\n                <ListItemText primary={props.label} className={classes.label} />\n            }\n\n            <SofaSlider {...props} preChange={handlePreChange} />\n            { props.reverse &&\n                <ToggleAvatar reverse={props.reverse} small={props.small} onClick={props.avatarClick} noback={props.noAvatarBack} avatarState={ props.avatarState }>\n                    {value+props.avatarUnit}\n                </ToggleAvatar>\n            }\n        </div>\n    );\n}\n\nSofaAvatarSlider.defaultProps = {\n    avatarClick:undefined,\n    noAvatarBack: false,\n    avatarState: \"on\",\n    reverse: true,\n    small: false,\n    avatarUnit: \"\",\n    noPad: false,\n    \n}\n\n"],"sourceRoot":""}