{"version":3,"sources":["GridSection.js","camera/cameraDialog.js","camera/securitycamera.js","CameraQR.js","CameraLayout.js"],"names":["useStyles","makeStyles","theme","base","margin","overflowX","alignContent","padding","borderRadius","gridColumn","overflowY","scrollColumn","maxHeight","mobile","height","desktop","background","backgroundColor","palette","layer","section","center","justifyContent","GridSection","props","isMobile","useContext","LayoutContext","classes","useState","show","setShow","container","item","spacing","key","name","xs","className","classNames","scroll","nopad","primary","onClick","break","secondary","children","defaultProps","bigcamDialog","paddingTop","paddingBottom","minWidth","boxSizing","root","paper","boxShadow","overflow","bigcamPaper","display","bigcam","width","maxWidth","opacity","bigcamRotated","position","top","left","marginTop","marginLeft","rotatebutton","zIndex","right","ratebutton","closebutton","Hls","window","CameraDialog","rotation","setRotation","uri","setUri","video","useRef","enableScaling","document","querySelector","setAttribute","closeDialog","e","close","useEffect","directive","camera","endpointId","then","response","payload","cameraStreams","console","log","live","isSupported","hls","loadSource","attachMedia","current","on","Events","MANIFEST_PARSED","play","fullScreen","open","onClose","PaperProps","size","aria-label","changeInterval","refreshInterval","color","controls","muted","autoPlay","playsInline","id","style","transform","ref","src","type","alt","friendlyName","nextbutton","prevbutton","gridbutton","bottom","newgridbutton","im","hiddenimage","hidden","spinner","SecurityCamera","applyLayoutCard","intervals","imageLoaded","setImageLoaded","showDialog","setShowDialog","setRefreshInterval","imageUri","setImageUri","updateUrl","setUpdateUrl","ready","setReady","callback","delay","savedCallback","setInterval","clearInterval","useInterval","Date","now","data","wide","noMargin","thinmargin","onLoad","Fragment","prevCamera","nextCamera","selectButtons","shift","push","oldbigcover","minHeight","CameraQR","serverurl","location","hostname","songImageHolder","bigcover","cameraId","title","CameraLayout","DataContext","deviceStatesByCategory","cameras","map","button"],"mappings":"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","file":"static/js/114.a18d5f17.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport classNames from 'classnames';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        base: {\n            margin: 1,\n            overflowX: \"hidden\",\n            alignContent: \"start\",\n            padding: \"3px !important\",\n            borderRadius: \"4px 4px 4px 4px\",\n        },\n        gridColumn: {\n            overflowY: \"hidden\",\n        },\n        scrollColumn: {\n            overflowY: \"auto\",\n            maxHeight: \"100%\",\n        },\n        mobile: {\n            height: 16,\n        },\n        desktop: {\n        },\n        background: {\n            backgroundColor: theme.palette.layer.section,\n        },\n        center: {\n            justifyContent: \"center\",\n        }\n    }\n});\n\n\nexport default function GridSection(props) {\n    \n    const { isMobile } = useContext(LayoutContext);\n    const classes = useStyles();\n    const [show, setShow] = useState(props.show);\n\n    return (\n        <Grid container item spacing={1} key={props.name} xs={props.xs} \n            className={ classNames(classes.base, props.scroll ? classes.scrollColumn : classes.gridColumn, props.background ? classes.background : null)} \n        >\n\n            {props.name &&\n                <Grid item xs={12} className={classes.nopad}>\n                <List className={classes.nopad} >\n                    <ListItem className={ isMobile ? classes.mobile : classes.desktop} >\n                        <ListItemText primary={props.name} onClick={ () => setShow(!show) } />\n                        { (!isMobile || !props.break) &&\n                            <>\n                                {props.secondary}\n                            </>\n                        }\n                    </ListItem >\n                    { (isMobile && props.break) &&\n                        <ListItem className={classes.center}>\n                                {props.secondary}\n                        </ListItem>\n                    }\n                </List>\n                </Grid>\n            }\n            { show && props.children}\n        </Grid>\n    );\n}\n\nGridSection.defaultProps = {\n    break: false,\n    show: true,\n    scroll: false,\n    xs: 12,\n    background: true,\n}\n \n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport ScreenRotationIcon from '@material-ui/icons/ScreenRotation';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\n\nconst useStyles = makeStyles({    \n    bigcamDialog: {\n        backgroundColor: \"#222\",\n        paddingTop: \"env(safe-area-inset-top)\",\n        paddingBottom: \"env(safe-area-inset-bottom)\",\n        minWidth: '320px',\n        boxSizing: \"border-box\",\n    },\n    root: {\n        backgroundColor: \"#111\"\n    },\n    paper: {\n        backgroundColor: \"#111\",\n        boxShadow: \"none\",\n        overflow: \"hidden\"\n    },\n    bigcamPaper: {\n        margin: \"auto 4px\",\n        maxHeight: \"100%\",\n        display: \"flex\",\n    },\n    bigcam: {\n        width: \"100%\",\n        height: \"auto !important\",\n        maxWidth: \"100%\",\n        maxHeight: \"100%\",\n        background: \"#222\",\n        opacity: \"1.0\", \n        margin: \"auto auto\",\n        padding: 0,\n        borderRadius: 4,\n    },\n    bigcamRotated: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        height: \"100vw\",\n        maxWidth: \"initial\",\n        padding: 0,\n        margin: \"auto auto\",\n        marginTop: \"calc((100vh - 100vw) / 2.5)\",\n        marginLeft: \"calc((100vw * -1) /2.5) !important\",\n        borderRadius: 4,\n    },\n\n    rotatebutton: {\n        zIndex: 2000,\n        position: \"absolute\",\n        top: 16,\n        right: 72,\n    },\n    ratebutton: {\n        zIndex: 2000,\n        position: \"absolute\",\n        top: 16,\n        right: 190,\n    },\n    closebutton: {\n        zIndex: 2000,\n        position: \"absolute\",\n        top: 16,\n        right: 16,\n    },\n});\n\nconst Hls = window.Hls;\n\nexport default function CameraDialog(props) {\n\n    const classes = useStyles();\n    const [rotation, setRotation]=useState(0)\n    const [uri, setUri]=useState(\"\")\n    const video = useRef(null);\n\n    useEffect(()=> {\n        enableScaling()\n    },[]);\n\n    useEffect(()=> {\n        props.directive(props.camera.endpointId,\"CameraStreamController\", \"InitializeCameraStreams\", \n            {\n                \"cameraStreams\": [\n                    {\n                        \"protocol\": \"HLS\",\n                        \"resolution\": {\n                            \"width\": 640,\n                            \"height\": 480\n                        },\n                        \"authorizationType\": \"BASIC\",\n                        \"videoCodec\": \"H264\",\n                        \"audioCodec\": \"AAC\"\n                    }\n                ]\n            }\n        ).then(response => setUri(response.payload.cameraStreams[0].uri));\n    // eslint-disable-next-line     \n    },[props.camera]);\n    \n    \n    useEffect(()=> {\n        console.log('uri update',uri)\n        enableScaling()\n        if (props.live && window.Hls.isSupported() ) {\n            var hls = new Hls();\n            hls.loadSource(uri);\n            hls.attachMedia(video.current);\n            hls.on(Hls.Events.MANIFEST_PARSED,function() { video.current.play(); });\n        }\n    }, [uri, props.live])\n    \n            \n    function enableScaling() {\n        var viewport = document.querySelector(\"meta[name=viewport]\");\n        viewport.setAttribute('content', \"viewport-fit=cover, width=device-width, initial-scale=1, maximum-scale=5, user-scalable=yes\");\n    }\n\n    function disableScaling() {\n        var viewport = document.querySelector(\"meta[name=viewport]\");\n        viewport.setAttribute('content', \"viewport-fit=cover, width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\");\n    }\n    \n    function closeDialog(e) {\n        disableScaling()\n        props.close()\n    }\n    \n    function rotate() {\n\n        \n        if (rotation!==90) {\n            setRotation(90)\n        } else {\n            setRotation(0)\n        }\n        console.log('set rotate to ',rotation)\n\n    }\n\n    return (\n        <Dialog fullScreen open={props.show} onClose={() => closeDialog()} className={classes.bigcamDialog} PaperProps ={{ classes: { root: classes.paper}}}>\n            { !props.live && \n            <Fab size=\"medium\" aria-label=\"Rate\" className={classes.ratebutton} onClick={() => props.changeInterval()}  >\n                <TimerIcon />{props.refreshInterval/1000}\n            </Fab>\n            }\n            <Fab size=\"medium\" color=\"primary\" aria-label=\"Close\" className={classes.closebutton} onClick={() => closeDialog()} >\n                <CloseIcon />\n            </Fab>\n            <Fab size=\"medium\" aria-label=\"Rotate\" className={classes.rotatebutton} onClick={() => rotate()}>\n                <ScreenRotationIcon />\n            </Fab>\n            <Paper className={classes.bigcamPaper} >\n                { props.live ?\n                <video controls muted autoPlay playsInline id=\"video\" className={rotation>0 ? classes.bigcamRotated : classes.bigcam} style={{transform: `rotate(${rotation}deg)`}} ref={video}>\n                    <source src={uri} type=\"application/x-mpegURL\" />\n                </video>\n                :\n                <img alt={props.camera.friendlyName} className={rotation>0 ? classes.bigcamRotated : classes.bigcam} style={{transform: `rotate(${rotation}deg)`}} src={props.src}/>\n                }\n            </Paper>\n        </Dialog>\n    )\n};\n\n","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { LayoutContext } from '../layout/NewLayoutProvider';\nimport { makeStyles } from '@material-ui/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\n\nimport CameraDialog from './cameraDialog';\nimport GridItem from '../GridItem';\n\nconst useStyles = makeStyles({    \n    \n    nextbutton: {\n        position: \"absolute\",\n        top: \"40%\",\n        right: 8,\n    },\n    prevbutton: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: 8,\n    },\n    gridbutton: {\n        position: \"absolute\",\n        left: 8,\n        bottom: 8,\n    },\n    newgridbutton: {\n        position: \"absolute\",\n        right: 8,\n        bottom: 8,\n    },\n\n    im: {\n        width: \"100%\",\n        height: \"auto\",\n        borderRadius: 4,\n        display: \"flex\",\n    },\n    hiddenimage: {\n        height: 0,\n        display: \"none\",\n    },\n    hidden: {\n        borderRadius: 4,\n        position: \"relative\",\n        width: \"100%\",\n        paddingTop: '56.25%', // 16:9\n    },\n    spinner: {\n        position: \"absolute\",\n        margin: \"auto\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n});\n\nfunction useInterval(callback, delay) {\n    \n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n\n    }, [delay]);\n}\n\nexport default function SecurityCamera(props) {\n\n    const classes = useStyles();\n    const { isMobile, applyLayoutCard } = useContext(LayoutContext);\n    const intervals = [1000, 500, 5000, 3000]\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [showDialog, setShowDialog] = useState(false);\n    const [refreshInterval, setRefreshInterval] = useState(3000);\n    const live = true;\n    const [imageUri,setImageUri] = useState(\"\")\n    const [updateUrl, setUpdateUrl] = useState(\"\");\n    const [ready, setReady] = useState(false)\n\n    useInterval(() => {\n        // Your custom logic here\n        if (imageUri) {\n            setUpdateUrl(imageUri+\"?time=\"+Date.now())\n        }\n    }, refreshInterval);\n    \n    useEffect(()=> {\n        \n        function updateUrlUri(data) {\n            setUpdateUrl(data.payload.imageUri+\"?time=\"+Date.now());\n            setImageUri(data.payload.imageUri)\n        }\n        \n        if ((props.camera) && (ready!==props.camera.endpointId)) { \n            setReady(props.camera.endpointId)\n            //props.camera.CameraStreamController.directive(\"InitializeCameraStreams\", \n            props.directive(props.camera.endpointId, \"CameraStreamController\", \"InitializeCameraStreams\",\n                {\n                    \"cameraStreams\": [\n                        {\n                            \"protocol\": \"HLS\",\n                            \"resolution\": {\n                                \"width\": 640,\n                                \"height\": 480\n                            },\n                            \"authorizationType\": \"BASIC\",\n                            \"videoCodec\": \"H264\",\n                            \"audioCodec\": \"AAC\"\n                        }\n                    ]\n                }\n            ).then(response => updateUrlUri(response))\n        } \n    // eslint-disable-next-line \n    }, [props.camera, ready]);\n\n    function imageFinished() {\n        if (!imageLoaded) {\n            setImageLoaded(true);\n        }\n    }\n    \n    function changeInterval() {\n        setRefreshInterval(intervals.shift())\n        intervals.push(refreshInterval)\n    }\n    \n    function closeDialog() {\n        setShowDialog(false)\n    }\n    \n    function handleClickOpen() {\n        setShowDialog(true)\n    }\n    \n    return (\n        <GridItem wide={props.wide} nopad={true} noMargin={props.top} thinmargin={isMobile}>\n            { imageUri && \n                <img\n                    className={imageLoaded ? classes.im : classes.hiddenimage}\n                    src={updateUrl}\n                    onLoad={ () => imageFinished() }\n                    onClick={ () => handleClickOpen()}\n                    alt={props.camera.friendlyName+\" Security Camera\"}\n                />\n            }\n            {imageLoaded ?\n                <React.Fragment>\n                    { props.prevCamera &&\n                        <IconButton color=\"primary\" className={classes.prevbutton} onClick={ () => props.prevCamera()}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    }\n                    { props.nextCamera &&\n                        <IconButton color=\"primary\" className={classes.nextbutton} onClick={ () => props.nextCamera()}>\n                            <ChevronRightIcon />\n                        </IconButton>\n                    }\n                    { props.selectButtons &&\n                        <IconButton color=\"primary\" className={classes.newgridbutton} onClick={ () => applyLayoutCard('CameraLayout')}>\n                            <ViewModuleIcon />\n                        </IconButton>\n                    }\n\n                </React.Fragment>\n            :\n                <div className={classes.hidden}>\n                    <CircularProgress className={classes.spinner} size={50} />\n                </div>\n            }\n            { showDialog &&\n                <CameraDialog directive={props.directive} live={live} camera={props.camera} name={props.name} refreshInterval={refreshInterval} changeInterval={changeInterval} show={showDialog} close={closeDialog} src={imageUri} />\n            }\n        </GridItem>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        oldbigcover: {\n            width: \"100%\",\n            maxHeight: 480,\n            position: \"relative\",\n            padding: 0,\n            height: \"auto\",\n            minHeight:100,\n        },\n    }\n});\n\nexport default function CameraQR(props) {\n    \n    const classes = useStyles();\n    const serverurl=\"https://\"+window.location.hostname;\n    \n    return ( \n            <Grid item xs={4} className={classes.songImageHolder}>\n\n            <img\n                className={classes.bigcover}\n                src={ serverurl+\"/image/homekitcamera/qrcode/\"+props.cameraId+\"?width=1024\" }\n                title={ props.name }\n                alt={ props.name }\n            />\n            <div>{props.name}</div>\n            </Grid>\n            \n    );\n}\n\n","import React, { useContext } from 'react';\nimport { DataContext } from './DataContext/DataProvider';\n\nimport SecurityCamera from './camera/securitycamera';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GridSection from './GridSection';\nimport CameraQR from './CameraQR';\n\n\nexport default function CameraLayout(props) {\n    \n    const { deviceStatesByCategory, directive } = useContext(DataContext);\n    const cameras=deviceStatesByCategory(['CAMERA'])\n\n    function openNVR() {\n        var newurl=\"https://unifi-video.dayton.tech:7443\"\n        var tabname=\"_nvr\"\n        window.open(newurl,tabname);\n    }\n    \n    return (\n        <React.Fragment>\n        <GridSection name={\"Cameras\"}>\n            { cameras.map(camera => \n                <SecurityCamera camera={camera} key={camera.endpointId} name={ camera.friendlyName } directive={directive} />\n            )}\n        </GridSection>\n        <GridSection>\n        <List>\n            <ListItem button onClick={() => openNVR() }>\n                <ListItemIcon>\n                    <VideocamIcon />\n                </ListItemIcon>\n                <ListItemText primary={'Unifi NVR'} />\n            </ListItem>\n        </List>\n        </GridSection>\n        <GridSection name={\"QR Codes\"} show={false}>\n            { cameras.map(camera => \n                <CameraQR cameraId={camera.endpointId} key={camera.endpointId} name={ camera.friendlyName } />\n            )}\n        </GridSection>\n\n        </React.Fragment>\n    )\n}\n"],"sourceRoot":""}