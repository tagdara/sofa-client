{"version":3,"sources":["GridSection.js","SofaSlider.js","thermostat/TemperatureSensor.js","thermostat/Thermostat.js","ThermostatLayout.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/icons/Toys.js"],"names":["useStyles","makeStyles","theme","base","margin","overflowX","alignContent","padding","borderRadius","gridColumn","overflowY","scrollColumn","height","nopad","background","backgroundColor","palette","page","GridSection","props","isMobile","useContext","LayoutContext","classes","useState","show","setShow","container","item","spacing","key","name","xs","className","classNames","scroll","primary","onClick","break","secondary","children","defaultProps","half","alignItems","display","flexGrow","flexBasis","boxSizing","stack","justifyContent","flexWrap","width","marginRight","paddingRight","padLeft","paddingLeft","slider","SofaSlider","value","setValue","useEffect","style","minWidth","variant","smallText","stackLabel","unit","Array","isArray","Math","floor","step","min","max","onChange","event","preChange","onChangeCommitted","change","disabled","default","tabs","TemperatureSensor","temp","applyLayoutCard","applyBackPage","wide","device","avatarState","temperature","deepvalue","friendlyName","listItem","bottomListItem","minHeight","xlistItem","listItemIndent","speedlistItem","buttonLine","button","fanButton","list","flexDirection","Thermostat","DeviceContext","directive","getController","targetSetpoint","setTargetSetpoint","powerLevel","setPowerLevel","fanSetMode","setFanSetMode","supportedRange","endpointId","configuration","ThermostatController","hasOwnProperty","lowerSetpoint","upperSetpoint","PowerLevelController","defaultValue","thermostatMode","size","supportedModes","map","mode","e","color","ThermostatLayout","deviceStatesByCategory","DataContext","thermostats","temperatureSensors","Fragment","ListItemSecondaryAction","React","forwardRef","ref","other","_objectWithoutProperties","createElement","_extends","clsx","root","muiName","withStyles","position","right","top","transform","ListItemIcon","context","ListContext","alignItemsFlexStart","action","active","flexShrink","marginTop","_interopRequireDefault","require","Object","defineProperty","exports","_react","_default","d"],"mappings":"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","file":"static/js/68.35ce09a2.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { LayoutContext } from './layout/NewLayoutProvider';\nimport classNames from 'classnames';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        base: {\n            margin: 1,\n            overflowX: \"hidden\",\n            alignContent: \"start\",\n            padding: \"3px !important\",\n            borderRadius: \"4px 4px 4px 4px\",\n        },\n        gridColumn: {\n            overflowY: \"hidden\",\n        },\n        scrollColumn: {\n            overflowY: \"auto\",\n            height: \"100%\",\n        },\n        nopad: {\n            padding: 0,\n        },\n        background: {\n            backgroundColor: theme.palette.background.page,\n        }\n    }\n});\n\n\nexport default function GridSection(props) {\n    \n    const { isMobile } = useContext(LayoutContext);\n    const classes = useStyles();\n    const [show, setShow] = useState(props.show);\n\n    return (\n        <Grid container item spacing={1} key={props.name} xs={props.xs} \n            className={ classNames(classes.base, props.scroll ? classes.scrollColumn : classes.gridColumn, props.background ? classes.background : null)} \n        >\n\n            {props.name &&\n                <Grid item xs={12} className={classes.nopad}>\n                <List className={classes.nopad} >\n                    <ListItem>\n                        <ListItemText primary={props.name} onClick={ () => setShow(!show) } />\n                        { (!isMobile || !props.break) &&\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        }\n                    </ListItem>\n                    { (isMobile && props.break) &&\n                        <ListItem>\n                            <ListItemSecondaryAction>\n                                {props.secondary}\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    }\n                </List>\n                </Grid>\n            }\n            { show && props.children}\n        </Grid>\n    );\n}\n\nGridSection.defaultProps = {\n    break: false,\n    show: true,\n    scroll: false,\n    xs: 12,\n    background: true,\n}\n \n\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n         \n    half: {\n        alignItems: \"center\",\n        display: \"flex\",\n        height: 42,\n        flexGrow: 1,\n        flexBasis: 0,\n        boxSizing: \"border-box\",\n    },\n    stack: {\n        height: \"auto\",\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        boxSizing: \"border-box\",\n        marginRight: 8,\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n        alignItems: \"center\",\n        paddingRight: 8,\n    },\n    padLeft: {\n        paddingLeft: 16,\n    },\n    slider: {\n        margin: \"-18px\"\n    }\n\n});\n\nexport default function SofaSlider(props) {\n    \n    const classes = useStyles();\n    const [value, setValue] = useState(0)\n    \n    useEffect(() => {\n        if (props.value) {\n            setValue(props.value)\n        }\n    }, [props.value]);\n\n    \n    function handlePreChange(event, value) {\n        setValue(value);\n        if (props.preChange) {\n            props.preChange(value);\n        }\n    }; \n\n    function handleChange(event,value) {\n        props.change(value);\n    }; \n   \n    function unitDisplay() {\n        if (Array.isArray(value)) {\n            return Math.floor(value[0])+' - '+ Math.floor(value[1])+props.unit\n        } else {\n            return Math.floor(value)+props.unit\n        }\n    }\n   \n    return (\n        <div style={{ \"minWidth\": props.minWidth }} className={ props.padLeft ? classes.stack+\" \"+classes.padLeft: ( props.half ? classes.half : classes.stack) } >\n        { props.name ?\n            <Typography variant={ props.smallText ? \"caption\" : \"subtitle1\" } className={classes.stackLabel} >{props.name}</Typography>\n        :   null }\n        { props.unit ?\n            <Typography variant=\"caption\" className={classes.stackLabel} >{unitDisplay()}</Typography>\n        : null }\n            <Slider\n                value={value} step={props.step} \n                min={props.min} max={props.max}\n                onChange={handlePreChange}\n                onChangeCommitted={handleChange}\n                disabled={props.disabled}\n            />\n        </div>\n    );\n}\n\nSofaSlider.defaultProps = {\n    name: '',\n    unit: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    default: 0,\n    value: 0,\n    tabs: '',\n    disabled: false,\n    padLeft: false,\n    half: false,\n    minWidth: 240,\n    smallText: false,\n}\n\n\n","import React, { useContext }from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { LayoutContext } from '../layout/NewLayoutProvider';\n\nimport GridItem from '../GridItem'\nimport ToggleAvatar from '../ToggleAvatar';\n\nexport default function TemperatureSensor(props) { \n    \n    const { applyLayoutCard, applyBackPage } = useContext(LayoutContext);\n    \n    function tempColor(temp) {\n        if (!temp) { return 'disabled' }\n        if (temp>=74) { return \"hot\" }\n        if (temp<70) { return \"cool\" }\n        return \"mid\";\n    }\n    \n    function switchToHistory() {\n        applyBackPage('ThermostatLayout',{})\n        applyLayoutCard('ThermostatHistory', { 'device':props.device, 'days':7})\n    }\n    \n    return (\n        \n        <GridItem wide={props.wide} >\n            <ListItem onClick={props.onClick}>\n                <ToggleAvatar onClick={ () => switchToHistory()} \n                    avatarState={ tempColor(props.device.TemperatureSensor.temperature.deepvalue) }>\n                    {props.device.TemperatureSensor.temperature.value ? props.device.TemperatureSensor.temperature.deepvalue : '--'}\n                </ToggleAvatar>\n                <ListItemText primary={props.device.friendlyName}  />\n           </ListItem>\n        </GridItem>\n    );\n}\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport { LayoutContext } from '../layout/NewLayoutProvider';\nimport { makeStyles } from '@material-ui/styles';\nimport { DeviceContext } from '../DataContext/DeviceProvider';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ToggleAvatar from '../ToggleAvatar';\nimport Button from '@material-ui/core/Button';\nimport ToysIcon from '@material-ui/icons/Toys';\n\nimport GridItem from '../GridItem'\nimport SofaSlider from '../SofaSlider'\n\nconst useStyles = makeStyles({\n\n    listItem: {\n        padding: \"0 0 16 24\",\n        width: '100%',\n    },\n    bottomListItem: {\n        padding: \"0 0 0 24\",\n        width: '100%',\n        minHeight: 64,\n    },\n\n    xlistItem: {\n        padding: \"16px 16px 8px 16px\",\n    },\n    listItemIndent: {\n        padding: \"16 0 8 64\",\n        width: '100%',\n    },\n    speedlistItem: {\n        padding: \"0 0 8 40\",\n        width: '100%',\n    },\n    buttonLine: {\n        display: \"flex\",\n        flexGrow: 1,\n        justifyContent: \"flex-end\",\n        padding: \"0 16 8 0\",\n    },\n    button: {\n        minWidth: 36\n    },\n    fanButton: {\n        minWidth: 36,\n        marginRight: 24,\n    },\n    list: {\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n    },\n});\n\nexport default function Thermostat(props) {\n    \n    const classes = useStyles();\n    const { applyLayoutCard, applyBackPage } = useContext(LayoutContext);\n    const { directive, getController} = useContext(DeviceContext);\n\n    const [targetSetpoint, setTargetSetpoint] = useState(70);\n    const [powerLevel, setPowerLevel] = useState(false)\n    const [fanSetMode, setFanSetMode] = useState(false);\n    //const device=deviceByEndpointId(props.device.endpointId)\n\n    useEffect(() => {\n        if (props.device.ThermostatController.hasOwnProperty('upperSetpoint')) {\n            setTargetSetpoint([props.device.ThermostatController.lowerSetpoint.deepvalue, props.device.ThermostatController.upperSetpoint.deepvalue ])\n        } else {\n            setTargetSetpoint(props.device.ThermostatController.targetSetpoint.deepvalue)\n        }\n        if (props.device.hasOwnProperty('PowerLevelController')) {\n            setPowerLevel(props.device.PowerLevelController.powerLevel.value)\n        }\n    }, [props.device]);\n\n\n    function supportedModes() {\n        try { return getController(props.device.endpointId, \"ThermostatController\").configuration.supportedModes }\n        catch {}\n        return []\n    }\n\n\n    function supportedRange() {\n        try {\n            return getController(props.device.endpointId, \"ThermostatController\").configuration.supportedRange\n        }\n        catch {}\n        \n        return [60,90]\n    }\n                    \n    \n    function tempColor(temp) {\n        if (!temp) { return 'disabled' } \n        if (temp>=74) { return \"hot\" }\n        if (temp<70) { return \"cool\" }\n        return \"mid\";\n    }\n    \n    function handlePrePowerLevelChange(event) {\n        setPowerLevel(event);\n    }; \n    \n    function handlePowerLevelChange(event) {\n        directive(props.device.endpointId, \"PowerLevelController\", \"SetPowerLevel\", {\"powerLevel\": event})\n    }; \n\n    function handlePreSetpointChange(event) {\n        setTargetSetpoint(event);\n    }; \n    \n    function handleSetpointChange(event) {\n        directive(props.device.endpointId, \"ThermostatController\", \"SetTargetTemperature\", { \"targetSetpoint\": { \"value\": event, \"scale\": \"FAHRENHEIT\"}} )\n    }; \n\n    function handleSetMode(event) {\n        directive(props.device.endpointId, \"ThermostatController\", \"SetThermostatMode\",  {\"thermostatMode\" : { \"value\": event }} )\n    }; \n    \n    function switchToHistory() {\n        applyBackPage('ThermostatLayout',{})\n        applyLayoutCard('ThermostatHistory', { 'device':props.device, 'days':7})\n    }\n\n\n    return ( \n        <GridItem>\n            <List className={classes.list} >\n                <ListItem>\n                    <ToggleAvatar \n                        avatarState={ tempColor(props.device.TemperatureSensor.temperature.deepvalue) }\n                        onClick={ () => switchToHistory()} >\n                            {props.device.TemperatureSensor.temperature.deepvalue ? props.device.TemperatureSensor.temperature.deepvalue : '--'}\n                    </ToggleAvatar>\n                    <SofaSlider min={supportedRange()[0]} max={supportedRange()[1]} defaultValue={70} value={targetSetpoint} unit={\"°\"} name={props.device.friendlyName}\n                                preChange={handlePreSetpointChange} change={handleSetpointChange} \n                                disabled={ props.device.ThermostatController.thermostatMode.value==='OFF' } />\n                </ListItem>\n                <ListItem className={classes.bottomListItem}>\n                    <>\n                        { powerLevel!==false &&\n                            <>\n                                { fanSetMode ?\n                                    <>\n                                        <Button size=\"small\" className={classes.fanButton } onClick={ ()=> setFanSetMode(false)}>\n                                            {props.device.ThermostatController.thermostatMode.value}\n                                        </Button>\n                                        <ListItemIcon><ToysIcon /></ListItemIcon>\n                                        <SofaSlider value={powerLevel} step={10} unit={\"%\"} name={\"Fan Speed\"} padLeft={false} minWidth={100}\n                                            preChange={handlePrePowerLevelChange} change={handlePowerLevelChange} />\n                                    </>\n                                :\n                                    <Button size=\"small\" className={classes.fanButton } onClick={ ()=> setFanSetMode(true)}>\n                                        <ToysIcon />{powerLevel}%\n                                    </Button>                        \n                                }\n                            </>\n                        }\n                    </>\n                    <>\n                        {!fanSetMode &&\n                        <>\n                            { supportedModes().map((mode) => (\n                                <Button onClick={ (e) => handleSetMode(mode)} size=\"small\" key = {mode+'m'} color={ props.device.ThermostatController.thermostatMode.value===mode ? \"primary\" : \"default\" } className={classes.button }>\n                                {mode}\n                                </Button>\n                            ))}\n                        </>\n                        }\n                    </>\n                </ListItem>\n            </List>\n        </GridItem>\n    );\n}\n","import React from 'react';\nimport { useContext } from 'react';\nimport { DataContext } from './DataContext/DataProvider';\n\nimport GridSection from './GridSection';\nimport TemperatureSensor from './thermostat/TemperatureSensor';\nimport Thermostat from './thermostat/Thermostat';\n\nexport default function ThermostatLayout(props) {\n\n    const { deviceStatesByCategory } = useContext(DataContext);\n    const thermostats=deviceStatesByCategory('THERMOSTAT')\n    const temperatureSensors=deviceStatesByCategory('TEMPERATURE_SENSOR')\n\n    return (    \n        <React.Fragment>\n            <GridSection name={\"Thermostats\"}>\n                { thermostats.map((device) =>\n                    <Thermostat key={ device.endpointId } device={ device }  />\n                )}\n            </GridSection>\n            \n            <GridSection name={\"Temperatures\"}>\n                { temperatureSensors.map((device) =>\n                    <TemperatureSensor key={ device.endpointId } device={ device } />\n                )}\n            </GridSection>\n        </React.Fragment>\n    )\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 12c0-3 2.5-5.5 5.5-5.5S23 9 23 12H12zm0 0c0 3-2.5 5.5-5.5 5.5S1 15 1 12h11zm0 0c-3 0-5.5-2.5-5.5-5.5S9 1 12 1v11zm0 0c3 0 5.5 2.5 5.5 5.5S15 23 12 23V12z\"\n}), 'Toys');\n\nexports.default = _default;"],"sourceRoot":""}